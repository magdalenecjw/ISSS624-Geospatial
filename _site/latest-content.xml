<?xml version="1.0" encoding="UTF-8"?>
<rss  xmlns:atom="http://www.w3.org/2005/Atom" 
      xmlns:media="http://search.yahoo.com/mrss/" 
      xmlns:content="http://purl.org/rss/1.0/modules/content/" 
      xmlns:dc="http://purl.org/dc/elements/1.1/" 
      version="2.0">
<channel>
<title>Geospatial Analytics</title>
<link>https://geospatial2023.netlify.app/latest-content.html</link>
<atom:link href="https://geospatial2023.netlify.app/latest-content.xml" rel="self" type="application/rss+xml"/>
<description></description>
<image>
<url>https://geospatial2023.netlify.app/Images/logo.png</url>
<title>Geospatial Analytics</title>
<link>https://geospatial2023.netlify.app/latest-content.html</link>
</image>
<generator>quarto-1.3.433</generator>
<lastBuildDate>Fri, 24 Nov 2023 16:00:00 GMT</lastBuildDate>
<item>
  <title>1: Geospatial Analytics for Public Good</title>
  <dc:creator>Magdalene Chan</dc:creator>
  <link>https://geospatial2023.netlify.app/Take_Home_Exercise/Ex1/Take_home_Ex1.html</link>
  <description><![CDATA[ 



<section id="objectives" class="level1">
<h1>Objectives</h1>
<p>As city-wide urban infrastructures become increasingly digital, datasets from technologies like GPS and RFID on vehicles offer opportunities to track movement patterns over space and time. For instance, smart cards and GPS devices on public buses collect routes and ridership data, containing valuable structure and patterns for understanding human movement and behavior within cities. Despite their potential, the practical use of these extensive location-aware datasets often remains limited to basic tracking and mapping within GIS applications due to the lack of comprehensive spatial and spatio-temporal analysis functions in conventional GIS tools.</p>
<p>Exploratory Spatial Data Analysis (ESDA) holds tremendous potential to address such complex problems. In this study, appropriate Local Indicators of Spatial Association (GLISA) and Emerging Hot Spot Analysis (EHSA) will be applied to undercover the spatial and spatio-temporal mobility patterns of public bus passengers in Singapore.</p>
</section>
<section id="tasks" class="level1">
<h1>Tasks</h1>
<p>The following tasks will be undertaken in this exercise:</p>
<section id="geovisualisation-and-analysis" class="level2">
<h2 class="anchored" data-anchor-id="geovisualisation-and-analysis">Geovisualisation and Analysis</h2>
<ol type="1">
<li>Compute the passenger trips generated by origin at a hexagon level of 250m for the following time periods:
<ol type="1">
<li>Weekday morning peak – 6am to 9am (inclusive)</li>
<li>Weekday evening peak – 5pm to 8pm (inclusive)</li>
<li>Weekend/holiday morning peak – 11am to 2pm (inclusive)</li>
<li>Weekend/holiday evening peak – 4pm to 7pm (inclusive)</li>
</ol></li>
<li>Display the geographical distribution of the passenger trips using appropriate geovisualisation methods.</li>
<li>Describe the spatial patterns revealed by the geovisualisation (not more than 200 words per visual).</li>
</ol>
</section>
<section id="local-indicators-of-spatial-association-lisa-analysis" class="level2">
<h2 class="anchored" data-anchor-id="local-indicators-of-spatial-association-lisa-analysis">Local Indicators of Spatial Association (LISA) Analysis</h2>
<ol type="1">
<li>Compute LISA of the passengers trips generate by origin at hexagon level.</li>
<li>Display the LISA maps of the passengers trips generate by origin at hexagon level. The maps should only display the significant (i.e.&nbsp;p-value &lt; 0.05).</li>
<li>With reference to the analysis results, draw statistical conclusions (not more than 200 words per visual).</li>
</ol>
</section>
</section>
<section id="getting-started" class="level1">
<h1>Getting Started</h1>
<p>The code chunk below uses <code>p_load()</code> of <code>pacman</code> package to check if the required packages have been installed on the computer. If they are, the packages will be launched.</p>
<ul>
<li><code>sf</code> package is used for importing, managing, and processing geospatial data.</li>
<li><code>tmap</code> package is used for thematic mapping.</li>
<li><code>sfdep</code> package is used to create spatial weights matrix and LISA objects using the sf class to represent spatial data.</li>
</ul>
<div class="cell">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1">pacman<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">p_load</span>(sf, sfdep, tmap, tidyverse, knitr)</span></code></pre></div>
</details>
</div>
<p>The data sets used are:</p>
<ul>
<li>Bus Stop Location (Last updated Jul 2023) from <a href="https://datamall.lta.gov.sg/content/datamall/en/static-data.html">LTADataMall</a> retrieved on 18 Nov 2023</li>
<li>Passenger Volume by Origin Destination Bus Stops for Aug-Oct 2023 from <a href="https://datamall.lta.gov.sg/content/datamall/en/dynamic-data.html">LTADataMall</a> retrieved on 18 Nov 2023</li>
</ul>
</section>
<section id="import-data" class="level1">
<h1>Import Data</h1>
<section id="import-geospatial-data-bus-stop-locations" class="level2">
<h2 class="anchored" data-anchor-id="import-geospatial-data-bus-stop-locations">Import Geospatial Data: Bus Stop Locations</h2>
<p>The code chunk below uses the <code>st_read()</code> function of <strong>sf</strong> package to import <code>BusStop</code> shapefile into R as a simple feature data frame called <code>BusStop</code>. As <code>BusStop</code> uses <strong>svy21</strong> projected coordinate system, the <code>crs</code> is set to 3414.</p>
<div class="cell">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1">BusStop <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">st_read</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">dsn =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"data/geospatial"</span>, </span>
<span id="cb2-2">                <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">layer =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"BusStop"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb2-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">st_transform</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">crs=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3414</span>)</span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>Reading layer `BusStop' from data source 
  `C:\magdalenecjw\ISSS624 Geospatial\Take_Home_Exercise\Ex1\data\geospatial' 
  using driver `ESRI Shapefile'
Simple feature collection with 5161 features and 3 fields
Geometry type: POINT
Dimension:     XY
Bounding box:  xmin: 3970.122 ymin: 26482.1 xmax: 48284.56 ymax: 52983.82
Projected CRS: SVY21</code></pre>
</div>
</div>
</section>
<section id="import-passenger-volume-by-origin-destination-bus-stops" class="level2">
<h2 class="anchored" data-anchor-id="import-passenger-volume-by-origin-destination-bus-stops">Import Passenger Volume by Origin-Destination Bus Stops</h2>
<p>The code chunk below uses the <code>read_csv()</code> function of <code>readr</code> package (imported with the <code>tidyverse</code> package) to import the csv files into R. A list called <code>list_of_data</code> is created and each CSV file is imported into a separate data frame within this list. The names of the data frames are generated dynamically based on the file names i.e.&nbsp;by extracting the month-year part of the csv file name. Finally, to access the data frames within the <code>list_of_data</code> without explicitly assigning them to new variables, the <code>list2env()</code> function in R is used.</p>
<div class="cell">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create a list to store the data frames</span></span>
<span id="cb4-2">file_names <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"origin_destination_bus_202308.csv"</span>, </span>
<span id="cb4-3">                <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"origin_destination_bus_202309.csv"</span>, </span>
<span id="cb4-4">                <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"origin_destination_bus_202310.csv"</span>)</span>
<span id="cb4-5">list_of_data <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>()</span>
<span id="cb4-6"></span>
<span id="cb4-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Load CSV files into R environment</span></span>
<span id="cb4-8"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> (i <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(file_names)) {</span>
<span id="cb4-9">  file_name <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> file_names[i]</span>
<span id="cb4-10">  df_name <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">paste0</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"odbus_"</span>, </span>
<span id="cb4-11">                    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">substr</span>(file_name, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">nchar</span>(file_name) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">9</span>, </span>
<span id="cb4-12">                           <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">nchar</span>(file_name) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>))</span>
<span id="cb4-13">  list_of_data[[df_name]] <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">read.csv</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">paste0</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"data/aspatial/"</span>, file_name))</span>
<span id="cb4-14">}</span>
<span id="cb4-15"></span>
<span id="cb4-16"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Convert list elements to separate data frames in the global environment</span></span>
<span id="cb4-17"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list2env</span>(list_of_data, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">envir =</span> .GlobalEnv)</span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>&lt;environment: R_GlobalEnv&gt;</code></pre>
</div>
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb6-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Remove the `list_of_data` data frame</span></span>
<span id="cb6-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rm</span>(list_of_data)</span></code></pre></div>
</details>
</div>
<p>Examine the structure of the data frames using the code chunks below.</p>
<div class="tabset-margin-container"></div><div class="panel-tabset">
<ul class="nav nav-tabs"><li class="nav-item"><a class="nav-link active" id="tabset-1-1-tab" data-bs-toggle="tab" data-bs-target="#tabset-1-1" aria-controls="tabset-1-1" aria-selected="true">August 2023 data</a></li><li class="nav-item"><a class="nav-link" id="tabset-1-2-tab" data-bs-toggle="tab" data-bs-target="#tabset-1-2" aria-controls="tabset-1-2" aria-selected="false">September 2023 data</a></li><li class="nav-item"><a class="nav-link" id="tabset-1-3-tab" data-bs-toggle="tab" data-bs-target="#tabset-1-3" aria-controls="tabset-1-3" aria-selected="false">October 2023 data</a></li></ul>
<div class="tab-content">
<div id="tabset-1-1" class="tab-pane active" aria-labelledby="tabset-1-1-tab">
<div class="cell">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb7-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">str</span>(odbus_202308)</span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>'data.frame':   5709512 obs. of  7 variables:
 $ YEAR_MONTH         : chr  "2023-08" "2023-08" "2023-08" "2023-08" ...
 $ DAY_TYPE           : chr  "WEEKDAY" "WEEKENDS/HOLIDAY" "WEEKENDS/HOLIDAY" "WEEKDAY" ...
 $ TIME_PER_HOUR      : int  16 16 14 14 17 17 17 17 7 17 ...
 $ PT_TYPE            : chr  "BUS" "BUS" "BUS" "BUS" ...
 $ ORIGIN_PT_CODE     : int  4168 4168 80119 80119 44069 44069 20281 20281 19051 11169 ...
 $ DESTINATION_PT_CODE: int  10051 10051 90079 90079 17229 17229 20141 20141 10017 4219 ...
 $ TOTAL_TRIPS        : int  7 2 3 10 5 4 3 22 3 3 ...</code></pre>
</div>
</div>
</div>
<div id="tabset-1-2" class="tab-pane" aria-labelledby="tabset-1-2-tab">
<div class="cell">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb9-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">str</span>(odbus_202309)</span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>'data.frame':   5714196 obs. of  7 variables:
 $ YEAR_MONTH         : chr  "2023-09" "2023-09" "2023-09" "2023-09" ...
 $ DAY_TYPE           : chr  "WEEKENDS/HOLIDAY" "WEEKENDS/HOLIDAY" "WEEKDAY" "WEEKDAY" ...
 $ TIME_PER_HOUR      : int  17 10 10 7 7 11 16 16 16 20 ...
 $ PT_TYPE            : chr  "BUS" "BUS" "BUS" "BUS" ...
 $ ORIGIN_PT_CODE     : int  24499 65239 65239 23519 23519 52509 3151 54349 54349 43371 ...
 $ DESTINATION_PT_CODE: int  22221 65159 65159 23311 23311 42041 11161 53241 53241 14139 ...
 $ TOTAL_TRIPS        : int  1 9 2 6 1 2 18 3 2 1 ...</code></pre>
</div>
</div>
</div>
<div id="tabset-1-3" class="tab-pane" aria-labelledby="tabset-1-3-tab">
<div class="cell">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb11-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">str</span>(odbus_202310)</span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>'data.frame':   5694297 obs. of  7 variables:
 $ YEAR_MONTH         : chr  "2023-10" "2023-10" "2023-10" "2023-10" ...
 $ DAY_TYPE           : chr  "WEEKENDS/HOLIDAY" "WEEKDAY" "WEEKENDS/HOLIDAY" "WEEKDAY" ...
 $ TIME_PER_HOUR      : int  16 16 14 14 17 17 17 7 14 14 ...
 $ PT_TYPE            : chr  "BUS" "BUS" "BUS" "BUS" ...
 $ ORIGIN_PT_CODE     : int  4168 4168 80119 80119 44069 20281 20281 19051 81049 81049 ...
 $ DESTINATION_PT_CODE: int  10051 10051 90079 90079 17229 20141 20141 10017 70161 70161 ...
 $ TOTAL_TRIPS        : int  3 5 3 5 4 1 24 2 1 7 ...</code></pre>
</div>
</div>
</div>
</div>
</div>
<p>Based on the data frame structures seen above, <code>ORIGIN_PT_CODE</code> and <code>DESTINATION_PT_CODE</code> are listed as integer variables, though they are categorical in nature. As such, they should be transformed to factors so that R treats them as a grouping variable. Additionally, the length of the integer variables are a mixture of 4 and 5 numeric characters. However, bus stops in Singapore are identifiable via a 5-digit bus stop code. As such, we will need to standardise the variable length.</p>
<div class="tabset-margin-container"></div><div class="panel-tabset">
<ul class="nav nav-tabs"><li class="nav-item"><a class="nav-link active" id="tabset-2-1-tab" data-bs-toggle="tab" data-bs-target="#tabset-2-1" aria-controls="tabset-2-1" aria-selected="true">August 2023 data</a></li><li class="nav-item"><a class="nav-link" id="tabset-2-2-tab" data-bs-toggle="tab" data-bs-target="#tabset-2-2" aria-controls="tabset-2-2" aria-selected="false">September 2023 data</a></li><li class="nav-item"><a class="nav-link" id="tabset-2-3-tab" data-bs-toggle="tab" data-bs-target="#tabset-2-3" aria-controls="tabset-2-3" aria-selected="false">October 2023 data</a></li></ul>
<div class="tab-content">
<div id="tabset-2-1" class="tab-pane active" aria-labelledby="tabset-2-1-tab">
<div class="cell">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb13-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Columns to convert to factors</span></span>
<span id="cb13-2">columns_to_convert <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ORIGIN_PT_CODE"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"DESTINATION_PT_CODE"</span>)</span>
<span id="cb13-3"></span>
<span id="cb13-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Ensure length of 5 characters for specific columns</span></span>
<span id="cb13-5">odbus_202308[columns_to_convert] <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lapply</span>(odbus_202308[columns_to_convert], <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span>(x) {</span>
<span id="cb13-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sprintf</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"%05d"</span>, x)</span>
<span id="cb13-7">})</span>
<span id="cb13-8"></span>
<span id="cb13-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Apply as.factor() to the adjusted columns</span></span>
<span id="cb13-10">odbus_202308[columns_to_convert] <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lapply</span>(odbus_202308[columns_to_convert], as.factor)</span>
<span id="cb13-11"></span>
<span id="cb13-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Re-examine the structure of the data frame</span></span>
<span id="cb13-13"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">str</span>(odbus_202308)</span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>'data.frame':   5709512 obs. of  7 variables:
 $ YEAR_MONTH         : chr  "2023-08" "2023-08" "2023-08" "2023-08" ...
 $ DAY_TYPE           : chr  "WEEKDAY" "WEEKENDS/HOLIDAY" "WEEKENDS/HOLIDAY" "WEEKDAY" ...
 $ TIME_PER_HOUR      : int  16 16 14 14 17 17 17 17 7 17 ...
 $ PT_TYPE            : chr  "BUS" "BUS" "BUS" "BUS" ...
 $ ORIGIN_PT_CODE     : Factor w/ 5067 levels "01012","01013",..: 104 104 4422 4422 2008 2008 832 832 779 355 ...
 $ DESTINATION_PT_CODE: Factor w/ 5071 levels "01012","01013",..: 239 239 4736 4736 691 691 807 807 234 107 ...
 $ TOTAL_TRIPS        : int  7 2 3 10 5 4 3 22 3 3 ...</code></pre>
</div>
</div>
</div>
<div id="tabset-2-2" class="tab-pane" aria-labelledby="tabset-2-2-tab">
<div class="cell">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb15-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Ensure length of 5 characters for specific columns</span></span>
<span id="cb15-2">odbus_202309[columns_to_convert] <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lapply</span>(odbus_202309[columns_to_convert], <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span>(x) {</span>
<span id="cb15-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sprintf</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"%05d"</span>, x)</span>
<span id="cb15-4">})</span>
<span id="cb15-5"></span>
<span id="cb15-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Apply as.factor() to the adjusted columns</span></span>
<span id="cb15-7">odbus_202309[columns_to_convert] <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lapply</span>(odbus_202309[columns_to_convert], as.factor)</span>
<span id="cb15-8"></span>
<span id="cb15-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Re-examine the structure of the data frame</span></span>
<span id="cb15-10"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">str</span>(odbus_202309)</span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>'data.frame':   5714196 obs. of  7 variables:
 $ YEAR_MONTH         : chr  "2023-09" "2023-09" "2023-09" "2023-09" ...
 $ DAY_TYPE           : chr  "WEEKENDS/HOLIDAY" "WEEKENDS/HOLIDAY" "WEEKDAY" "WEEKDAY" ...
 $ TIME_PER_HOUR      : int  17 10 10 7 7 11 16 16 16 20 ...
 $ PT_TYPE            : chr  "BUS" "BUS" "BUS" "BUS" ...
 $ ORIGIN_PT_CODE     : Factor w/ 5067 levels "01012","01013",..: 1201 3608 3608 1154 1154 2726 67 2866 2866 1906 ...
 $ DESTINATION_PT_CODE: Factor w/ 5072 levels "01012","01013",..: 1008 3598 3598 1125 1125 1793 354 2777 2777 515 ...
 $ TOTAL_TRIPS        : int  1 9 2 6 1 2 18 3 2 1 ...</code></pre>
</div>
</div>
</div>
<div id="tabset-2-3" class="tab-pane" aria-labelledby="tabset-2-3-tab">
<div class="cell">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb17" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb17-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Ensure length of 5 characters for specific columns</span></span>
<span id="cb17-2">odbus_202310[columns_to_convert] <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lapply</span>(odbus_202310[columns_to_convert], <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span>(x) {</span>
<span id="cb17-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sprintf</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"%05d"</span>, x)</span>
<span id="cb17-4">})</span>
<span id="cb17-5"></span>
<span id="cb17-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Apply as.factor() to the adjusted columns</span></span>
<span id="cb17-7">odbus_202310[columns_to_convert] <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lapply</span>(odbus_202310[columns_to_convert], as.factor)</span>
<span id="cb17-8"></span>
<span id="cb17-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Re-examine the structure of the data frame</span></span>
<span id="cb17-10"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">str</span>(odbus_202310)</span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>'data.frame':   5694297 obs. of  7 variables:
 $ YEAR_MONTH         : chr  "2023-10" "2023-10" "2023-10" "2023-10" ...
 $ DAY_TYPE           : chr  "WEEKENDS/HOLIDAY" "WEEKDAY" "WEEKENDS/HOLIDAY" "WEEKDAY" ...
 $ TIME_PER_HOUR      : int  16 16 14 14 17 17 17 7 14 14 ...
 $ PT_TYPE            : chr  "BUS" "BUS" "BUS" "BUS" ...
 $ ORIGIN_PT_CODE     : Factor w/ 5073 levels "01012","01013",..: 105 105 4428 4428 2011 834 834 781 4462 4462 ...
 $ DESTINATION_PT_CODE: Factor w/ 5077 levels "01012","01013",..: 240 240 4742 4742 693 809 809 235 4002 4002 ...
 $ TOTAL_TRIPS        : int  3 5 3 5 4 1 24 2 1 7 ...</code></pre>
</div>
</div>
</div>
</div>
</div>
</section>
<section id="extract-commuting-flow-data" class="level2">
<h2 class="anchored" data-anchor-id="extract-commuting-flow-data">Extract Commuting Flow data</h2>
<p>The code chunk below creates a function to extract commuting flows for the 4 target time periods. After extracting the commuting flow, the function will check for missing Bus Stops against the <code>BusStop</code> data set, and impute a value of <code>0</code> if so.</p>
<div class="cell">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb19" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb19-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create a function that takes in two inputs to extract commuting flow</span></span>
<span id="cb19-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># data -- Input odbus data</span></span>
<span id="cb19-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># BusStopList -- Input full list of bus stops for checking</span></span>
<span id="cb19-4">commuting_flow <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span>(data, BusStopList) {</span>
<span id="cb19-5">  </span>
<span id="cb19-6">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Extract commuting flow for weekday morning peak</span></span>
<span id="cb19-7">  weekday_morn <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> data <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb19-8">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(DAY_TYPE <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"WEEKDAY"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb19-9">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(TIME_PER_HOUR <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> TIME_PER_HOUR <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">9</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb19-10">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">group_by</span>(ORIGIN_PT_CODE) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb19-11">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summarise</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">TRIPS =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sum</span>(TOTAL_TRIPS)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb19-12">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">SOURCE =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"weekday morning"</span>)</span>
<span id="cb19-13">  </span>
<span id="cb19-14">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Identify missing Bus Stops and impute a 0 value</span></span>
<span id="cb19-15">  weekday_morn_missing <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> BusStopList <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb19-16">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">anti_join</span>(weekday_morn, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">by =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ORIGIN_PT_CODE"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb19-17">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">TRIPS =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb19-18">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">SOURCE =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"weekday morning"</span>)</span>
<span id="cb19-19">  </span>
<span id="cb19-20">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Extract commuting flow for weekday evening peak</span></span>
<span id="cb19-21">  weekday_evening <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> data <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb19-22">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(DAY_TYPE <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"WEEKDAY"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb19-23">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(TIME_PER_HOUR <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">17</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> TIME_PER_HOUR <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb19-24">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">group_by</span>(ORIGIN_PT_CODE) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb19-25">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summarise</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">TRIPS =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sum</span>(TOTAL_TRIPS))<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb19-26">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">SOURCE =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"weekday evening"</span>)</span>
<span id="cb19-27">  </span>
<span id="cb19-28">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Identify missing Bus Stops and impute a 0 value</span></span>
<span id="cb19-29">  weekday_evening_missing <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> BusStopList <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb19-30">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">anti_join</span>(weekday_evening, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">by =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ORIGIN_PT_CODE"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb19-31">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">TRIPS =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb19-32">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">SOURCE =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"weekday evening"</span>)</span>
<span id="cb19-33">  </span>
<span id="cb19-34">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Extract commuting flow for weekend morning peak</span></span>
<span id="cb19-35">  weekend_morn <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> data <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb19-36">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(DAY_TYPE <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"WEEKENDS/HOLIDAY"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb19-37">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(TIME_PER_HOUR <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">11</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> TIME_PER_HOUR <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">14</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb19-38">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">group_by</span>(ORIGIN_PT_CODE) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb19-39">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summarise</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">TRIPS =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sum</span>(TOTAL_TRIPS))<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb19-40">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">SOURCE =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"weekend morning"</span>)</span>
<span id="cb19-41">  </span>
<span id="cb19-42">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Identify missing Bus Stops and impute a 0 value</span></span>
<span id="cb19-43">  weekend_morn_missing <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> BusStopList <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb19-44">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">anti_join</span>(weekend_morn, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">by =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ORIGIN_PT_CODE"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb19-45">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">TRIPS =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb19-46">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">SOURCE =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"weekend morning"</span>)</span>
<span id="cb19-47">  </span>
<span id="cb19-48">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Extract commuting flow for weekend evening peak</span></span>
<span id="cb19-49">  weekend_evening <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> data <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb19-50">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(DAY_TYPE <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"WEEKENDS/HOLIDAY"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb19-51">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(TIME_PER_HOUR <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> TIME_PER_HOUR <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">19</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb19-52">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">group_by</span>(ORIGIN_PT_CODE) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb19-53">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summarise</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">TRIPS =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sum</span>(TOTAL_TRIPS))<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb19-54">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">SOURCE =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"weekend evening"</span>)</span>
<span id="cb19-55">  </span>
<span id="cb19-56">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Identify missing Bus Stops and impute a 0 value</span></span>
<span id="cb19-57">  weekend_evening_missing <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> BusStopList <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb19-58">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">anti_join</span>(weekend_evening, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">by =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ORIGIN_PT_CODE"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb19-59">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">TRIPS =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb19-60">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">SOURCE =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"weekend evening"</span>)</span>
<span id="cb19-61">  </span>
<span id="cb19-62">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Combine the data frames</span></span>
<span id="cb19-63">  result <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rbind</span>(weekday_morn, weekday_morn_missing, </span>
<span id="cb19-64">                  weekday_evening, weekday_evening_missing, </span>
<span id="cb19-65">                  weekend_morn, weekend_morn_missing,</span>
<span id="cb19-66">                  weekend_evening, weekend_evening_missing)</span>
<span id="cb19-67">  </span>
<span id="cb19-68">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">return</span>(result)</span>
<span id="cb19-69">}</span></code></pre></div>
</details>
</div>
<p>The function can then be applied to each month’s <code>odbus</code> data frame to extract commuting flows for the 4 target time periods within each month.</p>
<div class="tabset-margin-container"></div><div class="panel-tabset">
<ul class="nav nav-tabs"><li class="nav-item"><a class="nav-link active" id="tabset-3-1-tab" data-bs-toggle="tab" data-bs-target="#tabset-3-1" aria-controls="tabset-3-1" aria-selected="true">August 2023 data</a></li><li class="nav-item"><a class="nav-link" id="tabset-3-2-tab" data-bs-toggle="tab" data-bs-target="#tabset-3-2" aria-controls="tabset-3-2" aria-selected="false">September 2023 data</a></li><li class="nav-item"><a class="nav-link" id="tabset-3-3-tab" data-bs-toggle="tab" data-bs-target="#tabset-3-3" aria-controls="tabset-3-3" aria-selected="false">October 2023 data</a></li></ul>
<div class="tab-content">
<div id="tabset-3-1" class="tab-pane active" aria-labelledby="tabset-3-1-tab">
<div class="cell">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb20" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb20-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create a list of full Bus Stop codes for checking</span></span>
<span id="cb20-2">BusStopList <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data.frame</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ORIGIN_PT_CODE =</span> BusStop<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>BUS_STOP_N)</span>
<span id="cb20-3"></span>
<span id="cb20-4">odbus_202308_commuterflow <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">commuting_flow</span>(odbus_202308, BusStopList)</span></code></pre></div>
</details>
</div>
<p>The code chunk below will be used to check that all bus stops have four rows of data (i.e.&nbsp;weekday morning, weekday evening, weekend morning and weekend evening). If there are any bus stops with less than four rows of data, the Bus Stop codes will be printed and checked against the list of full Bus Stop codes.</p>
<div class="cell">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb21" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb21-1">odbus_202308_check <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> odbus_202308_commuterflow <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb21-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">count</span>(ORIGIN_PT_CODE) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb21-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(n <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>) </span>
<span id="cb21-4"></span>
<span id="cb21-5">result_202308 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> odbus_202308_commuterflow <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb21-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Message =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ifelse</span>(ORIGIN_PT_CODE <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%in%</span> BusStopList<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>ORIGIN_PT_CODE, </span>
<span id="cb21-7">                          <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cannot be found"</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb21-8">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(Message <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cannot be found"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb21-9">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">select</span>(ORIGIN_PT_CODE, Message) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb21-10">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unique</span>()</span>
<span id="cb21-11"></span>
<span id="cb21-12"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">print</span>(result_202308)</span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code># A tibble: 54 × 2
   ORIGIN_PT_CODE Message        
   &lt;fct&gt;          &lt;chr&gt;          
 1 03361          cannot be found
 2 03549          cannot be found
 3 03579          cannot be found
 4 04331          cannot be found
 5 14529          cannot be found
 6 14539          cannot be found
 7 18111          cannot be found
 8 41161          cannot be found
 9 44099          cannot be found
10 44931          cannot be found
# … with 44 more rows</code></pre>
</div>
</div>
<p>A search online shows that some of these can be clearly identified as new bus stops. Given that our geospatial data for bus stop locations is last updated in July 2023 while our aspatial passenger volume data is from August to October 2023, this could be a possible explanation for why some of the bus stops cannot be found in the geospatial data.</p>
<p>Given that these bus stops cannot be located within the geospatial data, we will drop these Bus Stops from our analysis.</p>
<div class="cell">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb23" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb23-1">odbus_202308_final <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> odbus_202308_commuterflow <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb23-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">anti_join</span>(odbus_202308_check, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">by =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ORIGIN_PT_CODE"</span>)</span>
<span id="cb23-3"></span>
<span id="cb23-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">str</span>(odbus_202308_final)</span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>tibble [20,760 × 3] (S3: tbl_df/tbl/data.frame)
 $ ORIGIN_PT_CODE: Factor w/ 5199 levels "01012","01013",..: 1 2 3 4 5 6 7 8 9 10 ...
 $ TRIPS         : num [1:20760] 1973 952 1789 2561 2938 ...
 $ SOURCE        : chr [1:20760] "weekday morning" "weekday morning" "weekday morning" "weekday morning" ...</code></pre>
</div>
</div>
</div>
<div id="tabset-3-2" class="tab-pane" aria-labelledby="tabset-3-2-tab">
<div class="cell">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb25" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb25-1">odbus_202309_commuterflow <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">commuting_flow</span>(odbus_202309, BusStopList)</span></code></pre></div>
</details>
</div>
<p>The code chunk below will be used to check that all bus stops have four rows of data (i.e.&nbsp;weekday morning, weekday evening, weekend morning and weekend evening). If there are any bus stops with less than four rows of data, the Bus Stop codes will be printed and checked against the list of full Bus Stop codes.</p>
<div class="cell">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb26" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb26-1">odbus_202309_check <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> odbus_202309_commuterflow <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb26-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">count</span>(ORIGIN_PT_CODE) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb26-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(n <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>) </span>
<span id="cb26-4"></span>
<span id="cb26-5">result_202309 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> odbus_202309_check <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb26-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Message =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ifelse</span>(ORIGIN_PT_CODE <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%in%</span> BusStopList<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>ORIGIN_PT_CODE, </span>
<span id="cb26-7">                          <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cannot be found"</span>))</span>
<span id="cb26-8"></span>
<span id="cb26-9"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">print</span>(result_202309)</span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code># A tibble: 9 × 3
  ORIGIN_PT_CODE     n Message        
  &lt;fct&gt;          &lt;int&gt; &lt;chr&gt;          
1 03549              2 cannot be found
2 14521              3 cannot be found
3 68181              2 cannot be found
4 68189              2 cannot be found
5 68191              1 cannot be found
6 68199              1 cannot be found
7 96461              3 cannot be found
8 96471              3 cannot be found
9 96479              3 cannot be found</code></pre>
</div>
</div>
<p>Given that these bus stops cannot be located within the geospatial data, we will drop these Bus Stops from our analysis.</p>
<div class="cell">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb28" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb28-1">odbus_202309_final <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> odbus_202309_commuterflow <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb28-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">anti_join</span>(odbus_202309_check, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">by =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ORIGIN_PT_CODE"</span>)</span>
<span id="cb28-3"></span>
<span id="cb28-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">str</span>(odbus_202309_final)</span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>tibble [20,760 × 3] (S3: tbl_df/tbl/data.frame)
 $ ORIGIN_PT_CODE: Factor w/ 5199 levels "01012","01013",..: 1 2 3 4 5 6 7 8 9 10 ...
 $ TRIPS         : num [1:20760] 1640 764 1322 2373 2562 ...
 $ SOURCE        : chr [1:20760] "weekday morning" "weekday morning" "weekday morning" "weekday morning" ...</code></pre>
</div>
</div>
</div>
<div id="tabset-3-3" class="tab-pane" aria-labelledby="tabset-3-3-tab">
<div class="cell">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb30" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb30-1">odbus_202310_commuterflow <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">commuting_flow</span>(odbus_202310, BusStopList)</span></code></pre></div>
</details>
</div>
<p>The code chunk below will be used to check that all bus stops have four rows of data (i.e.&nbsp;weekday morning, weekday evening, weekend morning and weekend evening). If there are any bus stops with less than four rows of data, the Bus Stop codes will be printed and checked against the list of full Bus Stop codes.</p>
<div class="cell">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb31" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb31-1">odbus_202310_check <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> odbus_202310_commuterflow <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb31-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">count</span>(ORIGIN_PT_CODE) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb31-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(n <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>) </span>
<span id="cb31-4"></span>
<span id="cb31-5">result_202310 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> odbus_202310_check <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb31-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Message =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ifelse</span>(ORIGIN_PT_CODE <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%in%</span> BusStopList<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>ORIGIN_PT_CODE, </span>
<span id="cb31-7">                          <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cannot be found"</span>))</span>
<span id="cb31-8"></span>
<span id="cb31-9"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">print</span>(result_202310)</span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code># A tibble: 10 × 3
   ORIGIN_PT_CODE     n Message        
   &lt;fct&gt;          &lt;int&gt; &lt;chr&gt;          
 1 03549              3 cannot be found
 2 14521              3 cannot be found
 3 44711              2 cannot be found
 4 68181              2 cannot be found
 5 68189              2 cannot be found
 6 68191              2 cannot be found
 7 68199              2 cannot be found
 8 96461              3 cannot be found
 9 96471              3 cannot be found
10 96479              3 cannot be found</code></pre>
</div>
</div>
<p>Given that these bus stops cannot be located within the geospatial data, we will drop these Bus Stops from our analysis.</p>
<div class="cell">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb33" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb33-1">odbus_202310_final <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> odbus_202310_commuterflow <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb33-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">anti_join</span>(odbus_202310_check, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">by =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ORIGIN_PT_CODE"</span>)</span>
<span id="cb33-3"></span>
<span id="cb33-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">str</span>(odbus_202310_final)</span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>tibble [20,780 × 3] (S3: tbl_df/tbl/data.frame)
 $ ORIGIN_PT_CODE: Factor w/ 5205 levels "01012","01013",..: 1 2 3 4 5 6 7 8 9 10 ...
 $ TRIPS         : num [1:20780] 1770 841 1530 2483 2919 ...
 $ SOURCE        : chr [1:20780] "weekday morning" "weekday morning" "weekday morning" "weekday morning" ...</code></pre>
</div>
</div>
</div>
</div>
</div>
</section>
<section id="append-commuting-flow-data-with-bus-stop-locations" class="level2">
<h2 class="anchored" data-anchor-id="append-commuting-flow-data-with-bus-stop-locations">Append Commuting Flow data with Bus Stop Locations</h2>
<p><code>left_join()</code> of <strong>dplyr</strong> is used to join the geographical data and commuting flow data table using County as the common identifier. Left join is done to ensure that the geospatial properties (geometry column) of the <code>BusStop</code> sf data frame is retained. After the join, a pipe operation is done to convert NA values into 0 – this ensures that the entire geographical area of Singapore can be seen on the resultant map output.</p>
<div class="cell">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb35" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb35-1">origin_BusStop_202308 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">left_join</span>(BusStop, odbus_202308_commuterflow,</span>
<span id="cb35-2">                                   <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">by =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"BUS_STOP_N"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ORIGIN_PT_CODE"</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb35-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">TRIPS</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ifelse</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">is.na</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">TRIPS</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span>), <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">TRIPS</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span>))</span></code></pre></div>
</details>
</div>
<p>Check for any duplicates using the code chunk below:</p>
<div class="cell">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb36" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb36-1">duplicate <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> origin_BusStop_202308 <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb36-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">group_by_all</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb36-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">n</span>()<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb36-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ungroup</span>()</span>
<span id="cb36-5"></span>
<span id="cb36-6">duplicate</span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>Simple feature collection with 0 features and 5 fields
Bounding box:  xmin: NA ymin: NA xmax: NA ymax: NA
Projected CRS: SVY21 / Singapore TM
# A tibble: 0 × 6
# … with 6 variables: BUS_STOP_N &lt;chr&gt;, BUS_ROOF_N &lt;chr&gt;, LOC_DESC &lt;chr&gt;,
#   TRIPS &lt;dbl&gt;, SOURCE &lt;chr&gt;, geometry &lt;GEOMETRY [m]&gt;</code></pre>
</div>
</div>
<p><code>cellsize</code> argument is the cell size, in the units that the crs of the spatial data is using. Since the data is set in SVY21 projected coordinate system, which <a href="https://epsg.io/3414">uses metres as the unit</a>, the value is set as <code>c(250,250)</code> to create a hexagon layer of 250m.</p>
<div class="cell">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb38" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb38-1">area_honeycomb_grid <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">st_make_grid</span>(origin_BusStop_202308, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">250</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">250</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">what =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"point"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">square =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>)</span>
<span id="cb38-2"></span>
<span id="cb38-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># To sf and add grid ID</span></span>
<span id="cb38-4">honeycomb_grid_sf <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">st_sf</span>(area_honeycomb_grid) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb38-5">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># add grid ID</span></span>
<span id="cb38-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">grid_id =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lengths</span>(area_honeycomb_grid)))</span>
<span id="cb38-7"></span>
<span id="cb38-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># count number of points in each grid</span></span>
<span id="cb38-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># https://gis.stackexchange.com/questions/323698/counting-points-in-polygons-with-sf-package-of-r</span></span>
<span id="cb38-10">honeycomb_grid_sf<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>TOT_TRIPS <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lengths</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">st_intersects</span>(honeycomb_grid_sf, origin_BusStop_202308))</span>
<span id="cb38-11"></span>
<span id="cb38-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># remove grid without value of 0 (i.e. no points in side that grid)</span></span>
<span id="cb38-13">honeycomb_count <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(honeycomb_grid_sf, TOT_TRIPS <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span></code></pre></div>
</details>
</div>
<div class="cell">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb39" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb39-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tmap_mode</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"plot"</span>)</span>
<span id="cb39-2">map_honeycomb <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tm_shape</span>(honeycomb_count) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb39-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tm_fill</span>(</span>
<span id="cb39-4">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"TOT_TRIPS"</span>,</span>
<span id="cb39-5">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">palette =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Blues"</span>,</span>
<span id="cb39-6">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">style =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cont"</span>,</span>
<span id="cb39-7">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">title =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Number of trips"</span>,</span>
<span id="cb39-8">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">id =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"grid_id"</span>,</span>
<span id="cb39-9">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">showNA =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>,</span>
<span id="cb39-10">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">alpha =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.6</span>,</span>
<span id="cb39-11">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">popup.vars =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(</span>
<span id="cb39-12">      <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Number of trips: "</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"TOT_TRIPS"</span></span>
<span id="cb39-13">    ),</span>
<span id="cb39-14">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">popup.format =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(</span>
<span id="cb39-15">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">TOT_TRIPS =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">format =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"f"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">digits =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span>
<span id="cb39-16">    )</span>
<span id="cb39-17">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb39-18">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tm_borders</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"grey40"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">lwd =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.7</span>)</span>
<span id="cb39-19">map_honeycomb</span></code></pre></div>
</details>
<div class="cell-output-display">
<p><img src="https://geospatial2023.netlify.app/Take_Home_Exercise/Ex1/Take_home_Ex1_files/figure-html/unnamed-chunk-23-1.png" class="img-fluid" width="1152"></p>
</div>
</div>


</section>
</section>

 ]]></description>
  <guid>https://geospatial2023.netlify.app/Take_Home_Exercise/Ex1/Take_home_Ex1.html</guid>
  <pubDate>Fri, 24 Nov 2023 16:00:00 GMT</pubDate>
</item>
<item>
  <title>2b: Measures of Spatial Autocorrelation</title>
  <dc:creator>Magdalene Chan</dc:creator>
  <link>https://geospatial2023.netlify.app/Hands_on_Exercise/Ex2/Hands_on_Ex2b.html</link>
  <description><![CDATA[ 



<p>Spatial autocorrelation is the term used to describe the presence of systematic spatial variation in a variable. Where there is positive (high) spatial autocorrelation, there is spatial clustering and neighbours are similar. Conversely, where there is negative (low) spatial autocorrelation, checkerboard patterns are observed and neighbours are dissimilar.</p>
<p>Spatial autocorrelation can be used in the development of spatial policy, where one of the main development objectives of governments and planners is to ensure equal distribution of development in the area. Appropriate spatial statistical methods can be applied to discover if developments are evenly distributed geographically – if there are signs of spatial clustering and if so, where they are located.</p>
<section id="getting-started" class="level2">
<h2 class="anchored" data-anchor-id="getting-started">Getting Started</h2>
<p>The code chunk below uses p_load() of pacman package to check if the required packages have been installed on the computer. If they are, the packages will be launched.</p>
<ul>
<li><strong>sf</strong> package is used for importing, managing, and processing geospatial data.</li>
<li><strong>tmap</strong> package is used for thematic mapping.</li>
<li><strong>spdep</strong> package is used to create spatial weights matrix objects.</li>
</ul>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1">pacman<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">p_load</span>(sf, spdep, tmap, tidyverse)</span></code></pre></div>
</div>
<p>The data sets used are:</p>
<ul>
<li>Hunan county boundary layer: a geospatial data set in ESRI shapefile format.</li>
<li>Hunan_2012.csv: csv file that contains selected Hunan’s local development indicators in 2012.</li>
</ul>
</section>
<section id="importing-data" class="level2">
<h2 class="anchored" data-anchor-id="importing-data">Importing Data</h2>
<section id="import-shapefile-into-r" class="level3">
<h3 class="anchored" data-anchor-id="import-shapefile-into-r">Import shapefile into R</h3>
<p>The code chunk below uses the <code>st_read()</code> function of <strong>sf</strong> package to import Hunan county boundary shapefile into R as a simple feature data frame called <code>hunan</code>.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1">hunan <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">st_read</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">dsn =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"data/geospatial"</span>, </span>
<span id="cb2-2">                 <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">layer =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Hunan"</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Reading layer `Hunan' from data source 
  `C:\magdalenecjw\ISSS624 Geospatial\Hands_on_Exercise\Ex2\data\geospatial' 
  using driver `ESRI Shapefile'
Simple feature collection with 88 features and 7 fields
Geometry type: POLYGON
Dimension:     XY
Bounding box:  xmin: 108.7831 ymin: 24.6342 xmax: 114.2544 ymax: 30.12812
Geodetic CRS:  WGS 84</code></pre>
</div>
</div>
<p>There are a total of 88 polygon features and 7 fields in <code>hunan</code> simple feature data frame. <code>hunan</code> is in <strong>wgs84</strong> GCS.</p>
</section>
<section id="import-aspatial-data-into-r" class="level3">
<h3 class="anchored" data-anchor-id="import-aspatial-data-into-r">Import aspatial data into R</h3>
<p>The code chunk below uses the <code>read_csv()</code> function of <strong>readr</strong> package to import <code>Hunan_2012.csv</code> file into R and save it as a R dataframe called <code>hunan2012</code>.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1">hunan2012 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">read_csv</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"data/aspatial/Hunan_2012.csv"</span>)</span></code></pre></div>
</div>
</section>
<section id="performing-relational-join" class="level3">
<h3 class="anchored" data-anchor-id="performing-relational-join">Performing relational join</h3>
<p><code>left_join()</code> of <strong>dplyr</strong> is used to join the geographical data and attribute table using <code>County</code> as the common identifier.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1">hunan <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">left_join</span>(hunan,hunan2012)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb5-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">select</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">15</span>)</span></code></pre></div>
</div>
</section>
</section>
<section id="visualising-regional-development-indicator" class="level2">
<h2 class="anchored" data-anchor-id="visualising-regional-development-indicator">Visualising Regional Development Indicator</h2>
<p>Prepare a basemap and a choropleth map showing the distribution of GDPPC 2012 by using <code>qtm()</code> of <strong>tmap</strong> package.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb6-1">equal <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tm_shape</span>(hunan) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb6-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tm_fill</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"GDPPC"</span>,</span>
<span id="cb6-3">          <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>,</span>
<span id="cb6-4">          <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">style =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"equal"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb6-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tm_borders</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">alpha =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb6-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tm_layout</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">main.title =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Equal interval classification"</span>)</span>
<span id="cb6-7"></span>
<span id="cb6-8">quantile <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tm_shape</span>(hunan) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb6-9">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tm_fill</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"GDPPC"</span>,</span>
<span id="cb6-10">          <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>,</span>
<span id="cb6-11">          <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">style =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"quantile"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb6-12">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tm_borders</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">alpha =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb6-13">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tm_layout</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">main.title =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Equal quantile classification"</span>)</span>
<span id="cb6-14"></span>
<span id="cb6-15"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tmap_arrange</span>(equal, </span>
<span id="cb6-16">             quantile, </span>
<span id="cb6-17">             <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">asp=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, </span>
<span id="cb6-18">             <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ncol=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://geospatial2023.netlify.app/Hands_on_Exercise/Ex2/Hands_on_Ex2b_files/figure-html/unnamed-chunk-5-1.png" class="img-fluid" width="672"></p>
</div>
</div>
</section>
<section id="global-spatial-autocorrelation" class="level2">
<h2 class="anchored" data-anchor-id="global-spatial-autocorrelation">Global Spatial Autocorrelation</h2>
<p>This section details the steps taken to compute global spatial autocorrelation statistics and to perform spatial complete randomness test for global spatial autocorrelation.</p>
<section id="computing-contiguity-spatial-weights" class="level3">
<h3 class="anchored" data-anchor-id="computing-contiguity-spatial-weights">Computing Contiguity Spatial Weights</h3>
<p>Before computing the global spatial autocorrelation statistics, construct a spatial weights of the study area. The spatial weights is used to define the neighbourhood relationships between the geographical units (i.e.&nbsp;county) in the study area.</p>
<p>In the code chunk below, <code>poly2nb()</code> of <strong>spdep</strong> package is used to compute contiguity weights matrices for the study area. This function builds a neighbours list based on regions with contiguous boundaries. The code chunk below computes the queen contiguity weights matrix.</p>
<blockquote class="blockquote">
<p>The <code>queen</code> argument takes <code>TRUE</code> (default) or <code>FALSE</code> as options. If <code>queen = TRUE</code>, this function will return a list of first order neighbours using the Queen criteria.</p>
</blockquote>
<div class="cell">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb7-1">wm_q <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">poly2nb</span>(hunan, </span>
<span id="cb7-2">                <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">queen=</span><span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>)</span>
<span id="cb7-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summary</span>(wm_q)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Neighbour list object:
Number of regions: 88 
Number of nonzero links: 448 
Percentage nonzero weights: 5.785124 
Average number of links: 5.090909 
Link number distribution:

 1  2  3  4  5  6  7  8  9 11 
 2  2 12 16 24 14 11  4  2  1 
2 least connected regions:
30 65 with 1 link
1 most connected region:
85 with 11 links</code></pre>
</div>
</div>
<p>The summary report above shows that there are 88 area units in Hunan. The most connected area unit has 11 neighbours. There are two area units with only one neighbours.</p>
</section>
<section id="row-standardised-weights-matrix" class="level3">
<h3 class="anchored" data-anchor-id="row-standardised-weights-matrix">Row-standardised weights matrix</h3>
<p>Next, assign equal weights to each neighboring polygon (<code>style=“W”</code>). This is accomplished by assigning the fraction 1/(#ofneighbors) to each neighboring county then summing the weighted income values. While this is the most intuitive way to summarise the neighbors’ values, it has one drawback in that polygons along the edges of the study area will base their lagged values on fewer polygons thus potentially over- or under-estimating the true nature of the spatial autocorrelation in the data. Other more robust options are available to correct such drawbacks, notably <code>style=“B”</code>.</p>
<blockquote class="blockquote">
<p>The <code>zero.policy=TRUE</code> option allows for lists of non-neighbors. This should be used with caution since users may not be aware of missing neighbors in their dataset. Using <code>zero.policy=FALSE</code> at first instance may be more advised as it returns an error if there are empty neighbour sets.</p>
</blockquote>
<div class="cell">
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb9-1">rswm_q <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">nb2listw</span>(wm_q, </span>
<span id="cb9-2">                   <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">style=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"W"</span>, </span>
<span id="cb9-3">                   <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">zero.policy =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>)</span>
<span id="cb9-4">rswm_q</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Characteristics of weights list object:
Neighbour list object:
Number of regions: 88 
Number of nonzero links: 448 
Percentage nonzero weights: 5.785124 
Average number of links: 5.090909 

Weights style: W 
Weights constants summary:
   n   nn S0       S1       S2
W 88 7744 88 37.86334 365.9147</code></pre>
</div>
</div>
</section>
<section id="global-spatial-autocorrelation-morans-i" class="level3">
<h3 class="anchored" data-anchor-id="global-spatial-autocorrelation-morans-i">Global Spatial Autocorrelation: Moran’s I</h3>
<p>The code chunk below performs Moran’s I statistical testing using <code>moran.test()</code> of <strong>spdep</strong> to compute Global Spatial Autocorrelation statistics.</p>
<p>At a confidence interval of 95%,</p>
<ul>
<li>H<sub>0</sub>: There is no spatial autocorrelation in the dataset.</li>
<li>H<sub>1</sub>: There is spatial autocorrelation in the dataset.</li>
</ul>
<div class="cell">
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb11-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">moran.test</span>(hunan<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>GDPPC, </span>
<span id="cb11-2">           <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">listw=</span>rswm_q, </span>
<span id="cb11-3">           <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">zero.policy =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>, </span>
<span id="cb11-4">           <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">na.action=</span>na.omit)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>
    Moran I test under randomisation

data:  hunan$GDPPC  
weights: rswm_q    

Moran I statistic standard deviate = 4.7351, p-value = 1.095e-06
alternative hypothesis: greater
sample estimates:
Moran I statistic       Expectation          Variance 
      0.300749970      -0.011494253       0.004348351 </code></pre>
</div>
</div>
<p>Given that p-value &lt; alpha value, we can reject the null hypothesis. Given that Moran I (Z value) is positive, it suggests that the features in the study area are clustered and observations tend to be similar.</p>
<blockquote class="blockquote">
<p>A positive Moran’s I value (I&gt;0) suggests clustering and similar observations. A negative Moran’s I value (I&lt;0) suggests dispersion and dissimilar observations. An approximately zero Moran’s I value suggests observations are arranged randomly over space.</p>
</blockquote>
</section>
<section id="computing-monte-carlo-morans-i" class="level3">
<h3 class="anchored" data-anchor-id="computing-monte-carlo-morans-i">Computing Monte Carlo Moran’s I</h3>
<p>Monte Carlo simulation is used if there are doubts that the assumptions of Moran’s I are true (normality and randomization). The code chunk below performs permutation test for Moran’s I statistic by using <code>moran.mc()</code> of <strong>spdep</strong>. A total of 1000 simulations will be performed.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb13-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">set.seed</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1234</span>)</span>
<span id="cb13-2">bperm<span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">moran.mc</span>(hunan<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>GDPPC, </span>
<span id="cb13-3">                <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">listw=</span>rswm_q, </span>
<span id="cb13-4">                <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">nsim=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">999</span>, </span>
<span id="cb13-5">                <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">zero.policy =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>, </span>
<span id="cb13-6">                <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">na.action=</span>na.omit)</span>
<span id="cb13-7">bperm</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>
    Monte-Carlo simulation of Moran I

data:  hunan$GDPPC 
weights: rswm_q  
number of simulations + 1: 1000 

statistic = 0.30075, observed rank = 1000, p-value = 0.001
alternative hypothesis: greater</code></pre>
</div>
</div>
<p>Given that p-value &lt; alpha value, we can reject the null hypothesis. Given that the Z value remains positive, it supports the earlier drawn conclusion that the features in the study area are clustered and observations tend to be similar.</p>
</section>
<section id="visualising-monte-carlo-morans-i" class="level3">
<h3 class="anchored" data-anchor-id="visualising-monte-carlo-morans-i">Visualising Monte Carlo Moran’s I</h3>
<p>It is good practice to examine the simulated Moran’s I test statistics in greater detail. This can be achieved by plotting the distribution of the statistical values as a histogram by using the code chunk below, which uses <code>hist()</code> and <code>abline()</code> of R Graphics.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb15-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mean</span>(bperm<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>res[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">999</span>])</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] -0.01504572</code></pre>
</div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb17" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb17-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">var</span>(bperm<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>res[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">999</span>])</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] 0.004371574</code></pre>
</div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb19" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb19-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summary</span>(bperm<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>res[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">999</span>])</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>    Min.  1st Qu.   Median     Mean  3rd Qu.     Max. 
-0.18339 -0.06168 -0.02125 -0.01505  0.02611  0.27593 </code></pre>
</div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb21" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb21-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">hist</span>(bperm<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>res, </span>
<span id="cb21-2">     <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">freq=</span><span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>, </span>
<span id="cb21-3">     <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">breaks=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span>, </span>
<span id="cb21-4">     <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xlab=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Simulated Moran's I"</span>)</span>
<span id="cb21-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">abline</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">v=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, </span>
<span id="cb21-6">       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"red"</span>) </span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://geospatial2023.netlify.app/Hands_on_Exercise/Ex2/Hands_on_Ex2b_files/figure-html/unnamed-chunk-13-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>When comparing the observed Moran’s I value with the distribution of Moran’s I values obtained from the Monte Carlo simulation, it can be noted that the observed value is in the extreme tails of the distribution. This further supports the conclusion drawn earlier that the spatial pattern in the data is significantly different from randomness and supports the presence of spatial autocorrelation.</p>
</section>
<section id="global-spatial-autocorrelation-gearys-c" class="level3">
<h3 class="anchored" data-anchor-id="global-spatial-autocorrelation-gearys-c">Global Spatial Autocorrelation: Geary’s C</h3>
<p>Another method that can be used to compute Global Spatial Autocorrelation statistics is Geary’s c statistics testing. The code chunk below performs Geary’s C test using <code>geary.test()</code> of <strong>spdep</strong>.</p>
<p>At a confidence interval of 95%,</p>
<ul>
<li>H<sub>0</sub>: There is no spatial autocorrelation in the dataset.</li>
<li>H<sub>1</sub>: There is spatial autocorrelation in the dataset.</li>
</ul>
<div class="cell">
<div class="sourceCode cell-code" id="cb22" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb22-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geary.test</span>(hunan<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>GDPPC, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">listw=</span>rswm_q)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>
    Geary C test under randomisation

data:  hunan$GDPPC 
weights: rswm_q 

Geary C statistic standard deviate = 3.6108, p-value = 0.0001526
alternative hypothesis: Expectation greater than statistic
sample estimates:
Geary C statistic       Expectation          Variance 
        0.6907223         1.0000000         0.0073364 </code></pre>
</div>
</div>
<p>Given that p-value &lt; alpha value, we can reject the null hypothesis. Given that Geary C (Z value) is small (&lt;1), it suggests that the features in the study area are clustered and observations tend to be similar.</p>
<blockquote class="blockquote">
<p>A large Geary’s C value (C&gt;1) suggests dispersion and dissimilar observations. A small Geary’s C value (C&lt;1) suggests clustering and similar observations. A Geary’s C value of 1 suggests observations are arranged randomly over space.</p>
</blockquote>
</section>
<section id="computing-monte-carlo-gearys-c" class="level3">
<h3 class="anchored" data-anchor-id="computing-monte-carlo-gearys-c">Computing Monte Carlo Geary’s C</h3>
<p>The code chunk below performs permutation test for Geary’s C statistic by using <code>geary.mc()</code> of <strong>spdep</strong>.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb24" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb24-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">set.seed</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1234</span>)</span>
<span id="cb24-2">bperm<span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geary.mc</span>(hunan<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>GDPPC, </span>
<span id="cb24-3">               <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">listw=</span>rswm_q, </span>
<span id="cb24-4">               <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">nsim=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">999</span>)</span>
<span id="cb24-5">bperm</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>
    Monte-Carlo simulation of Geary C

data:  hunan$GDPPC 
weights: rswm_q 
number of simulations + 1: 1000 

statistic = 0.69072, observed rank = 1, p-value = 0.001
alternative hypothesis: greater</code></pre>
</div>
</div>
<p>Given that p-value &lt; alpha value, we can reject the null hypothesis. Given that the Z value remains positive, it supports the earlier drawn conclusion that the features in the study area are clustered and observations tend to be similar.</p>
</section>
<section id="visualising-monte-carlo-gearys-c" class="level3">
<h3 class="anchored" data-anchor-id="visualising-monte-carlo-gearys-c">Visualising Monte Carlo Geary’s C</h3>
<p>Next, plot a histogram to reveal the distribution of the simulated values by using the code chunk below.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb26" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb26-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mean</span>(bperm<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>res[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">999</span>])</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] 1.004402</code></pre>
</div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb28" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb28-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">var</span>(bperm<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>res[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">999</span>])</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] 0.007436493</code></pre>
</div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb30" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb30-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summary</span>(bperm<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>res[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">999</span>])</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
 0.7142  0.9502  1.0052  1.0044  1.0595  1.2722 </code></pre>
</div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb32" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb32-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">hist</span>(bperm<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>res, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">freq=</span><span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">breaks=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xlab=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Simulated Geary c"</span>)</span>
<span id="cb32-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">abline</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">v=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"red"</span>) </span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://geospatial2023.netlify.app/Hands_on_Exercise/Ex2/Hands_on_Ex2b_files/figure-html/unnamed-chunk-19-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>When comparing the observed Geary’s C value with the distribution of Geary’s C values obtained from the Monte Carlo simulation, it can be noted that the observed value is in the extreme tails of the distribution. This further supports the conclusion drawn earlier that the spatial pattern in the data is significantly different from randomness and supports the presence of spatial autocorrelation.</p>
</section>
</section>
<section id="spatial-correlogram" class="level2">
<h2 class="anchored" data-anchor-id="spatial-correlogram">Spatial Correlogram</h2>
<p>Spatial correlograms are used to examine patterns of spatial autocorrelation in the data or model residuals. They show how correlated the pairs of spatial observations are when the distance (lag) between them increases - they are plots of some index of autocorrelation (Moran’s I or Geary’s c) against distance.Although correlograms are not as fundamental as variograms (a keystone concept of geostatistics), they are very useful as an exploratory and descriptive tool. For this purpose, they provide richer information than variograms.</p>
<section id="compute-morans-i-correlogram" class="level3">
<h3 class="anchored" data-anchor-id="compute-morans-i-correlogram">Compute Moran’s I correlogram</h3>
<p>In the code chunk below, <code>sp.correlogram()</code> of <strong>spdep</strong> package is used to compute a 6-lag spatial correlogram of GDPPC. The global spatial autocorrelation used in Moran’s I. The <code>plot()</code> of base Graph is then used to plot the output.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb33" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb33-1">MI_corr <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sp.correlogram</span>(wm_q, </span>
<span id="cb33-2">                          hunan<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>GDPPC, </span>
<span id="cb33-3">                          <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">order=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>, </span>
<span id="cb33-4">                          <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">method=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"I"</span>, </span>
<span id="cb33-5">                          <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">style=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"W"</span>)</span>
<span id="cb33-6"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot</span>(MI_corr)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://geospatial2023.netlify.app/Hands_on_Exercise/Ex2/Hands_on_Ex2b_files/figure-html/unnamed-chunk-20-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>Plotting the output alone may not provide complete interpretation. This is because not all autocorrelation values are statistically significant. Hence, it is important to examine the full analysis report by printing out the analysis results as in the code chunk below.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb34" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb34-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">print</span>(MI_corr)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Spatial correlogram for hunan$GDPPC 
method: Moran's I
         estimate expectation   variance standard deviate Pr(I) two sided    
1 (88)  0.3007500  -0.0114943  0.0043484           4.7351       2.189e-06 ***
2 (88)  0.2060084  -0.0114943  0.0020962           4.7505       2.029e-06 ***
3 (88)  0.0668273  -0.0114943  0.0014602           2.0496        0.040400 *  
4 (88)  0.0299470  -0.0114943  0.0011717           1.2107        0.226015    
5 (88) -0.1530471  -0.0114943  0.0012440          -4.0134       5.984e-05 ***
6 (88) -0.1187070  -0.0114943  0.0016791          -2.6164        0.008886 ** 
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1</code></pre>
</div>
</div>
<div class="callout callout-style-default callout-note callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
How to read Spatial Correlogram
</div>
</div>
<div class="callout-body-container callout-body">
<ul>
<li>Each row represents a distance interval (lag) at which Moran’s I was calculated.</li>
<li>The <code>estimate</code> column provides the calculated Moran’s I value at each distance interval.</li>
<li>The <code>expected</code> column shows the value of Moran’s I under the null hypothesis of no spatial autocorrelation. Here, it’s the same constant value (-0.0114943) for all intervals, indicating the assumption of no spatial autocorrelation.</li>
<li>The <code>Pr(I) two sided</code> column shows the p-value associated with Moran’s I at each lag.</li>
</ul>
</div>
</div>
<section id="observations" class="level4">
<h4 class="anchored" data-anchor-id="observations">Observations</h4>
<ul>
<li>There are significant positive values in the first two rows, suggesting spatial clustering or positive spatial autocorrelation at the respective distances indicated by the lags. The positive values indicate that nearby regions have similar values of GDPPC being measured.</li>
<li>There are significant negative values in the 5th and 6th rows, suggesting spatial dispersion or negative spatial autocorrelation at the respective distances indicated by the lags. The negative values suggest that neighboring regions tend to have dissimilar values of GDPPC.</li>
<li>In conclusion, this correlogram suggests that there is significant spatial autocorrelation in GDPPC at various distance intervals.</li>
</ul>
</section>
</section>
<section id="compute-gearys-c-correlogram" class="level3">
<h3 class="anchored" data-anchor-id="compute-gearys-c-correlogram">Compute Geary’s C correlogram</h3>
<p>In the code chunk below, <code>sp.correlogram()</code> of <strong>spdep</strong> package is used to compute a 6-lag spatial correlogram of GDPPC. The global spatial autocorrelation used in Geary’s C. The <code>plot()</code> of base Graph is then used to plot the output.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb36" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb36-1">GC_corr <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sp.correlogram</span>(wm_q, </span>
<span id="cb36-2">                          hunan<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>GDPPC, </span>
<span id="cb36-3">                          <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">order=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>, </span>
<span id="cb36-4">                          <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">method=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"C"</span>, </span>
<span id="cb36-5">                          <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">style=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"W"</span>)</span>
<span id="cb36-6"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot</span>(GC_corr)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://geospatial2023.netlify.app/Hands_on_Exercise/Ex2/Hands_on_Ex2b_files/figure-html/unnamed-chunk-22-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>Similarly, print out the analysis report by using the code chunk below.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb37" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb37-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">print</span>(GC_corr)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Spatial correlogram for hunan$GDPPC 
method: Geary's C
        estimate expectation  variance standard deviate Pr(I) two sided    
1 (88) 0.6907223   1.0000000 0.0073364          -3.6108       0.0003052 ***
2 (88) 0.7630197   1.0000000 0.0049126          -3.3811       0.0007220 ***
3 (88) 0.9397299   1.0000000 0.0049005          -0.8610       0.3892612    
4 (88) 1.0098462   1.0000000 0.0039631           0.1564       0.8757128    
5 (88) 1.2008204   1.0000000 0.0035568           3.3673       0.0007592 ***
6 (88) 1.0773386   1.0000000 0.0058042           1.0151       0.3100407    
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1</code></pre>
</div>
</div>
<section id="observations-1" class="level4">
<h4 class="anchored" data-anchor-id="observations-1">Observations</h4>
<ul>
<li>There are significant low Geary’s C values (C&lt;1) in the first two rows, suggesting spatial clustering or positive spatial autocorrelation at the respective distances indicated by the lags. The low Geary’s C values indicate that nearby regions have similar values of GDPPC being measured.</li>
<li>There is significant high Geary’s C value (C&gt;1) in the 5th row, suggesting spatial dispersion or negative spatial autocorrelation at the respective distances indicated by the lag. The high Geary’s C value suggest that neighboring regions tend to have dissimilar values of GDPPC.</li>
<li>In conclusion, this correlogram suggests that there is significant spatial autocorrelation in GDPPC at various distance intervals.</li>
</ul>
</section>
</section>
</section>
<section id="cluster-and-outlier-analysis" class="level2">
<h2 class="anchored" data-anchor-id="cluster-and-outlier-analysis">Cluster and Outlier Analysis</h2>
<p>Local Indicators of Spatial Association or LISA are statistics that evaluate the existence of clusters in the spatial arrangement of a given variable. It is a collection of geospatial statistical analysis methods for analysing the location related tendency (clusters or outliers) in the attributes of geographically referenced data (points or areas). Such spatial statistics are well suited for:</p>
<ul>
<li>detecting clusters or outliers;</li>
<li>identifying hot spot or cold spot areas;</li>
<li>assessing the assumptions of stationarity; and</li>
<li>identifying distances beyond which no discernible association obtains.</li>
</ul>
<p>It can be indices decomposed from their global measures such as local Moran’s I and local Geary’s C, but any spatial statistics that satisfies the following two requirements can be considered LISA:</p>
<ul>
<li>the LISA for each observation gives an indication of the extent of significant spatial clustering of similar values around that observation;</li>
<li>the sum of LISAs for all observations is proportional to a global indicator of spatial association.</li>
</ul>
<section id="computing-local-morans-i" class="level3">
<h3 class="anchored" data-anchor-id="computing-local-morans-i">Computing local Moran’s I</h3>
<p>To compute local Moran’s I, the <code>localmoran()</code> function of <strong>spdep</strong> will be used. It computes I<sub>i</sub> values, given a set of Z<sub>i</sub> values and a <code>listw</code> object providing neighbour weighting information for the polygon associated with the Z<sub>i</sub> values.</p>
<p>The code chunks below are used to compute local Moran’s I of <code>GDPPC2012</code> at the county level.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb39" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb39-1">fips <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">order</span>(hunan<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>County)</span>
<span id="cb39-2">localMI <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">localmoran</span>(hunan<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>GDPPC, rswm_q)</span>
<span id="cb39-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">head</span>(localMI)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>            Ii          E.Ii       Var.Ii        Z.Ii Pr(z != E(Ii))
1 -0.001468468 -2.815006e-05 4.723841e-04 -0.06626904      0.9471636
2  0.025878173 -6.061953e-04 1.016664e-02  0.26266425      0.7928094
3 -0.011987646 -5.366648e-03 1.133362e-01 -0.01966705      0.9843090
4  0.001022468 -2.404783e-07 5.105969e-06  0.45259801      0.6508382
5  0.014814881 -6.829362e-05 1.449949e-03  0.39085814      0.6959021
6 -0.038793829 -3.860263e-04 6.475559e-03 -0.47728835      0.6331568</code></pre>
</div>
</div>
<div class="callout callout-style-default callout-note callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
How to read <code>localmoran()</code> output
</div>
</div>
<div class="callout-body-container callout-body">
<ul>
<li><code>Ii</code>: the local Moran’s I statistics</li>
<li><code>E.Ii</code>: the expectation of local moran statistic under the randomisation hypothesis</li>
<li><code>Var.Ii</code>: the variance of local moran statistic under the randomisation hypothesis</li>
<li><code>Z.Ii</code>:the standard deviate of local moran statistic</li>
<li><code>Pr()</code>: the p-value of local moran statistic</li>
</ul>
</div>
</div>
<p>The code chunk below list the content of the local Moran matrix derived by using <code>printCoefmat()</code>.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb41" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb41-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">printCoefmat</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data.frame</span>(</span>
<span id="cb41-2">  localMI[fips,], </span>
<span id="cb41-3">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">row.names=</span>hunan<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>County[fips]),</span>
<span id="cb41-4">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">check.names=</span><span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>                       Ii        E.Ii      Var.Ii        Z.Ii Pr.z....E.Ii..
Anhua         -2.2493e-02 -5.0048e-03  5.8235e-02 -7.2467e-02         0.9422
Anren         -3.9932e-01 -7.0111e-03  7.0348e-02 -1.4791e+00         0.1391
Anxiang       -1.4685e-03 -2.8150e-05  4.7238e-04 -6.6269e-02         0.9472
Baojing        3.4737e-01 -5.0089e-03  8.3636e-02  1.2185e+00         0.2230
Chaling        2.0559e-02 -9.6812e-04  2.7711e-02  1.2932e-01         0.8971
Changning     -2.9868e-05 -9.0010e-09  1.5105e-07 -7.6828e-02         0.9388
Changsha       4.9022e+00 -2.1348e-01  2.3194e+00  3.3590e+00         0.0008
Chengbu        7.3725e-01 -1.0534e-02  2.2132e-01  1.5895e+00         0.1119
Chenxi         1.4544e-01 -2.8156e-03  4.7116e-02  6.8299e-01         0.4946
Cili           7.3176e-02 -1.6747e-03  4.7902e-02  3.4200e-01         0.7324
Dao            2.1420e-01 -2.0824e-03  4.4123e-02  1.0297e+00         0.3032
Dongan         1.5210e-01 -6.3485e-04  1.3471e-02  1.3159e+00         0.1882
Dongkou        5.2918e-01 -6.4461e-03  1.0748e-01  1.6338e+00         0.1023
Fenghuang      1.8013e-01 -6.2832e-03  1.3257e-01  5.1198e-01         0.6087
Guidong       -5.9160e-01 -1.3086e-02  3.7003e-01 -9.5104e-01         0.3416
Guiyang        1.8240e-01 -3.6908e-03  3.2610e-02  1.0305e+00         0.3028
Guzhang        2.8466e-01 -8.5054e-03  1.4152e-01  7.7931e-01         0.4358
Hanshou        2.5878e-02 -6.0620e-04  1.0167e-02  2.6266e-01         0.7928
Hengdong       9.9964e-03 -4.9063e-04  6.7742e-03  1.2742e-01         0.8986
Hengnan        2.8064e-02 -3.2160e-04  3.7597e-03  4.6294e-01         0.6434
Hengshan      -5.8201e-03 -3.0437e-05  5.1076e-04 -2.5618e-01         0.7978
Hengyang       6.2997e-02 -1.3046e-03  2.1865e-02  4.3486e-01         0.6637
Hongjiang      1.8790e-01 -2.3019e-03  3.1725e-02  1.0678e+00         0.2856
Huarong       -1.5389e-02 -1.8667e-03  8.1030e-02 -4.7503e-02         0.9621
Huayuan        8.3772e-02 -8.5569e-04  2.4495e-02  5.4072e-01         0.5887
Huitong        2.5997e-01 -5.2447e-03  1.1077e-01  7.9685e-01         0.4255
Jiahe         -1.2431e-01 -3.0550e-03  5.1111e-02 -5.3633e-01         0.5917
Jianghua       2.8651e-01 -3.8280e-03  8.0968e-02  1.0204e+00         0.3076
Jiangyong      2.4337e-01 -2.7082e-03  1.1746e-01  7.1800e-01         0.4728
Jingzhou       1.8270e-01 -8.5106e-04  2.4363e-02  1.1759e+00         0.2396
Jinshi        -1.1988e-02 -5.3666e-03  1.1334e-01 -1.9667e-02         0.9843
Jishou        -2.8680e-01 -2.6305e-03  4.4028e-02 -1.3543e+00         0.1756
Lanshan        6.3334e-02 -9.6365e-04  2.0441e-02  4.4972e-01         0.6529
Leiyang        1.1581e-02 -1.4948e-04  2.5082e-03  2.3422e-01         0.8148
Lengshuijiang -1.7903e+00 -8.2129e-02  2.1598e+00 -1.1623e+00         0.2451
Li             1.0225e-03 -2.4048e-07  5.1060e-06  4.5260e-01         0.6508
Lianyuan      -1.4672e-01 -1.8983e-03  1.9145e-02 -1.0467e+00         0.2952
Liling         1.3774e+00 -1.5097e-02  4.2601e-01  2.1335e+00         0.0329
Linli          1.4815e-02 -6.8294e-05  1.4499e-03  3.9086e-01         0.6959
Linwu         -2.4621e-03 -9.0703e-06  1.9258e-04 -1.7676e-01         0.8597
Linxiang       6.5904e-02 -2.9028e-03  2.5470e-01  1.3634e-01         0.8916
Liuyang        3.3688e+00 -7.7502e-02  1.5180e+00  2.7972e+00         0.0052
Longhui        8.0801e-01 -1.1377e-02  1.5538e-01  2.0787e+00         0.0376
Longshan       7.5663e-01 -1.1100e-02  3.1449e-01  1.3690e+00         0.1710
Luxi           1.8177e-01 -2.4855e-03  3.4249e-02  9.9561e-01         0.3194
Mayang         2.1852e-01 -5.8773e-03  9.8049e-02  7.1663e-01         0.4736
Miluo          1.8704e+00 -1.6927e-02  2.7925e-01  3.5715e+00         0.0004
Nan           -9.5789e-03 -4.9497e-04  6.8341e-03 -1.0988e-01         0.9125
Ningxiang      1.5607e+00 -7.3878e-02  8.0012e-01  1.8274e+00         0.0676
Ningyuan       2.0910e-01 -7.0884e-03  8.2306e-02  7.5356e-01         0.4511
Pingjiang     -9.8964e-01 -2.6457e-03  5.6027e-02 -4.1698e+00         0.0000
Qidong         1.1806e-01 -2.1207e-03  2.4747e-02  7.6396e-01         0.4449
Qiyang         6.1966e-02 -7.3374e-04  8.5743e-03  6.7712e-01         0.4983
Rucheng       -3.6992e-01 -8.8999e-03  2.5272e-01 -7.1814e-01         0.4727
Sangzhi        2.5053e-01 -4.9470e-03  6.8000e-02  9.7972e-01         0.3272
Shaodong      -3.2659e-02 -3.6592e-05  5.0546e-04 -1.4510e+00         0.1468
Shaoshan       2.1223e+00 -5.0227e-02  1.3668e+00  1.8583e+00         0.0631
Shaoyang       5.9499e-01 -1.1253e-02  1.3012e-01  1.6807e+00         0.0928
Shimen        -3.8794e-02 -3.8603e-04  6.4756e-03 -4.7729e-01         0.6332
Shuangfeng     9.2835e-03 -2.2867e-03  3.1516e-02  6.5174e-02         0.9480
Shuangpai      8.0591e-02 -3.1366e-04  8.9838e-03  8.5358e-01         0.3933
Suining        3.7585e-01 -3.5933e-03  4.1870e-02  1.8544e+00         0.0637
Taojiang      -2.5394e-01 -1.2395e-03  1.4477e-02 -2.1002e+00         0.0357
Taoyuan        1.4729e-02 -1.2039e-04  8.5103e-04  5.0903e-01         0.6107
Tongdao        4.6482e-01 -6.9870e-03  1.9879e-01  1.0582e+00         0.2900
Wangcheng      4.4220e+00 -1.1067e-01  1.3596e+00  3.8873e+00         0.0001
Wugang         7.1003e-01 -7.8144e-03  1.0710e-01  2.1935e+00         0.0283
Xiangtan       2.4530e-01 -3.6457e-04  3.2319e-03  4.3213e+00         0.0000
Xiangxiang     2.6271e-01 -1.2703e-03  2.1290e-02  1.8092e+00         0.0704
Xiangyin       5.4525e-01 -4.7442e-03  7.9236e-02  1.9539e+00         0.0507
Xinhua         1.1810e-01 -6.2649e-03  8.6001e-02  4.2409e-01         0.6715
Xinhuang       1.5725e-01 -4.1820e-03  3.6648e-01  2.6667e-01         0.7897
Xinning        6.8928e-01 -9.6674e-03  2.0328e-01  1.5502e+00         0.1211
Xinshao        5.7578e-02 -8.5932e-03  1.1769e-01  1.9289e-01         0.8470
Xintian       -7.4050e-03 -5.1493e-03  1.0877e-01 -6.8395e-03         0.9945
Xupu           3.2406e-01 -5.7468e-03  5.7735e-02  1.3726e+00         0.1699
Yanling       -6.9021e-02 -5.9211e-04  9.9306e-03 -6.8667e-01         0.4923
Yizhang       -2.6844e-01 -2.2463e-03  4.7588e-02 -1.2202e+00         0.2224
Yongshun       6.3064e-01 -1.1350e-02  1.8830e-01  1.4795e+00         0.1390
Yongxing       4.3411e-01 -9.0735e-03  1.5088e-01  1.1409e+00         0.2539
You            7.8750e-02 -7.2728e-03  1.2116e-01  2.4714e-01         0.8048
Yuanjiang      2.0004e-04 -1.7760e-04  2.9798e-03  6.9181e-03         0.9945
Yuanling       8.7298e-03 -2.2981e-06  2.3221e-05  1.8121e+00         0.0700
Yueyang        4.1189e-02 -1.9768e-04  2.3113e-03  8.6085e-01         0.3893
Zhijiang       1.0476e-01 -7.8123e-04  1.3100e-02  9.2214e-01         0.3565
Zhongfang     -2.2685e-01 -2.1455e-03  3.5927e-02 -1.1855e+00         0.2358
Zhuzhou        3.2864e-01 -5.2432e-04  7.2391e-03  3.8688e+00         0.0001
Zixing        -7.6849e-01 -8.8210e-02  9.4057e-01 -7.0144e-01         0.4830</code></pre>
</div>
</div>
</section>
<section id="mapping-local-morans-i" class="level3">
<h3 class="anchored" data-anchor-id="mapping-local-morans-i">Mapping local Moran’s I</h3>
<p>Before mapping the local Moran’s I map, append the local Moran’s I dataframe (i.e.&nbsp;<code>localMI</code>) to <code>hunan</code> SpatialPolygonDataFrame. The code chunks below can be used to perform the task. The resultant SpatialPolygonDataFrame is named <code>hunan.localMI</code>.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb43" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb43-1">hunan.localMI <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cbind</span>(hunan,localMI) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb43-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rename</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Pr.Ii =</span> Pr.z....E.Ii..)</span></code></pre></div>
</div>
<p>Using the choropleth mapping functions of <strong>tmap</strong> package, plot the local Moran’s I values using the code chunks below.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb44" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb44-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tm_shape</span>(hunan.localMI) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb44-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tm_fill</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Ii"</span>, </span>
<span id="cb44-3">          <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">style =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"pretty"</span>,</span>
<span id="cb44-4">          <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">palette =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"RdBu"</span>,</span>
<span id="cb44-5">          <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">title =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"local moran statistics"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb44-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tm_borders</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">alpha =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://geospatial2023.netlify.app/Hands_on_Exercise/Ex2/Hands_on_Ex2b_files/figure-html/unnamed-chunk-27-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>The choropleth above shows that there is evidence for both positive and negative I<sub>i</sub> values. However, it is useful to consider the p-values for each of these values above. The code chunks below produce a choropleth map of Moran’s I p-values by using functions of <strong>tmap</strong> package.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb45" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb45-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tm_shape</span>(hunan.localMI) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb45-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tm_fill</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Pr.Ii"</span>, </span>
<span id="cb45-3">          <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">breaks=</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">Inf</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.001</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.01</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.05</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.1</span>, <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">Inf</span>),</span>
<span id="cb45-4">          <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">palette=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"-Blues"</span>, </span>
<span id="cb45-5">          <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">title =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"local Moran's I p-values"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb45-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tm_borders</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">alpha =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://geospatial2023.netlify.app/Hands_on_Exercise/Ex2/Hands_on_Ex2b_files/figure-html/unnamed-chunk-28-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>For effective interpretation, it is better to plot both the local Moran’s I values map and its corresponding p-values map next to each other. The code chunk below will be used to create such visualisation.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb46" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb46-1">localMI.map <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tm_shape</span>(hunan.localMI) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb46-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tm_fill</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Ii"</span>, </span>
<span id="cb46-3">          <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">style =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"pretty"</span>, </span>
<span id="cb46-4">          <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">title =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"local moran statistics"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb46-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tm_borders</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">alpha =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>)</span>
<span id="cb46-6"></span>
<span id="cb46-7">pvalue.map <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tm_shape</span>(hunan.localMI) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb46-8">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tm_fill</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Pr.Ii"</span>, </span>
<span id="cb46-9">          <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">breaks=</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">Inf</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.001</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.01</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.05</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.1</span>, <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">Inf</span>),</span>
<span id="cb46-10">          <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">palette=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"-Blues"</span>, </span>
<span id="cb46-11">          <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">title =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"local Moran's I p-values"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb46-12">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tm_borders</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">alpha =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>)</span>
<span id="cb46-13"></span>
<span id="cb46-14"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tmap_arrange</span>(localMI.map, pvalue.map, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">asp=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ncol=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://geospatial2023.netlify.app/Hands_on_Exercise/Ex2/Hands_on_Ex2b_files/figure-html/unnamed-chunk-29-1.png" class="img-fluid" width="672"></p>
</div>
</div>
</section>
</section>
<section id="creating-a-lisa-cluster-map" class="level2">
<h2 class="anchored" data-anchor-id="creating-a-lisa-cluster-map">Creating a LISA Cluster Map</h2>
<p>The LISA Cluster Map shows the significant locations color coded by type of spatial autocorrelation. The first step before generating the LISA cluster map is to plot the Moran scatterplot.</p>
<section id="plotting-moran-scatterplot" class="level3">
<h3 class="anchored" data-anchor-id="plotting-moran-scatterplot">Plotting Moran scatterplot</h3>
<p>The Moran scatterplot is an illustration of the relationship between the values of the chosen attribute at each location and the average value of the same attribute at neighboring locations. The code chunk below plots the Moran scatterplot of GDPPC 2012 by using <code>moran.plot()</code> of <strong>spdep</strong>.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb47" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb47-1">nci <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">moran.plot</span>(hunan<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>GDPPC, rswm_q,</span>
<span id="cb47-2">                  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">labels=</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.character</span>(hunan<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>County), </span>
<span id="cb47-3">                  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xlab=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"GDPPC 2012"</span>, </span>
<span id="cb47-4">                  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ylab=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Spatially Lag GDPPC 2012"</span>)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://geospatial2023.netlify.app/Hands_on_Exercise/Ex2/Hands_on_Ex2b_files/figure-html/unnamed-chunk-30-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>Notice that the plot is split in 4 quadrants. The top right corner belongs to areas that have high GDPPC and are surrounded by other areas that have the average level of GDPPC. This are the high-high locations in the lesson slide.</p>
</section>
<section id="plotting-moran-scatterplot-with-standardised-variable" class="level3">
<h3 class="anchored" data-anchor-id="plotting-moran-scatterplot-with-standardised-variable">Plotting Moran scatterplot with standardised variable</h3>
<p>First, use <code>scale()</code> to center and scale the variable. Here, centering is done by subtracting the mean (omitting NAs) the corresponding columns, and scaling is done by dividing the (centered) variable by their standard deviations.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb48" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb48-1">hunan<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>Z.GDPPC <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale</span>(hunan<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>GDPPC) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb48-2">  as.vector </span></code></pre></div>
</div>
<p>The <code>as.vector()</code> added to the end ensures that the resultant data type is a vector. Now, plot the Moran scatterplot again using the code chunk below.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb49" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb49-1">nci2 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">moran.plot</span>(hunan<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>Z.GDPPC, rswm_q,</span>
<span id="cb49-2">                   <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">labels=</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.character</span>(hunan<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>County),</span>
<span id="cb49-3">                   <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xlab=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"z-GDPPC 2012"</span>, </span>
<span id="cb49-4">                   <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ylab=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Spatially Lag z-GDPPC 2012"</span>)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://geospatial2023.netlify.app/Hands_on_Exercise/Ex2/Hands_on_Ex2b_files/figure-html/unnamed-chunk-32-1.png" class="img-fluid" width="672"></p>
</div>
</div>
</section>
<section id="preparing-lisa-map-classes" class="level3">
<h3 class="anchored" data-anchor-id="preparing-lisa-map-classes">Preparing LISA map classes</h3>
<p>The code chunks below show the steps to prepare a LISA cluster map.</p>
<div class="cell">
<div class="sourceCode cell-code" id="annotated-cell-33" style="background: #f1f3f5;"><pre class="sourceCode r code-annotation-code code-with-copy code-annotated"><code class="sourceCode r"><a class="code-annotation-anchor" data-target-cell="annotated-cell-33" data-target-annotation="1" onclick="event.preventDefault();">1</a><span id="annotated-cell-33-1" class="code-annotation-target">quadrant <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">vector</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">mode=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"numeric"</span>,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">length=</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">nrow</span>(localMI))</span>
<a class="code-annotation-anchor" data-target-cell="annotated-cell-33" data-target-annotation="2" onclick="event.preventDefault();">2</a><span id="annotated-cell-33-2" class="code-annotation-target">hunan<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>lag_GDPPC <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lag.listw</span>(rswm_q, hunan<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>GDPPC)</span>
<span id="annotated-cell-33-3">DV <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> hunan<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>lag_GDPPC <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mean</span>(hunan<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>lag_GDPPC)</span>
<a class="code-annotation-anchor" data-target-cell="annotated-cell-33" data-target-annotation="3" onclick="event.preventDefault();">3</a><span id="annotated-cell-33-4" class="code-annotation-target">LM_I <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> localMI[,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]</span>
<a class="code-annotation-anchor" data-target-cell="annotated-cell-33" data-target-annotation="4" onclick="event.preventDefault();">4</a><span id="annotated-cell-33-5" class="code-annotation-target">signif <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.05</span></span>
<a class="code-annotation-anchor" data-target-cell="annotated-cell-33" data-target-annotation="5" onclick="event.preventDefault();">5</a><span id="annotated-cell-33-6" class="code-annotation-target">quadrant[DV <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> LM_I<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>] <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="annotated-cell-33-7">quadrant[DV <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> LM_I<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>] <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span></span>
<span id="annotated-cell-33-8">quadrant[DV <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> LM_I<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>] <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span></span>
<span id="annotated-cell-33-9">quadrant[DV <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> LM_I<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>] <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span></span>
<a class="code-annotation-anchor" data-target-cell="annotated-cell-33" data-target-annotation="6" onclick="event.preventDefault();">6</a><span id="annotated-cell-33-10" class="code-annotation-target">quadrant[localMI[,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span>signif] <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span><div class="code-annotation-gutter-bg"></div><div class="code-annotation-gutter"></div></code></pre></div>
<div class="cell-annotation">
<dl class="code-annotation-container-grid">
<dt data-target-cell="annotated-cell-33" data-target-annotation="1">1</dt>
<dd>
<span data-code-cell="annotated-cell-33" data-code-annotation="1" data-code-lines="1">Create the quadrant objects.</span>
</dd>
<dt data-target-cell="annotated-cell-33" data-target-annotation="2">2</dt>
<dd>
<span data-code-cell="annotated-cell-33" data-code-annotation="2" data-code-lines="2,3">Derive the spatially lagged variable of interest (i.e.&nbsp;GDPPC) and center the spatially lagged variable around its mean.</span>
</dd>
<dt data-target-cell="annotated-cell-33" data-target-annotation="3">3</dt>
<dd>
<span data-code-cell="annotated-cell-33" data-code-annotation="3" data-code-lines="4">Center the local Moran’s around the mean.</span>
</dd>
<dt data-target-cell="annotated-cell-33" data-target-annotation="4">4</dt>
<dd>
<span data-code-cell="annotated-cell-33" data-code-annotation="4" data-code-lines="5">Set a statistical significance level for the local Moran.</span>
</dd>
<dt data-target-cell="annotated-cell-33" data-target-annotation="5">5</dt>
<dd>
<span data-code-cell="annotated-cell-33" data-code-annotation="5" data-code-lines="6,7,8,9">Define the low-low (1), low-high (2), high-low (3) and high-high (4) categories.</span>
</dd>
<dt data-target-cell="annotated-cell-33" data-target-annotation="6">6</dt>
<dd>
<span data-code-cell="annotated-cell-33" data-code-annotation="6" data-code-lines="10">Assign non-significant Moran values to the category 0.</span>
</dd>
</dl>
</div>
</div>
</section>
<section id="plotting-lisa-map" class="level3">
<h3 class="anchored" data-anchor-id="plotting-lisa-map">Plotting LISA map</h3>
<p>Now, build the LISA map using the code chunks below.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb50" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb50-1">hunan.localMI<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>quadrant <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> quadrant</span>
<span id="cb50-2">colors <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#ffffff"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#2c7bb6"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#abd9e9"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#fdae61"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#d7191c"</span>)</span>
<span id="cb50-3">clusters <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"insignificant"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"low-low"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"low-high"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"high-low"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"high-high"</span>)</span>
<span id="cb50-4"></span>
<span id="cb50-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tm_shape</span>(hunan.localMI) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb50-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tm_fill</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"quadrant"</span>, </span>
<span id="cb50-7">          <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">style =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cat"</span>, </span>
<span id="cb50-8">          <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">palette =</span> colors[<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sort</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unique</span>(quadrant)))<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>], </span>
<span id="cb50-9">          <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">labels =</span> clusters[<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sort</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unique</span>(quadrant)))<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>],</span>
<span id="cb50-10">          <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">popup.vars =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb50-11">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tm_view</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">set.zoom.limits =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">11</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">17</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb50-12">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tm_borders</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">alpha=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://geospatial2023.netlify.app/Hands_on_Exercise/Ex2/Hands_on_Ex2b_files/figure-html/unnamed-chunk-34-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>For effective interpretation, it is better to plot the LISA map alongside the Moran’s I values map and its corresponding p-values map. The code chunk below will be used to create such visualisation.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb51" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb51-1">gdppc <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">qtm</span>(hunan, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"GDPPC"</span>)</span>
<span id="cb51-2"></span>
<span id="cb51-3">hunan.localMI<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>quadrant <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> quadrant</span>
<span id="cb51-4">colors <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#ffffff"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#2c7bb6"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#abd9e9"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#fdae61"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#d7191c"</span>)</span>
<span id="cb51-5">clusters <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"insignificant"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"low-low"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"low-high"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"high-low"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"high-high"</span>)</span>
<span id="cb51-6"></span>
<span id="cb51-7">LISAmap <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tm_shape</span>(hunan.localMI) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb51-8">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tm_fill</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"quadrant"</span>, </span>
<span id="cb51-9">          <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">style =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cat"</span>, </span>
<span id="cb51-10">          <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">palette =</span> colors[<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sort</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unique</span>(quadrant)))<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>], </span>
<span id="cb51-11">          <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">labels =</span> clusters[<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sort</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unique</span>(quadrant)))<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>],</span>
<span id="cb51-12">          <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">popup.vars =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb51-13">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tm_view</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">set.zoom.limits =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">11</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">17</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb51-14">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tm_borders</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">alpha=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>)</span>
<span id="cb51-15"></span>
<span id="cb51-16"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tmap_arrange</span>(gdppc, LISAmap, localMI.map, pvalue.map, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">asp=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ncol=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://geospatial2023.netlify.app/Hands_on_Exercise/Ex2/Hands_on_Ex2b_files/figure-html/unnamed-chunk-35-1.png" class="img-fluid" width="1152"></p>
</div>
</div>
</section>
</section>
<section id="hot-spot-and-cold-spot-area-analysis" class="level2">
<h2 class="anchored" data-anchor-id="hot-spot-and-cold-spot-area-analysis">Hot Spot and Cold Spot Area Analysis</h2>
<p>Beside detecting cluster and outliers, localised spatial statistics can be also used to detect hot spot and/or cold spot areas. Generally, ‘hot spot’ describes a region or value that is higher relative to its surroundings.</p>
<section id="getis-and-ords-g-statistics" class="level3">
<h3 class="anchored" data-anchor-id="getis-and-ords-g-statistics">Getis and Ord’s G-Statistics</h3>
<p>The Getis and Ord’s G-statistics can be used to detect spatial anomalies as it looks at neighbours within a defined proximity to identify where either high or low values clutser spatially. Here, statistically significant hot-spots are recognised as areas of high values where other areas within a neighbourhood range also share high values too.</p>
<p>The analysis consists of three steps:</p>
<ol type="1">
<li>Deriving spatial weights matrix</li>
<li>Computing G<sub>i</sub> statistics</li>
<li>Mapping G<sub>i</sub> statistics</li>
</ol>
</section>
<section id="deriving-distance-based-weights-matrix" class="level3">
<h3 class="anchored" data-anchor-id="deriving-distance-based-weights-matrix">Deriving distance-based weights matrix</h3>
<p>First, define a new set of neighbours. Whist the spatial autocorrelation considered units which shared borders, for Getis-Ord neighbours are defined based on distance.</p>
<p>There are two type of distance-based proximity matrix, they are:</p>
<ul>
<li><a href="https://geospatial2023.netlify.app/hands_on_exercise/ex2/hands_on_ex2a#computing-fixed-distance-weights-matrix">fixed distance weights matrix</a>; and</li>
<li><a href="https://geospatial2023.netlify.app/hands_on_exercise/ex2/hands_on_ex2a#computing-adaptive-distance-weights-matrix">adaptive distance weights matrix</a>.</li>
</ul>
<div class="tabset-margin-container"></div><div class="panel-tabset">
<ul class="nav nav-tabs"><li class="nav-item"><a class="nav-link active" id="tabset-1-1-tab" data-bs-toggle="tab" data-bs-target="#tabset-1-1" aria-controls="tabset-1-1" aria-selected="true">Computing fixed distance weights matrix</a></li><li class="nav-item"><a class="nav-link" id="tabset-1-2-tab" data-bs-toggle="tab" data-bs-target="#tabset-1-2" aria-controls="tabset-1-2" aria-selected="false">Computing adaptive distance weights matrix</a></li></ul>
<div class="tab-content">
<div id="tabset-1-1" class="tab-pane active" aria-labelledby="tabset-1-1-tab">
<p>Derive the centroids:</p>
<div class="cell">
<details>
<summary>Show code</summary>
<div class="sourceCode cell-code" id="cb52" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb52-1">longitude <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">map_dbl</span>(hunan<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>geometry, <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">st_centroid</span>(.x)[[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]])</span>
<span id="cb52-2">latitude <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">map_dbl</span>(hunan<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>geometry, <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">st_centroid</span>(.x)[[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>]])</span>
<span id="cb52-3">coords <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cbind</span>(longitude, latitude)</span></code></pre></div>
</details>
</div>
<p>Determine the cut-off distance:</p>
<div class="cell">
<details>
<summary>Show code</summary>
<div class="sourceCode cell-code" id="cb53" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb53-1">k1 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">knn2nb</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">knearneigh</span>(coords))</span>
<span id="cb53-2">k1dists <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unlist</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">nbdists</span>(k1, coords, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">longlat =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>))</span>
<span id="cb53-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summary</span>(k1dists)</span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
  24.79   32.57   38.01   39.07   44.52   61.79 </code></pre>
</div>
</div>
<p>The largest first nearest neighbour distance is 61.79 km, so set this as the upper threshold to ensure all units will have at least one neighbour.</p>
<p>Compute fixed distance weights matrix:</p>
<div class="cell">
<details>
<summary>Show code</summary>
<div class="sourceCode cell-code" id="cb55" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb55-1">wm_d62 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dnearneigh</span>(coords, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">62</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">longlat =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>)</span>
<span id="cb55-2">wm62_lw <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">nb2listw</span>(wm_d62, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">style =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'B'</span>)</span>
<span id="cb55-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summary</span>(wm62_lw)</span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>Characteristics of weights list object:
Neighbour list object:
Number of regions: 88 
Number of nonzero links: 324 
Percentage nonzero weights: 4.183884 
Average number of links: 3.681818 
Link number distribution:

 1  2  3  4  5  6 
 6 15 14 26 20  7 
6 least connected regions:
6 15 30 32 56 65 with 1 link
7 most connected regions:
21 28 35 45 50 52 82 with 6 links

Weights style: B 
Weights constants summary:
   n   nn  S0  S1   S2
B 88 7744 324 648 5440</code></pre>
</div>
</div>
</div>
<div id="tabset-1-2" class="tab-pane" aria-labelledby="tabset-1-2-tab">
<p>Use k-nearest neighbours to control the numbers of neighbours:</p>
<div class="cell">
<details>
<summary>Show code</summary>
<div class="sourceCode cell-code" id="cb57" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb57-1">knn <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">knn2nb</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">knearneigh</span>(coords, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">k=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>))</span>
<span id="cb57-2">knn_lw <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">nb2listw</span>(knn, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">style =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'B'</span>)</span>
<span id="cb57-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summary</span>(knn_lw)</span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>Characteristics of weights list object:
Neighbour list object:
Number of regions: 88 
Number of nonzero links: 704 
Percentage nonzero weights: 9.090909 
Average number of links: 8 
Non-symmetric neighbours list
Link number distribution:

 8 
88 
88 least connected regions:
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 with 8 links
88 most connected regions:
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 with 8 links

Weights style: B 
Weights constants summary:
   n   nn  S0   S1    S2
B 88 7744 704 1300 23014</code></pre>
</div>
</div>
</div>
</div>
</div>
</section>
<section id="computing-gi-statistics" class="level3">
<h3 class="anchored" data-anchor-id="computing-gi-statistics">Computing G<sub>i</sub> statistics</h3>
<div class="tabset-margin-container"></div><div class="panel-tabset">
<ul class="nav nav-tabs"><li class="nav-item"><a class="nav-link active" id="tabset-2-1-tab" data-bs-toggle="tab" data-bs-target="#tabset-2-1" aria-controls="tabset-2-1" aria-selected="true">Using fixed distance weights matrix</a></li><li class="nav-item"><a class="nav-link" id="tabset-2-2-tab" data-bs-toggle="tab" data-bs-target="#tabset-2-2" aria-controls="tabset-2-2" aria-selected="false">Using adaptive distance weights matrix</a></li></ul>
<div class="tab-content">
<div id="tabset-2-1" class="tab-pane active" aria-labelledby="tabset-2-1-tab">
<div class="cell">
<details>
<summary>Show code</summary>
<div class="sourceCode cell-code" id="cb59" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb59-1">fips <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">order</span>(hunan<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>County)</span>
<span id="cb59-2">gi.fixed <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">localG</span>(hunan<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>GDPPC, wm62_lw)</span>
<span id="cb59-3">gi.fixed</span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code> [1]  0.436075843 -0.265505650 -0.073033665  0.413017033  0.273070579
 [6] -0.377510776  2.863898821  2.794350420  5.216125401  0.228236603
[11]  0.951035346 -0.536334231  0.176761556  1.195564020 -0.033020610
[16]  1.378081093 -0.585756761 -0.419680565  0.258805141  0.012056111
[21] -0.145716531 -0.027158687 -0.318615290 -0.748946051 -0.961700582
[26] -0.796851342 -1.033949773 -0.460979158 -0.885240161 -0.266671512
[31] -0.886168613 -0.855476971 -0.922143185 -1.162328599  0.735582222
[36] -0.003358489 -0.967459309 -1.259299080 -1.452256513 -1.540671121
[41] -1.395011407 -1.681505286 -1.314110709 -0.767944457 -0.192889342
[46]  2.720804542  1.809191360 -1.218469473 -0.511984469 -0.834546363
[51] -0.908179070 -1.541081516 -1.192199867 -1.075080164 -1.631075961
[56] -0.743472246  0.418842387  0.832943753 -0.710289083 -0.449718820
[61] -0.493238743 -1.083386776  0.042979051  0.008596093  0.136337469
[66]  2.203411744  2.690329952  4.453703219 -0.340842743 -0.129318589
[71]  0.737806634 -1.246912658  0.666667559  1.088613505 -0.985792573
[76]  1.233609606 -0.487196415  1.626174042 -1.060416797  0.425361422
[81] -0.837897118 -0.314565243  0.371456331  4.424392623 -0.109566928
[86]  1.364597995 -1.029658605 -0.718000620
attr(,"internals")
               Gi      E(Gi)        V(Gi)        Z(Gi) Pr(z != E(Gi))
 [1,] 0.064192949 0.05747126 2.375922e-04  0.436075843   6.627817e-01
 [2,] 0.042300020 0.04597701 1.917951e-04 -0.265505650   7.906200e-01
 [3,] 0.044961480 0.04597701 1.933486e-04 -0.073033665   9.417793e-01
 [4,] 0.039475779 0.03448276 1.461473e-04  0.413017033   6.795941e-01
 [5,] 0.049767939 0.04597701 1.927263e-04  0.273070579   7.847990e-01
 [6,] 0.008825335 0.01149425 4.998177e-05 -0.377510776   7.057941e-01
 [7,] 0.050807266 0.02298851 9.435398e-05  2.863898821   4.184617e-03
 [8,] 0.083966739 0.04597701 1.848292e-04  2.794350420   5.200409e-03
 [9,] 0.115751554 0.04597701 1.789361e-04  5.216125401   1.827045e-07
[10,] 0.049115587 0.04597701 1.891013e-04  0.228236603   8.194623e-01
[11,] 0.045819180 0.03448276 1.420884e-04  0.951035346   3.415864e-01
[12,] 0.049183846 0.05747126 2.387633e-04 -0.536334231   5.917276e-01
[13,] 0.048429181 0.04597701 1.924532e-04  0.176761556   8.596957e-01
[14,] 0.034733752 0.02298851 9.651140e-05  1.195564020   2.318667e-01
[15,] 0.011262043 0.01149425 4.945294e-05 -0.033020610   9.736582e-01
[16,] 0.065131196 0.04597701 1.931870e-04  1.378081093   1.681783e-01
[17,] 0.027587075 0.03448276 1.385862e-04 -0.585756761   5.580390e-01
[18,] 0.029409313 0.03448276 1.461397e-04 -0.419680565   6.747188e-01
[19,] 0.061466754 0.05747126 2.383385e-04  0.258805141   7.957856e-01
[20,] 0.057656917 0.05747126 2.371303e-04  0.012056111   9.903808e-01
[21,] 0.066518379 0.06896552 2.820326e-04 -0.145716531   8.841452e-01
[22,] 0.045599896 0.04597701 1.928108e-04 -0.027158687   9.783332e-01
[23,] 0.030646753 0.03448276 1.449523e-04 -0.318615290   7.500183e-01
[24,] 0.035635552 0.04597701 1.906613e-04 -0.748946051   4.538897e-01
[25,] 0.032606647 0.04597701 1.932888e-04 -0.961700582   3.362000e-01
[26,] 0.035001352 0.04597701 1.897172e-04 -0.796851342   4.255374e-01
[27,] 0.012746354 0.02298851 9.812587e-05 -1.033949773   3.011596e-01
[28,] 0.061287917 0.06896552 2.773884e-04 -0.460979158   6.448136e-01
[29,] 0.014277403 0.02298851 9.683314e-05 -0.885240161   3.760271e-01
[30,] 0.009622875 0.01149425 4.924586e-05 -0.266671512   7.897221e-01
[31,] 0.014258398 0.02298851 9.705244e-05 -0.886168613   3.755267e-01
[32,] 0.005453443 0.01149425 4.986245e-05 -0.855476971   3.922871e-01
[33,] 0.043283712 0.05747126 2.367109e-04 -0.922143185   3.564539e-01
[34,] 0.020763514 0.03448276 1.393165e-04 -1.162328599   2.451020e-01
[35,] 0.081261843 0.06896552 2.794398e-04  0.735582222   4.619850e-01
[36,] 0.057419907 0.05747126 2.338437e-04 -0.003358489   9.973203e-01
[37,] 0.013497133 0.02298851 9.624821e-05 -0.967459309   3.333145e-01
[38,] 0.019289310 0.03448276 1.455643e-04 -1.259299080   2.079223e-01
[39,] 0.025996272 0.04597701 1.892938e-04 -1.452256513   1.464303e-01
[40,] 0.016092694 0.03448276 1.424776e-04 -1.540671121   1.233968e-01
[41,] 0.035952614 0.05747126 2.379439e-04 -1.395011407   1.630124e-01
[42,] 0.031690963 0.05747126 2.350604e-04 -1.681505286   9.266481e-02
[43,] 0.018750079 0.03448276 1.433314e-04 -1.314110709   1.888090e-01
[44,] 0.015449080 0.02298851 9.638666e-05 -0.767944457   4.425202e-01
[45,] 0.065760689 0.06896552 2.760533e-04 -0.192889342   8.470456e-01
[46,] 0.098966900 0.05747126 2.326002e-04  2.720804542   6.512325e-03
[47,] 0.085415780 0.05747126 2.385746e-04  1.809191360   7.042128e-02
[48,] 0.038816536 0.05747126 2.343951e-04 -1.218469473   2.230456e-01
[49,] 0.038931873 0.04597701 1.893501e-04 -0.511984469   6.086619e-01
[50,] 0.055098610 0.06896552 2.760948e-04 -0.834546363   4.039732e-01
[51,] 0.033405005 0.04597701 1.916312e-04 -0.908179070   3.637836e-01
[52,] 0.043040784 0.06896552 2.829941e-04 -1.541081516   1.232969e-01
[53,] 0.011297699 0.02298851 9.615920e-05 -1.192199867   2.331829e-01
[54,] 0.040968457 0.05747126 2.356318e-04 -1.075080164   2.823388e-01
[55,] 0.023629663 0.04597701 1.877170e-04 -1.631075961   1.028743e-01
[56,] 0.006281129 0.01149425 4.916619e-05 -0.743472246   4.571958e-01
[57,] 0.063918654 0.05747126 2.369553e-04  0.418842387   6.753313e-01
[58,] 0.070325003 0.05747126 2.381374e-04  0.832943753   4.048765e-01
[59,] 0.025947288 0.03448276 1.444058e-04 -0.710289083   4.775249e-01
[60,] 0.039752578 0.04597701 1.915656e-04 -0.449718820   6.529132e-01
[61,] 0.049934283 0.05747126 2.334965e-04 -0.493238743   6.218439e-01
[62,] 0.030964195 0.04597701 1.920248e-04 -1.083386776   2.786368e-01
[63,] 0.058129184 0.05747126 2.343319e-04  0.042979051   9.657182e-01
[64,] 0.046096514 0.04597701 1.932637e-04  0.008596093   9.931414e-01
[65,] 0.012459080 0.01149425 5.008051e-05  0.136337469   8.915545e-01
[66,] 0.091447733 0.05747126 2.377744e-04  2.203411744   2.756574e-02
[67,] 0.049575872 0.02298851 9.766513e-05  2.690329952   7.138140e-03
[68,] 0.107907212 0.04597701 1.933581e-04  4.453703219   8.440175e-06
[69,] 0.019616151 0.02298851 9.789454e-05 -0.340842743   7.332220e-01
[70,] 0.032923393 0.03448276 1.454032e-04 -0.129318589   8.971056e-01
[71,] 0.030317663 0.02298851 9.867859e-05  0.737806634   4.606320e-01
[72,] 0.019437582 0.03448276 1.455870e-04 -1.246912658   2.124295e-01
[73,] 0.055245460 0.04597701 1.932838e-04  0.666667559   5.049845e-01
[74,] 0.074278054 0.05747126 2.383538e-04  1.088613505   2.763244e-01
[75,] 0.013269580 0.02298851 9.719982e-05 -0.985792573   3.242349e-01
[76,] 0.049407829 0.03448276 1.463785e-04  1.233609606   2.173484e-01
[77,] 0.028605749 0.03448276 1.455139e-04 -0.487196415   6.261191e-01
[78,] 0.039087662 0.02298851 9.801040e-05  1.626174042   1.039126e-01
[79,] 0.031447120 0.04597701 1.877464e-04 -1.060416797   2.889550e-01
[80,] 0.064005294 0.05747126 2.359641e-04  0.425361422   6.705732e-01
[81,] 0.044606529 0.05747126 2.357330e-04 -0.837897118   4.020885e-01
[82,] 0.063700493 0.06896552 2.801427e-04 -0.314565243   7.530918e-01
[83,] 0.051142205 0.04597701 1.933560e-04  0.371456331   7.102977e-01
[84,] 0.102121112 0.04597701 1.610278e-04  4.424392623   9.671399e-06
[85,] 0.021901462 0.02298851 9.843172e-05 -0.109566928   9.127528e-01
[86,] 0.064931813 0.04597701 1.929430e-04  1.364597995   1.723794e-01
[87,] 0.031747344 0.04597701 1.909867e-04 -1.029658605   3.031703e-01
[88,] 0.015893319 0.02298851 9.765131e-05 -0.718000620   4.727569e-01
attr(,"cluster")
 [1] Low  Low  High High High High High High High Low  Low  High Low  Low  Low 
[16] High High High High Low  High High Low  Low  High Low  Low  Low  Low  Low 
[31] Low  Low  Low  High Low  Low  Low  Low  Low  Low  High Low  Low  Low  Low 
[46] High High Low  Low  Low  Low  High Low  Low  Low  Low  Low  High Low  Low 
[61] Low  Low  Low  High High High Low  High Low  Low  High Low  High High Low 
[76] High Low  Low  Low  Low  Low  Low  High High Low  High Low  Low 
Levels: Low High
attr(,"gstari")
[1] FALSE
attr(,"call")
localG(x = hunan$GDPPC, listw = wm62_lw)
attr(,"class")
[1] "localG"</code></pre>
</div>
</div>
<p>The output of <code>localG()</code> is a vector of G or Gstar values, with attributes <code>gstari</code> set to <code>TRUE</code> or <code>FALSE</code>, <code>call</code> set to the function call, and class <code>localG</code>.</p>
<p>The G<sub>i</sub> statistics is represented as a Z-score. Greater values represent a greater intensity of clustering and the direction (positive or negative) indicates high or low clusters.</p>
<p>Next, join the G<sub>i</sub> values to the corresponding <code>hunan</code> sf data frame by using the code chunk below:</p>
<ol type="1">
<li>Convert the output vector (i.e.&nbsp;<code>gi.fixed</code>) into R matrix object by using <code>as.matrix()</code>.</li>
<li><code>cbind()</code> is used to join <code>hunan</code> data and <code>gi.fixed</code> matrix to produce a new SpatialPolygonDataFrame called <code>hunan.gi</code>.</li>
<li>The field name of the G<sub>i</sub> values is then renamed to <code>gstat_fixed</code> by using <code>rename()</code>.</li>
</ol>
<div class="cell">
<div class="sourceCode cell-code" id="cb61" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb61-1">hunan.gi <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cbind</span>(hunan, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.matrix</span>(gi.fixed)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb61-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rename</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">gstat_fixed =</span> as.matrix.gi.fixed.)</span></code></pre></div>
</div>
<p>The code chunk below shows the functions used to map the Gi values derived using fixed distance weights matrix.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb62" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb62-1">gdppc <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">qtm</span>(hunan, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"GDPPC"</span>)</span>
<span id="cb62-2"></span>
<span id="cb62-3">Gimap <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tm_shape</span>(hunan.gi) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb62-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tm_fill</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"gstat_fixed"</span>, </span>
<span id="cb62-5">          <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">style =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"pretty"</span>,</span>
<span id="cb62-6">          <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">palette=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"-RdBu"</span>,</span>
<span id="cb62-7">          <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">title =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"local Gi"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb62-8">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tm_borders</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">alpha =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>)</span>
<span id="cb62-9"></span>
<span id="cb62-10"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tmap_arrange</span>(gdppc, Gimap, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">asp=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ncol=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://geospatial2023.netlify.app/Hands_on_Exercise/Ex2/Hands_on_Ex2b_files/figure-html/unnamed-chunk-42-1.png" class="img-fluid" width="672"></p>
</div>
</div>
</div>
<div id="tabset-2-2" class="tab-pane" aria-labelledby="tabset-2-2-tab">
<p>The code chunk below is used to compute the G<sub>i</sub> values for GDPPC2012 by using an adaptive distance weights matrix (i.e <code>knb_lw</code>).</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb63" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb63-1">fips <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">order</span>(hunan<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>County)</span>
<span id="cb63-2">gi.adaptive <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">localG</span>(hunan<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>GDPPC, knn_lw)</span>
<span id="cb63-3">hunan.gi <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cbind</span>(hunan, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.matrix</span>(gi.adaptive)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb63-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rename</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">gstat_adaptive =</span> as.matrix.gi.adaptive.)</span></code></pre></div>
</div>
<p>To visualise the locations of hot spot and cold spot areas, the choropleth mapping functions of <strong>tmap</strong> package will be used to map the G<sub>i</sub> values.</p>
<p>The code chunk below shows the functions used to map the G<sub>i</sub> values derived using fixed distance weights matrix.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb64" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb64-1">gdppc<span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">qtm</span>(hunan, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"GDPPC"</span>)</span>
<span id="cb64-2"></span>
<span id="cb64-3">Gimap <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tm_shape</span>(hunan.gi) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb64-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tm_fill</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"gstat_adaptive"</span>, </span>
<span id="cb64-5">          <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">style =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"pretty"</span>, </span>
<span id="cb64-6">          <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">palette=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"-RdBu"</span>, </span>
<span id="cb64-7">          <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">title =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"local Gi"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb64-8">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tm_borders</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">alpha =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>)</span>
<span id="cb64-9"></span>
<span id="cb64-10"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tmap_arrange</span>(gdppc, </span>
<span id="cb64-11">             Gimap, </span>
<span id="cb64-12">             <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">asp=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, </span>
<span id="cb64-13">             <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ncol=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://geospatial2023.netlify.app/Hands_on_Exercise/Ex2/Hands_on_Ex2b_files/figure-html/unnamed-chunk-44-1.png" class="img-fluid" width="672"></p>
</div>
</div>
</div>
</div>
</div>


</section>
</section>

 ]]></description>
  <guid>https://geospatial2023.netlify.app/Hands_on_Exercise/Ex2/Hands_on_Ex2b.html</guid>
  <pubDate>Tue, 21 Nov 2023 16:00:00 GMT</pubDate>
</item>
<item>
  <title>2a: Spatial Weights and Applications</title>
  <dc:creator>Magdalene Chan</dc:creator>
  <link>https://geospatial2023.netlify.app/Hands_on_Exercise/Ex2/Hands_on_Ex2a.html</link>
  <description><![CDATA[ 



<p><strong>Spatial weights</strong> (W<sub>ij</sub>) are a way to define spatial neighbourhoods.</p>
<section id="getting-started" class="level2">
<h2 class="anchored" data-anchor-id="getting-started">Getting Started</h2>
<p>The code chunk below uses <code>p_load()</code> of <strong>pacman</strong> package to check if the required packages have been installed on the computer. If they are, the packages will be launched.</p>
<ul>
<li><strong>sf</strong> package is used for importing, managing, and processing geospatial data.</li>
<li><strong>tmap</strong> package is used for thematic mapping.</li>
<li><strong>spdep</strong> package is used to create spatial weights matrix objects.</li>
</ul>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1">pacman<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">p_load</span>(sf, spdep, tmap, tidyverse, knitr)</span></code></pre></div>
</div>
<p>The data sets used are:</p>
<ul>
<li>Hunan county boundary layer: a geospatial data set in ESRI shapefile format.</li>
<li>Hunan_2012.csv: csv file that contains selected Hunan’s local development indicators in 2012.</li>
</ul>
</section>
<section id="importing-data" class="level2">
<h2 class="anchored" data-anchor-id="importing-data">Importing Data</h2>
<section id="import-shapefile-into-r" class="level3">
<h3 class="anchored" data-anchor-id="import-shapefile-into-r">Import shapefile into R</h3>
<p>The code chunk below uses the <code>st_read()</code> function of <strong>sf</strong> package to import Hunan county boundary shapefile into R as a simple feature data frame called <code>hunan</code>.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1">hunan <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">st_read</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">dsn =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"data/geospatial"</span>, </span>
<span id="cb2-2">                 <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">layer =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Hunan"</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Reading layer `Hunan' from data source 
  `C:\magdalenecjw\ISSS624 Geospatial\Hands_on_Exercise\Ex2\data\geospatial' 
  using driver `ESRI Shapefile'
Simple feature collection with 88 features and 7 fields
Geometry type: POLYGON
Dimension:     XY
Bounding box:  xmin: 108.7831 ymin: 24.6342 xmax: 114.2544 ymax: 30.12812
Geodetic CRS:  WGS 84</code></pre>
</div>
</div>
<p>There are a total of 88 polygon features and 7 fields in <code>hunan</code> simple feature data frame. <code>hunan</code> is in <strong>wgs84</strong> GCS.</p>
</section>
<section id="import-aspatial-data-into-r" class="level3">
<h3 class="anchored" data-anchor-id="import-aspatial-data-into-r">Import aspatial data into R</h3>
<p>The code chunk below uses the <code>read_csv()</code> function of <strong>readr</strong> package to import <code>Hunan_2012.csv</code> file into R and save it as a R dataframe called <code>hunan2012</code>.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1">hunan2012 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">read_csv</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"data/aspatial/Hunan_2012.csv"</span>)</span></code></pre></div>
</div>
</section>
<section id="performing-relational-join" class="level3">
<h3 class="anchored" data-anchor-id="performing-relational-join">Performing relational join</h3>
<p><code>left_join()</code> of <strong>dplyr</strong> is used to join the geographical data and attribute table using <code>County</code> as the common identifier.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1">hunan <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">left_join</span>(hunan,hunan2012)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb5-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">select</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">15</span>)</span></code></pre></div>
</div>
</section>
</section>
<section id="visualising-regional-development-indicator" class="level2">
<h2 class="anchored" data-anchor-id="visualising-regional-development-indicator">Visualising Regional Development Indicator</h2>
<p>Prepare a basemap and a choropleth map showing the distribution of GDPPC 2012 by using <code>qtm()</code> of <strong>tmap</strong> package.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb6-1">basemap <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tm_shape</span>(hunan) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb6-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tm_polygons</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb6-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tm_text</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"NAME_3"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>)</span>
<span id="cb6-4"></span>
<span id="cb6-5">gdppc <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">qtm</span>(hunan, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"GDPPC"</span>)</span>
<span id="cb6-6"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tmap_arrange</span>(basemap, gdppc, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">asp=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ncol=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://geospatial2023.netlify.app/Hands_on_Exercise/Ex2/Hands_on_Ex2a_files/figure-html/unnamed-chunk-5-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<blockquote class="blockquote">
<p>The choropleth map generated using <code>qtm()</code> is based on equal intervals. All except nine regions have a GDPPC of either “0 to 20,000” or “20,000 to 40,000” – the distribution of GDPPC appears to be right-skewed.</p>
</blockquote>
</section>
<section id="computing-contiguity-spatial-weights" class="level2">
<h2 class="anchored" data-anchor-id="computing-contiguity-spatial-weights">Computing Contiguity Spatial Weights</h2>
<p>Contiguity means that two spatial units share a common border of non-zero length. This can be further divided into rook or queen criterion of contiguity, in analogy to the moves allowed for the such-named pieces on a chess board.</p>
<p>The <strong>rook</strong> criterion defines neighbors by the existence of a common edge between two spatial units, while the <strong>queen</strong> criterion defines neighbors as spatial units sharing a common edge <strong>or</strong> a common vertex.</p>
<blockquote class="blockquote">
<p>Hence, the number of neighbors according to the queen criterion will always be larger than or equal to the rook criterion.</p>
</blockquote>
<section id="compute-contiguity-based-neighbours-based-on-queen-criterion" class="level3">
<h3 class="anchored" data-anchor-id="compute-contiguity-based-neighbours-based-on-queen-criterion">Compute contiguity based neighbours based on <strong>queen</strong> criterion</h3>
<p><code>poly2nb()</code> of <strong>spdep</strong> package computes contiguity weights matrices for the study area by building a neighbours list based on regions with contiguous boundaries. The code chunk below computes the <strong>queen</strong> contiguity weights matrix.</p>
<blockquote class="blockquote">
<p>In <code>poly2nb()</code>, the <code>queen</code> argument takes <code>TRUE</code> (default) or <code>FALSE</code> as options.</p>
</blockquote>
<div class="cell">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb7-1">wm_q <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">poly2nb</span>(hunan, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">queen=</span><span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>)</span>
<span id="cb7-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summary</span>(wm_q)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Neighbour list object:
Number of regions: 88 
Number of nonzero links: 448 
Percentage nonzero weights: 5.785124 
Average number of links: 5.090909 
Link number distribution:

 1  2  3  4  5  6  7  8  9 11 
 2  2 12 16 24 14 11  4  2  1 
2 least connected regions:
30 65 with 1 link
1 most connected region:
85 with 11 links</code></pre>
</div>
</div>
<p>Based on the summary report above, there are 88 area units in Hunan. The most connected area unit has 11 neighbours while there are two area units with only one neighbour each.</p>
<p>For each polygon in the polygon object, <code>wm_q</code> lists all neighboring polygons. The code chunk below can be used to see the neighbors for the individual polygons in the object.</p>
<div class="cell">
<div class="sourceCode cell-code" id="annotated-cell-7" style="background: #f1f3f5;"><pre class="sourceCode r code-annotation-code code-with-copy code-annotated"><code class="sourceCode r"><a class="code-annotation-anchor" data-target-cell="annotated-cell-7" data-target-annotation="1" onclick="event.preventDefault();">1</a><span id="annotated-cell-7-1" class="code-annotation-target">wm_q[[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]]</span>
<a class="code-annotation-anchor" data-target-cell="annotated-cell-7" data-target-annotation="2" onclick="event.preventDefault();">2</a><span id="annotated-cell-7-2" class="code-annotation-target">hunan<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>County[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]</span>
<a class="code-annotation-anchor" data-target-cell="annotated-cell-7" data-target-annotation="3" onclick="event.preventDefault();">3</a><span id="annotated-cell-7-3" class="code-annotation-target">hunan<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>NAME_3[<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">57</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">85</span>)]</span>
<a class="code-annotation-anchor" data-target-cell="annotated-cell-7" data-target-annotation="4" onclick="event.preventDefault();">4</a><span id="annotated-cell-7-4" class="code-annotation-target">hunan<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>GDPPC[wm_q[[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]]]</span><div class="code-annotation-gutter-bg"></div><div class="code-annotation-gutter"></div></code></pre></div>
<div class="cell-annotation">
<dl class="code-annotation-container-grid">
<dt data-target-cell="annotated-cell-7" data-target-annotation="1">1</dt>
<dd>
<span data-code-lines="1" data-code-annotation="1" data-code-cell="annotated-cell-7">Show the neighbors for the first polygon. Each number shown represents one polygon ID stored in <code>hunan</code> SpatialPolygonsDataFrame class.</span>
</dd>
<dt data-target-cell="annotated-cell-7" data-target-annotation="2">2</dt>
<dd>
<span data-code-lines="2" data-code-annotation="2" data-code-cell="annotated-cell-7">Retrieve the county name of Polygon ID=1.</span>
</dd>
<dt data-target-cell="annotated-cell-7" data-target-annotation="3">3</dt>
<dd>
<span data-code-lines="3" data-code-annotation="3" data-code-cell="annotated-cell-7">Retrieve the county names of the five neighboring polygons.</span>
</dd>
<dt data-target-cell="annotated-cell-7" data-target-annotation="4">4</dt>
<dd>
<span data-code-lines="4" data-code-annotation="4" data-code-cell="annotated-cell-7">Retrieve the GDPPC of the five neighboring counties.</span>
</dd>
</dl>
</div>
<div class="cell-output cell-output-stdout">
<pre><code>[1]  2  3  4 57 85
[1] "Anxiang"
[1] "Hanshou" "Jinshi"  "Li"      "Nan"     "Taoyuan"
[1] 20981 34592 24473 21311 22879</code></pre>
</div>
</div>
<p>The complete weights matrix can be displayed by using <code>str()</code>.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb10-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">str</span>(wm_q)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>List of 88
 $ : int [1:5] 2 3 4 57 85
 $ : int [1:5] 1 57 58 78 85
 $ : int [1:4] 1 4 5 85
 $ : int [1:4] 1 3 5 6
 $ : int [1:4] 3 4 6 85
 $ : int [1:5] 4 5 69 75 85
 $ : int [1:4] 67 71 74 84
 $ : int [1:7] 9 46 47 56 78 80 86
 $ : int [1:6] 8 66 68 78 84 86
 $ : int [1:8] 16 17 19 20 22 70 72 73
 $ : int [1:3] 14 17 72
 $ : int [1:5] 13 60 61 63 83
 $ : int [1:4] 12 15 60 83
 $ : int [1:3] 11 15 17
 $ : int [1:4] 13 14 17 83
 $ : int [1:5] 10 17 22 72 83
 $ : int [1:7] 10 11 14 15 16 72 83
 $ : int [1:5] 20 22 23 77 83
 $ : int [1:6] 10 20 21 73 74 86
 $ : int [1:7] 10 18 19 21 22 23 82
 $ : int [1:5] 19 20 35 82 86
 $ : int [1:5] 10 16 18 20 83
 $ : int [1:7] 18 20 38 41 77 79 82
 $ : int [1:5] 25 28 31 32 54
 $ : int [1:5] 24 28 31 33 81
 $ : int [1:4] 27 33 42 81
 $ : int [1:3] 26 29 42
 $ : int [1:5] 24 25 33 49 54
 $ : int [1:3] 27 37 42
 $ : int 33
 $ : int [1:8] 24 25 32 36 39 40 56 81
 $ : int [1:8] 24 31 50 54 55 56 75 85
 $ : int [1:5] 25 26 28 30 81
 $ : int [1:3] 36 45 80
 $ : int [1:6] 21 41 47 80 82 86
 $ : int [1:6] 31 34 40 45 56 80
 $ : int [1:4] 29 42 43 44
 $ : int [1:4] 23 44 77 79
 $ : int [1:5] 31 40 42 43 81
 $ : int [1:6] 31 36 39 43 45 79
 $ : int [1:6] 23 35 45 79 80 82
 $ : int [1:7] 26 27 29 37 39 43 81
 $ : int [1:6] 37 39 40 42 44 79
 $ : int [1:4] 37 38 43 79
 $ : int [1:6] 34 36 40 41 79 80
 $ : int [1:3] 8 47 86
 $ : int [1:5] 8 35 46 80 86
 $ : int [1:5] 50 51 52 53 55
 $ : int [1:4] 28 51 52 54
 $ : int [1:5] 32 48 52 54 55
 $ : int [1:3] 48 49 52
 $ : int [1:5] 48 49 50 51 54
 $ : int [1:3] 48 55 75
 $ : int [1:6] 24 28 32 49 50 52
 $ : int [1:5] 32 48 50 53 75
 $ : int [1:7] 8 31 32 36 78 80 85
 $ : int [1:6] 1 2 58 64 76 85
 $ : int [1:5] 2 57 68 76 78
 $ : int [1:4] 60 61 87 88
 $ : int [1:4] 12 13 59 61
 $ : int [1:7] 12 59 60 62 63 77 87
 $ : int [1:3] 61 77 87
 $ : int [1:4] 12 61 77 83
 $ : int [1:2] 57 76
 $ : int 76
 $ : int [1:5] 9 67 68 76 84
 $ : int [1:4] 7 66 76 84
 $ : int [1:5] 9 58 66 76 78
 $ : int [1:3] 6 75 85
 $ : int [1:3] 10 72 73
 $ : int [1:3] 7 73 74
 $ : int [1:5] 10 11 16 17 70
 $ : int [1:5] 10 19 70 71 74
 $ : int [1:6] 7 19 71 73 84 86
 $ : int [1:6] 6 32 53 55 69 85
 $ : int [1:7] 57 58 64 65 66 67 68
 $ : int [1:7] 18 23 38 61 62 63 83
 $ : int [1:7] 2 8 9 56 58 68 85
 $ : int [1:7] 23 38 40 41 43 44 45
 $ : int [1:8] 8 34 35 36 41 45 47 56
 $ : int [1:6] 25 26 31 33 39 42
 $ : int [1:5] 20 21 23 35 41
 $ : int [1:9] 12 13 15 16 17 18 22 63 77
 $ : int [1:6] 7 9 66 67 74 86
 $ : int [1:11] 1 2 3 5 6 32 56 57 69 75 ...
 $ : int [1:9] 8 9 19 21 35 46 47 74 84
 $ : int [1:4] 59 61 62 88
 $ : int [1:2] 59 87
 - attr(*, "class")= chr "nb"
 - attr(*, "region.id")= chr [1:88] "1" "2" "3" "4" ...
 - attr(*, "call")= language poly2nb(pl = hunan, queen = TRUE)
 - attr(*, "type")= chr "queen"
 - attr(*, "sym")= logi TRUE</code></pre>
</div>
</div>
<div class="callout callout-style-default callout-warning callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Warning
</div>
</div>
<div class="callout-body-container callout-body">
<p>The output may cut across several pages. To print out the report, it is advised to save the trees.</p>
</div>
</div>
</section>
<section id="compute-contiguity-based-neighbours-based-on-rook-criterion" class="level3">
<h3 class="anchored" data-anchor-id="compute-contiguity-based-neighbours-based-on-rook-criterion">Compute contiguity based neighbours based on <strong>rook</strong> criterion</h3>
<p>The code chunk below computes the <strong>rook</strong> contiguity weights matrix.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb12-1">wm_r <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">poly2nb</span>(hunan, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">queen=</span><span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>)</span>
<span id="cb12-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summary</span>(wm_r)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Neighbour list object:
Number of regions: 88 
Number of nonzero links: 440 
Percentage nonzero weights: 5.681818 
Average number of links: 5 
Link number distribution:

 1  2  3  4  5  6  7  8  9 10 
 2  2 12 20 21 14 11  3  2  1 
2 least connected regions:
30 65 with 1 link
1 most connected region:
85 with 10 links</code></pre>
</div>
</div>
<p>Based on the summary report above, there are 88 area units in Hunan. The most connected area unit has 10 neighbours while there are two area units with only one neighbour each.</p>
</section>
</section>
<section id="visualising-contiguity-weights" class="level2">
<h2 class="anchored" data-anchor-id="visualising-contiguity-weights">Visualising contiguity weights</h2>
<p>Connectivity graphs can be used to visualise contiguity weights. It takes a point and displays a line to each neighboring point. However, as the <code>hunan</code> simple feature data frame contains polygon geometry, points are needed in order to create the connectivity graphs. The most typical method to do so is to use polygon centroids, which can be calculated using the <strong>sf</strong> packages.</p>
<section id="getting-latitude-and-longitude-of-polygon-centroids" class="level3">
<h3 class="anchored" data-anchor-id="getting-latitude-and-longitude-of-polygon-centroids">Getting Latitude and Longitude of Polygon Centroids</h3>
<p><code>st_centroid()</code> can be used to obtain the polygon centroids. However, the coordinates need to be in a separate data frame in order to create the connectivity graphs. This can be done using a mapping function (<code>map()</code> from the <strong>purrr</strong> package), which applies a given function to each element of a vector and returns a vector of the same length.</p>
<blockquote class="blockquote">
<p>As <code>st_centroid()</code> returns a <code>dbl</code> data type, <code>map_dbl()</code> variation of the <code>map()</code> function from the <strong>purrr</strong> package should be used. Other variations of this function include <code>map_lgl()</code> for logical vectors, <code>map_int()</code> for integer vectors and <code>map_chr()</code> for string vectors.</p>
</blockquote>
<div class="tabset-margin-container"></div><div class="panel-tabset">
<ul class="nav nav-tabs"><li class="nav-item"><a class="nav-link active" id="tabset-1-1-tab" data-bs-toggle="tab" data-bs-target="#tabset-1-1" aria-controls="tabset-1-1" aria-selected="true">Longitude</a></li><li class="nav-item"><a class="nav-link" id="tabset-1-2-tab" data-bs-toggle="tab" data-bs-target="#tabset-1-2" aria-controls="tabset-1-2" aria-selected="false">Latitude</a></li><li class="nav-item"><a class="nav-link" id="tabset-1-3-tab" data-bs-toggle="tab" data-bs-target="#tabset-1-3" aria-controls="tabset-1-3" aria-selected="false">Binding Longitude and Latitude</a></li></ul>
<div class="tab-content">
<div id="tabset-1-1" class="tab-pane active" aria-labelledby="tabset-1-1-tab">
<p>To compute the longitude values, map <code>st_centroid()</code> over the geometry column of <code>hunan</code> and access the longitude value through double bracket notation [[]] and 1. This returns only the longitude, which is the first value in each centroid.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb14-1">longitude <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">map_dbl</span>(hunan<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>geometry, <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">st_centroid</span>(.x)[[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]])</span></code></pre></div>
</div>
</div>
<div id="tabset-1-2" class="tab-pane" aria-labelledby="tabset-1-2-tab">
<p>To compute the latitude values, map <code>st_centroid()</code> over the geometry column of <code>hunan</code> and access the latitude value through double bracket notation [[]] and 2. This returns only the latitude, which is the second value in each centroid.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb15-1">latitude <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">map_dbl</span>(hunan<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>geometry, <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">st_centroid</span>(.x)[[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>]])</span></code></pre></div>
</div>
</div>
<div id="tabset-1-3" class="tab-pane" aria-labelledby="tabset-1-3-tab">
<p><code>cbind()</code> can be used to put longitude and latitude into the same object.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb16-1">coords <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cbind</span>(longitude, latitude)</span></code></pre></div>
</div>
<p>Using <code>head()</code>, check the first few observations to see if things are formatted correctly.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb17" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb17-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">head</span>(coords)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>     longitude latitude
[1,]  112.1531 29.44362
[2,]  112.0372 28.86489
[3,]  111.8917 29.47107
[4,]  111.7031 29.74499
[5,]  111.6138 29.49258
[6,]  111.0341 29.79863</code></pre>
</div>
</div>
</div>
</div>
</div>
<p>Once the coordinates of the polygon centroids are obtained, connectivity graphs can be plotted to visualise contiguity weights.</p>
<div class="tabset-margin-container"></div><div class="panel-tabset">
<ul class="nav nav-tabs"><li class="nav-item"><a class="nav-link active" id="tabset-2-1-tab" data-bs-toggle="tab" data-bs-target="#tabset-2-1" aria-controls="tabset-2-1" aria-selected="true">Plotting Queen contiguity based neighbours map</a></li><li class="nav-item"><a class="nav-link" id="tabset-2-2-tab" data-bs-toggle="tab" data-bs-target="#tabset-2-2" aria-controls="tabset-2-2" aria-selected="false">Plotting Rook contiguity based neighbours map</a></li><li class="nav-item"><a class="nav-link" id="tabset-2-3-tab" data-bs-toggle="tab" data-bs-target="#tabset-2-3" aria-controls="tabset-2-3" aria-selected="false">Plotting both Queen and Rook contiguity based neighbours maps</a></li></ul>
<div class="tab-content">
<div id="tabset-2-1" class="tab-pane active" aria-labelledby="tabset-2-1-tab">
<div class="cell">
<div class="sourceCode cell-code" id="cb19" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb19-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot</span>(hunan<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>geometry, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">border=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"lightgrey"</span>)</span>
<span id="cb19-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot</span>(wm_q, coords, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pch =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">19</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">cex =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.6</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">add =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"red"</span>)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://geospatial2023.netlify.app/Hands_on_Exercise/Ex2/Hands_on_Ex2a_files/figure-html/unnamed-chunk-14-1.png" class="img-fluid" width="672"></p>
</div>
</div>
</div>
<div id="tabset-2-2" class="tab-pane" aria-labelledby="tabset-2-2-tab">
<div class="cell">
<div class="sourceCode cell-code" id="cb20" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb20-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot</span>(hunan<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>geometry, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">border=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"lightgrey"</span>)</span>
<span id="cb20-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot</span>(wm_r, coords, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pch =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">19</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">cex =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.6</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">add =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"red"</span>)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://geospatial2023.netlify.app/Hands_on_Exercise/Ex2/Hands_on_Ex2a_files/figure-html/unnamed-chunk-15-1.png" class="img-fluid" width="672"></p>
</div>
</div>
</div>
<div id="tabset-2-3" class="tab-pane" aria-labelledby="tabset-2-3-tab">
<div class="cell">
<div class="sourceCode cell-code" id="cb21" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb21-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">par</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">mfrow=</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>))</span>
<span id="cb21-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot</span>(hunan<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>geometry, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">border=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"lightgrey"</span>)</span>
<span id="cb21-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot</span>(wm_q, coords, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pch =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">19</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">cex =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.6</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">add =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"red"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">main=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Queen Contiguity"</span>)</span>
<span id="cb21-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot</span>(hunan<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>geometry, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">border=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"lightgrey"</span>)</span>
<span id="cb21-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot</span>(wm_r, coords, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pch =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">19</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">cex =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.6</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">add =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"red"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">main=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Rook Contiguity"</span>)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://geospatial2023.netlify.app/Hands_on_Exercise/Ex2/Hands_on_Ex2a_files/figure-html/unnamed-chunk-16-1.png" class="img-fluid" width="672"></p>
</div>
</div>
</div>
</div>
</div>
</section>
</section>
<section id="computing-distance-based-neighbours" class="level2">
<h2 class="anchored" data-anchor-id="computing-distance-based-neighbours">Computing distance based neighbours</h2>
<p>Distance-based weights matrices can be derived using <code>dnearneigh()</code> of <strong>spdep</strong> package. This function identifies neighbours of region points by Euclidean distance with a distance band defined by lower (<code>d1</code>) and upper (<code>d2</code>) bounds, controlled by the <code>bounds</code> argument. Regions falling within this distance range are considered neighbors.</p>
<p>If coordinates are unprojected (i.e.&nbsp;not transformed to a projected coordinate system) and in latitude and longitude format i.e.&nbsp;<code>longlat=TRUE</code>, the function calculates distances using the great circle distance formula i.e.&nbsp;the shortest distance between two points on the surface of a sphere, assuming the WGS84 reference ellipsoid.</p>
<section id="determine-the-cut-off-distance" class="level3">
<h3 class="anchored" data-anchor-id="determine-the-cut-off-distance">Determine the cut-off distance</h3>
<p>First, determine the upper limit for distance band using the steps below:</p>
<div class="cell">
<div class="sourceCode cell-code" id="annotated-cell-10" style="background: #f1f3f5;"><pre class="sourceCode r code-annotation-code code-with-copy code-annotated"><code class="sourceCode r"><span id="annotated-cell-10-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#coords &lt;- coordinates(hunan)</span></span>
<a class="code-annotation-anchor" data-target-cell="annotated-cell-10" data-target-annotation="1" onclick="event.preventDefault();">1</a><span id="annotated-cell-10-2" class="code-annotation-target">k1 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">knn2nb</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">knearneigh</span>(coords))</span>
<a class="code-annotation-anchor" data-target-cell="annotated-cell-10" data-target-annotation="2" onclick="event.preventDefault();">2</a><span id="annotated-cell-10-3" class="code-annotation-target">k1dists <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unlist</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">nbdists</span>(k1, coords, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">longlat =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>))</span>
<span id="annotated-cell-10-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summary</span>(k1dists)</span><div class="code-annotation-gutter-bg"></div><div class="code-annotation-gutter"></div></code></pre></div>
<div class="cell-annotation">
<dl class="code-annotation-container-grid">
<dt data-target-cell="annotated-cell-10" data-target-annotation="1">1</dt>
<dd>
<span data-code-lines="2" data-code-annotation="1" data-code-cell="annotated-cell-10">Return a matrix with the indices of points belonging to the set of the k nearest neighbours of each other by using <code>knearneigh()</code> of <strong>spdep</strong>. Convert the returned knn object into a neighbours list of class nb with a list of integer vectors containing neighbour region number ids by using <code>knn2nb()</code>.</span>
</dd>
<dt data-target-cell="annotated-cell-10" data-target-annotation="2">2</dt>
<dd>
<span data-code-lines="3" data-code-annotation="2" data-code-cell="annotated-cell-10">Return the length of neighbour relationship edges by using <code>nbdists()</code> of <strong>spdep</strong>. The function returns in the units of the coordinates if the coordinates are projected, and in km if otherwise. Remove the list structure of the returned object by using <code>unlist()</code>.</span>
</dd>
</dl>
</div>
<div class="cell-output cell-output-stdout">
<pre><code>   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
  24.79   32.57   38.01   39.07   44.52   61.79 </code></pre>
</div>
</div>
<p>The summary report shows that the largest first nearest neighbour distance is 67.50 km, so using this as the upper threshold (rounded up to the next integer) gives certainty that all units will have at least one neighbour.</p>
</section>
<section id="computing-fixed-distance-weights-matrix" class="level3">
<h3 class="anchored" data-anchor-id="computing-fixed-distance-weights-matrix">Computing fixed distance weights matrix</h3>
<p>Next, compute the distance weights matrix using <code>dnearneigh()</code> as shown in the code chunk below.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb23" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb23-1">wm_d62 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dnearneigh</span>(coords, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">68</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">longlat =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>)</span>
<span id="cb23-2">wm_d62</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Neighbour list object:
Number of regions: 88 
Number of nonzero links: 416 
Percentage nonzero weights: 5.371901 
Average number of links: 4.727273 </code></pre>
</div>
</div>
<p>The summary report above shows that the average number of links is 5.14. This means that on average, each point in the <code>hunan</code> dataset has approximately 5.14 neighboring points within the specified distance range.</p>
<p>Next, either of the following two methods can be used to display the content of <code>wm_d62</code> weights matrix.</p>
<div class="tabset-margin-container"></div><div class="panel-tabset">
<ul class="nav nav-tabs"><li class="nav-item"><a class="nav-link active" id="tabset-3-1-tab" data-bs-toggle="tab" data-bs-target="#tabset-3-1" aria-controls="tabset-3-1" aria-selected="true"><code>str()</code></a></li><li class="nav-item"><a class="nav-link" id="tabset-3-2-tab" data-bs-toggle="tab" data-bs-target="#tabset-3-2" aria-controls="tabset-3-2" aria-selected="false"><code>table()</code> and <code>card()</code> of spdep</a></li></ul>
<div class="tab-content">
<div id="tabset-3-1" class="tab-pane active" aria-labelledby="tabset-3-1-tab">
<div class="cell">
<div class="sourceCode cell-code" id="cb25" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb25-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">str</span>(wm_d62)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>List of 88
 $ : int [1:7] 2 3 4 5 57 58 64
 $ : int [1:5] 1 57 58 78 85
 $ : int [1:4] 1 4 5 57
 $ : int [1:4] 1 3 5 6
 $ : int [1:6] 1 3 4 6 69 85
 $ : int [1:3] 4 5 69
 $ : int [1:3] 67 71 84
 $ : int [1:6] 9 46 47 78 80 86
 $ : int [1:7] 8 46 66 68 78 84 86
 $ : int [1:6] 16 19 22 70 72 73
 $ : int [1:3] 14 17 72
 $ : int [1:6] 13 15 60 61 63 83
 $ : int [1:5] 12 15 60 61 83
 $ : int [1:2] 11 17
 $ : int [1:3] 12 13 83
 $ : int [1:5] 10 17 22 72 83
 $ : int [1:4] 11 14 16 72
 $ : int [1:5] 20 22 23 63 77
 $ : int [1:6] 10 20 21 73 74 82
 $ : int [1:5] 18 19 21 22 82
 $ : int [1:7] 19 20 35 47 74 82 86
 $ : int [1:5] 10 16 18 20 83
 $ : int [1:5] 18 41 77 79 82
 $ : int [1:5] 25 28 31 52 54
 $ : int [1:5] 24 28 31 33 81
 $ : int [1:4] 27 33 42 81
 $ : int [1:3] 26 29 42
 $ : int [1:6] 24 25 33 49 52 54
 $ : int [1:2] 27 37
 $ : int 33
 $ : int [1:4] 24 25 36 40
 $ : int 50
 $ : int [1:5] 25 26 28 30 81
 $ : int [1:6] 36 40 41 45 56 80
 $ : int [1:7] 21 41 46 47 80 82 86
 $ : int [1:6] 31 34 40 45 56 80
 $ : int [1:4] 29 42 43 44
 $ : int [1:4] 43 44 77 79
 $ : int [1:4] 40 42 43 81
 $ : int [1:7] 31 34 36 39 43 45 79
 $ : int [1:7] 23 34 35 45 79 80 82
 $ : int [1:6] 26 27 37 39 43 81
 $ : int [1:7] 37 38 39 40 42 44 79
 $ : int [1:4] 37 38 43 79
 $ : int [1:6] 34 36 40 41 79 80
 $ : int [1:5] 8 9 35 47 86
 $ : int [1:6] 8 21 35 46 80 86
 $ : int [1:5] 50 51 52 53 55
 $ : int [1:4] 28 51 52 54
 $ : int [1:6] 32 48 51 52 54 55
 $ : int [1:5] 48 49 50 52 54
 $ : int [1:7] 24 28 48 49 50 51 54
 $ : int [1:2] 48 55
 $ : int [1:6] 24 28 49 50 51 52
 $ : int [1:4] 48 50 53 75
 $ : int [1:2] 34 36
 $ : int [1:6] 1 2 3 58 64 68
 $ : int [1:7] 1 2 57 64 66 68 78
 $ : int [1:3] 60 87 88
 $ : int [1:6] 12 13 59 61 63 87
 $ : int [1:6] 12 13 60 62 63 87
 $ : int [1:4] 61 63 77 87
 $ : int [1:6] 12 18 60 61 62 83
 $ : int [1:4] 1 57 58 76
 $ : int 76
 $ : int [1:6] 9 58 67 68 76 84
 $ : int [1:2] 7 66
 $ : int [1:6] 9 57 58 66 78 84
 $ : int [1:3] 5 6 75
 $ : int [1:3] 10 72 73
 $ : int [1:4] 7 73 74 86
 $ : int [1:5] 10 11 16 17 70
 $ : int [1:5] 10 19 70 71 74
 $ : int [1:5] 19 21 71 73 86
 $ : int [1:2] 55 69
 $ : int [1:3] 64 65 66
 $ : int [1:4] 18 23 38 62
 $ : int [1:5] 2 8 9 58 68
 $ : int [1:7] 23 38 40 41 43 44 45
 $ : int [1:7] 8 34 35 36 41 45 47
 $ : int [1:5] 25 26 33 39 42
 $ : int [1:6] 19 20 21 23 35 41
 $ : int [1:6] 12 13 15 16 22 63
 $ : int [1:4] 7 9 66 68
 $ : int [1:2] 2 5
 $ : int [1:8] 8 9 21 35 46 47 71 74
 $ : int [1:5] 59 60 61 62 88
 $ : int [1:2] 59 87
 - attr(*, "class")= chr "nb"
 - attr(*, "region.id")= chr [1:88] "1" "2" "3" "4" ...
 - attr(*, "call")= language dnearneigh(x = coords, d1 = 0, d2 = 68, longlat = TRUE)
 - attr(*, "dnn")= num [1:2] 0 68
 - attr(*, "bounds")= chr [1:2] "GE" "LE"
 - attr(*, "nbtype")= chr "distance"
 - attr(*, "sym")= logi TRUE</code></pre>
</div>
</div>
</div>
<div id="tabset-3-2" class="tab-pane" aria-labelledby="tabset-3-2-tab">
<div class="cell">
<div class="sourceCode cell-code" id="cb27" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb27-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">table</span>(hunan<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>County, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">card</span>(wm_d62))</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>               
                1 2 3 4 5 6 7 8
  Anhua         0 1 0 0 0 0 0 0
  Anren         0 0 0 0 0 1 0 0
  Anxiang       0 0 0 0 0 0 1 0
  Baojing       0 0 0 0 1 0 0 0
  Chaling       0 0 1 0 0 0 0 0
  Changning     0 0 0 0 1 0 0 0
  Changsha      0 0 0 1 0 0 0 0
  Chengbu       0 0 0 1 0 0 0 0
  Chenxi        0 0 0 0 1 0 0 0
  Cili          0 0 1 0 0 0 0 0
  Dao           0 0 0 0 1 0 0 0
  Dongan        0 0 0 1 0 0 0 0
  Dongkou       0 0 0 1 0 0 0 0
  Fenghuang     0 0 0 1 0 0 0 0
  Guidong       0 0 1 0 0 0 0 0
  Guiyang       0 0 0 0 0 1 0 0
  Guzhang       0 0 0 0 0 1 0 0
  Hanshou       0 0 0 0 1 0 0 0
  Hengdong      0 0 0 0 0 1 0 0
  Hengnan       0 0 0 0 1 0 0 0
  Hengshan      0 0 0 0 0 0 1 0
  Hengyang      0 0 0 0 0 1 0 0
  Hongjiang     0 0 0 0 1 0 0 0
  Huarong       0 0 0 1 0 0 0 0
  Huayuan       0 0 0 0 1 0 0 0
  Huitong       0 0 0 1 0 0 0 0
  Jiahe         0 0 0 0 0 1 0 0
  Jianghua      0 0 1 0 0 0 0 0
  Jiangyong     0 1 0 0 0 0 0 0
  Jingzhou      0 0 1 0 0 0 0 0
  Jinshi        0 0 0 1 0 0 0 0
  Jishou        0 0 0 0 0 0 1 0
  Lanshan       0 0 0 0 0 1 0 0
  Leiyang       0 0 0 0 1 0 0 0
  Lengshuijiang 0 0 0 0 0 1 0 0
  Li            0 0 0 1 0 0 0 0
  Lianyuan      0 0 0 0 0 0 1 0
  Liling        0 0 0 1 0 0 0 0
  Linli         0 0 0 0 0 1 0 0
  Linwu         0 0 0 0 1 0 0 0
  Linxiang      1 0 0 0 0 0 0 0
  Liuyang       0 0 1 0 0 0 0 0
  Longhui       0 0 0 0 0 0 1 0
  Longshan      0 1 0 0 0 0 0 0
  Luxi          0 0 0 0 0 1 0 0
  Mayang        0 0 0 0 0 1 0 0
  Miluo         0 0 0 0 0 1 0 0
  Nan           0 0 0 0 0 1 0 0
  Ningxiang     0 0 0 0 0 1 0 0
  Ningyuan      0 0 0 0 0 1 0 0
  Pingjiang     0 1 0 0 0 0 0 0
  Qidong        0 0 0 0 1 0 0 0
  Qiyang        0 0 0 1 0 0 0 0
  Rucheng       0 1 0 0 0 0 0 0
  Sangzhi       0 1 0 0 0 0 0 0
  Shaodong      0 0 0 0 0 0 1 0
  Shaoshan      0 0 0 0 1 0 0 0
  Shaoyang      0 0 0 0 0 0 1 0
  Shimen        0 0 1 0 0 0 0 0
  Shuangfeng    0 0 0 0 0 0 1 0
  Shuangpai     0 0 0 1 0 0 0 0
  Suining       0 0 0 0 0 1 0 0
  Taojiang      0 0 0 0 1 0 0 0
  Taoyuan       0 1 0 0 0 0 0 0
  Tongdao       0 1 0 0 0 0 0 0
  Wangcheng     0 0 0 0 0 0 1 0
  Wugang        0 0 0 0 0 0 1 0
  Xiangtan      0 0 0 0 0 0 0 1
  Xiangxiang    0 0 0 0 0 1 0 0
  Xiangyin      0 0 0 0 0 1 0 0
  Xinhua        0 0 0 0 0 1 0 0
  Xinhuang      1 0 0 0 0 0 0 0
  Xinning       0 0 0 1 0 0 0 0
  Xinshao       0 0 0 0 0 1 0 0
  Xintian       0 0 0 0 0 1 0 0
  Xupu          0 0 0 1 0 0 0 0
  Yanling       0 0 0 0 1 0 0 0
  Yizhang       0 0 1 0 0 0 0 0
  Yongshun      0 0 0 1 0 0 0 0
  Yongxing      0 0 0 0 1 0 0 0
  You           0 0 0 0 1 0 0 0
  Yuanjiang     0 0 0 0 0 0 1 0
  Yuanling      1 0 0 0 0 0 0 0
  Yueyang       0 0 1 0 0 0 0 0
  Zhijiang      0 0 0 0 1 0 0 0
  Zhongfang     0 0 0 0 1 0 0 0
  Zhuzhou       0 0 0 0 1 0 0 0
  Zixing        0 0 0 1 0 0 0 0</code></pre>
</div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb29" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb29-1">n_comp <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">n.comp.nb</span>(wm_d62)</span>
<span id="cb29-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">table</span>(n_comp<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>comp.id)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>
 1 
88 </code></pre>
</div>
</div>
</div>
</div>
</div>
<p>The fixed distance weights matrix can then be plotted using the code chunk below.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb31" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb31-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot</span>(hunan<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>geometry, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">border=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"lightgrey"</span>)</span>
<span id="cb31-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot</span>(wm_d62, coords, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">add=</span><span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>)</span>
<span id="cb31-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot</span>(k1, coords, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">add=</span><span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"red"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">length=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.08</span>)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://geospatial2023.netlify.app/Hands_on_Exercise/Ex2/Hands_on_Ex2a_files/figure-html/unnamed-chunk-22-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>The red lines show the links of 1st nearest neighbours and the black lines show the links of neighbours within the cut-off distance of 62km. Alternatively, the red and the black lines could be plotted in two separate graphs next to each other.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb32" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb32-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">par</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">mfrow=</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>))</span>
<span id="cb32-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot</span>(hunan<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>geometry, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">border=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"lightgrey"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">main=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"1st nearest neighbours"</span>)</span>
<span id="cb32-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot</span>(k1, coords, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">add=</span><span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"red"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">length=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.08</span>)</span>
<span id="cb32-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot</span>(hunan<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>geometry, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">border=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"lightgrey"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">main=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Distance link"</span>)</span>
<span id="cb32-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot</span>(wm_d62, coords, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">add=</span><span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pch =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">19</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">cex =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.6</span>)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://geospatial2023.netlify.app/Hands_on_Exercise/Ex2/Hands_on_Ex2a_files/figure-html/unnamed-chunk-23-1.png" class="img-fluid" width="672"></p>
</div>
</div>
</section>
<section id="computing-adaptive-distance-weights-matrix" class="level3">
<h3 class="anchored" data-anchor-id="computing-adaptive-distance-weights-matrix">Computing adaptive distance weights matrix</h3>
<p>A characteristic of fixed distance weights matrix is that more densely settled areas (usually the urban areas) tend to have more neighbours and the less densely settled areas (usually the rural counties) tend to have lesser neighbours. Having many neighbours smoothes the neighbour relationship across more neighbours. It is possible to control the numbers of neighbours directly using k-nearest neighbours, either accepting asymmetric neighbours or imposing symmetry as shown in the code chunk below.</p>
<blockquote class="blockquote">
<p>As compared to just determining the cut-off distance when computing the fixed distance weights matrix, an additional argument <code>k</code> is specified for adaptive distance weights matrix.</p>
</blockquote>
<div class="cell">
<div class="sourceCode cell-code" id="cb33" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb33-1">knn6 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">knn2nb</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">knearneigh</span>(coords, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">k=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>))</span>
<span id="cb33-2">knn6</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Neighbour list object:
Number of regions: 88 
Number of nonzero links: 528 
Percentage nonzero weights: 6.818182 
Average number of links: 6 
Non-symmetric neighbours list</code></pre>
</div>
</div>
<p>Similarly, display the content of the matrix using <code>str()</code>.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb35" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb35-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">str</span>(knn6)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>List of 88
 $ : int [1:6] 2 3 4 5 57 64
 $ : int [1:6] 1 3 57 58 78 85
 $ : int [1:6] 1 2 4 5 57 85
 $ : int [1:6] 1 3 5 6 69 85
 $ : int [1:6] 1 3 4 6 69 85
 $ : int [1:6] 3 4 5 69 75 85
 $ : int [1:6] 9 66 67 71 74 84
 $ : int [1:6] 9 46 47 78 80 86
 $ : int [1:6] 8 46 66 68 84 86
 $ : int [1:6] 16 19 22 70 72 73
 $ : int [1:6] 10 14 16 17 70 72
 $ : int [1:6] 13 15 60 61 63 83
 $ : int [1:6] 12 15 60 61 63 83
 $ : int [1:6] 11 15 16 17 72 83
 $ : int [1:6] 12 13 14 17 60 83
 $ : int [1:6] 10 11 17 22 72 83
 $ : int [1:6] 10 11 14 16 72 83
 $ : int [1:6] 20 22 23 63 77 83
 $ : int [1:6] 10 20 21 73 74 82
 $ : int [1:6] 18 19 21 22 23 82
 $ : int [1:6] 19 20 35 74 82 86
 $ : int [1:6] 10 16 18 19 20 83
 $ : int [1:6] 18 20 41 77 79 82
 $ : int [1:6] 25 28 31 52 54 81
 $ : int [1:6] 24 28 31 33 54 81
 $ : int [1:6] 25 27 29 33 42 81
 $ : int [1:6] 26 29 30 37 42 81
 $ : int [1:6] 24 25 33 49 52 54
 $ : int [1:6] 26 27 37 42 43 81
 $ : int [1:6] 26 27 28 33 49 81
 $ : int [1:6] 24 25 36 39 40 54
 $ : int [1:6] 24 31 50 54 55 56
 $ : int [1:6] 25 26 28 30 49 81
 $ : int [1:6] 36 40 41 45 56 80
 $ : int [1:6] 21 41 46 47 80 82
 $ : int [1:6] 31 34 40 45 56 80
 $ : int [1:6] 26 27 29 42 43 44
 $ : int [1:6] 23 43 44 62 77 79
 $ : int [1:6] 25 40 42 43 44 81
 $ : int [1:6] 31 36 39 43 45 79
 $ : int [1:6] 23 35 45 79 80 82
 $ : int [1:6] 26 27 37 39 43 81
 $ : int [1:6] 37 39 40 42 44 79
 $ : int [1:6] 37 38 39 42 43 79
 $ : int [1:6] 34 36 40 41 79 80
 $ : int [1:6] 8 9 35 47 78 86
 $ : int [1:6] 8 21 35 46 80 86
 $ : int [1:6] 49 50 51 52 53 55
 $ : int [1:6] 28 33 48 51 52 54
 $ : int [1:6] 32 48 51 52 54 55
 $ : int [1:6] 28 48 49 50 52 54
 $ : int [1:6] 28 48 49 50 51 54
 $ : int [1:6] 48 50 51 52 55 75
 $ : int [1:6] 24 28 49 50 51 52
 $ : int [1:6] 32 48 50 52 53 75
 $ : int [1:6] 32 34 36 78 80 85
 $ : int [1:6] 1 2 3 58 64 68
 $ : int [1:6] 2 57 64 66 68 78
 $ : int [1:6] 12 13 60 61 87 88
 $ : int [1:6] 12 13 59 61 63 87
 $ : int [1:6] 12 13 60 62 63 87
 $ : int [1:6] 12 38 61 63 77 87
 $ : int [1:6] 12 18 60 61 62 83
 $ : int [1:6] 1 3 57 58 68 76
 $ : int [1:6] 58 64 66 67 68 76
 $ : int [1:6] 9 58 67 68 76 84
 $ : int [1:6] 7 65 66 68 76 84
 $ : int [1:6] 9 57 58 66 78 84
 $ : int [1:6] 4 5 6 32 75 85
 $ : int [1:6] 10 16 19 22 72 73
 $ : int [1:6] 7 19 73 74 84 86
 $ : int [1:6] 10 11 14 16 17 70
 $ : int [1:6] 10 19 21 70 71 74
 $ : int [1:6] 19 21 71 73 84 86
 $ : int [1:6] 6 32 50 53 55 69
 $ : int [1:6] 58 64 65 66 67 68
 $ : int [1:6] 18 23 38 61 62 63
 $ : int [1:6] 2 8 9 46 58 68
 $ : int [1:6] 38 40 41 43 44 45
 $ : int [1:6] 34 35 36 41 45 47
 $ : int [1:6] 25 26 28 33 39 42
 $ : int [1:6] 19 20 21 23 35 41
 $ : int [1:6] 12 13 15 16 22 63
 $ : int [1:6] 7 9 66 68 71 74
 $ : int [1:6] 2 3 4 5 56 69
 $ : int [1:6] 8 9 21 46 47 74
 $ : int [1:6] 59 60 61 62 63 88
 $ : int [1:6] 59 60 61 62 63 87
 - attr(*, "region.id")= chr [1:88] "1" "2" "3" "4" ...
 - attr(*, "call")= language knearneigh(x = coords, k = 6)
 - attr(*, "sym")= logi FALSE
 - attr(*, "type")= chr "knn"
 - attr(*, "knn-k")= num 6
 - attr(*, "class")= chr "nb"</code></pre>
</div>
</div>
<p>Based on the output above, each county has exactly six neighbours.</p>
<p>The weights matrix is then plotted using the code chunk below.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb37" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb37-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot</span>(hunan<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>geometry, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">border=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"lightgrey"</span>)</span>
<span id="cb37-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot</span>(knn6, coords, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pch =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">19</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">cex =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.6</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">add =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"red"</span>)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://geospatial2023.netlify.app/Hands_on_Exercise/Ex2/Hands_on_Ex2a_files/figure-html/unnamed-chunk-26-1.png" class="img-fluid" width="672"></p>
</div>
</div>
</section>
</section>
<section id="computing-weights-based-on-idw-inversed-distance-method" class="level2">
<h2 class="anchored" data-anchor-id="computing-weights-based-on-idw-inversed-distance-method">Computing weights based on IDW (Inversed Distance Method)</h2>
<p>First, compute the distances between areas by using <code>nbdists()</code> of <strong>spdep</strong>.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb38" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb38-1">dist <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">nbdists</span>(wm_q, coords, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">longlat =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>)</span>
<span id="cb38-2">ids <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lapply</span>(dist, <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span>(x) <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>(x))</span>
<span id="cb38-3">ids</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[[1]]
[1] 0.01535405 0.03916350 0.01820896 0.02807922 0.01145113

[[2]]
[1] 0.01535405 0.01764308 0.01925924 0.02323898 0.01719350

[[3]]
[1] 0.03916350 0.02822040 0.03695795 0.01395765

[[4]]
[1] 0.01820896 0.02822040 0.03414741 0.01539065

[[5]]
[1] 0.03695795 0.03414741 0.01524598 0.01618354

[[6]]
[1] 0.015390649 0.015245977 0.021748129 0.011883901 0.009810297

[[7]]
[1] 0.01708612 0.01473997 0.01150924 0.01872915

[[8]]
[1] 0.02022144 0.03453056 0.02529256 0.01036340 0.02284457 0.01500600 0.01515314

[[9]]
[1] 0.02022144 0.01574888 0.02109502 0.01508028 0.02902705 0.01502980

[[10]]
[1] 0.02281552 0.01387777 0.01538326 0.01346650 0.02100510 0.02631658 0.01874863
[8] 0.01500046

[[11]]
[1] 0.01882869 0.02243492 0.02247473

[[12]]
[1] 0.02779227 0.02419652 0.02333385 0.02986130 0.02335429

[[13]]
[1] 0.02779227 0.02650020 0.02670323 0.01714243

[[14]]
[1] 0.01882869 0.01233868 0.02098555

[[15]]
[1] 0.02650020 0.01233868 0.01096284 0.01562226

[[16]]
[1] 0.02281552 0.02466962 0.02765018 0.01476814 0.01671430

[[17]]
[1] 0.01387777 0.02243492 0.02098555 0.01096284 0.02466962 0.01593341 0.01437996

[[18]]
[1] 0.02039779 0.02032767 0.01481665 0.01473691 0.01459380

[[19]]
[1] 0.01538326 0.01926323 0.02668415 0.02140253 0.01613589 0.01412874

[[20]]
[1] 0.01346650 0.02039779 0.01926323 0.01723025 0.02153130 0.01469240 0.02327034

[[21]]
[1] 0.02668415 0.01723025 0.01766299 0.02644986 0.02163800

[[22]]
[1] 0.02100510 0.02765018 0.02032767 0.02153130 0.01489296

[[23]]
[1] 0.01481665 0.01469240 0.01401432 0.02246233 0.01880425 0.01530458 0.01849605

[[24]]
[1] 0.02354598 0.01837201 0.02607264 0.01220154 0.02514180

[[25]]
[1] 0.02354598 0.02188032 0.01577283 0.01949232 0.02947957

[[26]]
[1] 0.02155798 0.01745522 0.02212108 0.02220532

[[27]]
[1] 0.02155798 0.02490625 0.01562326

[[28]]
[1] 0.01837201 0.02188032 0.02229549 0.03076171 0.02039506

[[29]]
[1] 0.02490625 0.01686587 0.01395022

[[30]]
[1] 0.02090587

[[31]]
[1] 0.02607264 0.01577283 0.01219005 0.01724850 0.01229012 0.01609781 0.01139438
[8] 0.01150130

[[32]]
[1] 0.01220154 0.01219005 0.01712515 0.01340413 0.01280928 0.01198216 0.01053374
[8] 0.01065655

[[33]]
[1] 0.01949232 0.01745522 0.02229549 0.02090587 0.01979045

[[34]]
[1] 0.03113041 0.03589551 0.02882915

[[35]]
[1] 0.01766299 0.02185795 0.02616766 0.02111721 0.02108253 0.01509020

[[36]]
[1] 0.01724850 0.03113041 0.01571707 0.01860991 0.02073549 0.01680129

[[37]]
[1] 0.01686587 0.02234793 0.01510990 0.01550676

[[38]]
[1] 0.01401432 0.02407426 0.02276151 0.01719415

[[39]]
[1] 0.01229012 0.02172543 0.01711924 0.02629732 0.01896385

[[40]]
[1] 0.01609781 0.01571707 0.02172543 0.01506473 0.01987922 0.01894207

[[41]]
[1] 0.02246233 0.02185795 0.02205991 0.01912542 0.01601083 0.01742892

[[42]]
[1] 0.02212108 0.01562326 0.01395022 0.02234793 0.01711924 0.01836831 0.01683518

[[43]]
[1] 0.01510990 0.02629732 0.01506473 0.01836831 0.03112027 0.01530782

[[44]]
[1] 0.01550676 0.02407426 0.03112027 0.01486508

[[45]]
[1] 0.03589551 0.01860991 0.01987922 0.02205991 0.02107101 0.01982700

[[46]]
[1] 0.03453056 0.04033752 0.02689769

[[47]]
[1] 0.02529256 0.02616766 0.04033752 0.01949145 0.02181458

[[48]]
[1] 0.02313819 0.03370576 0.02289485 0.01630057 0.01818085

[[49]]
[1] 0.03076171 0.02138091 0.02394529 0.01990000

[[50]]
[1] 0.01712515 0.02313819 0.02551427 0.02051530 0.02187179

[[51]]
[1] 0.03370576 0.02138091 0.02873854

[[52]]
[1] 0.02289485 0.02394529 0.02551427 0.02873854 0.03516672

[[53]]
[1] 0.01630057 0.01979945 0.01253977

[[54]]
[1] 0.02514180 0.02039506 0.01340413 0.01990000 0.02051530 0.03516672

[[55]]
[1] 0.01280928 0.01818085 0.02187179 0.01979945 0.01882298

[[56]]
[1] 0.01036340 0.01139438 0.01198216 0.02073549 0.01214479 0.01362855 0.01341697

[[57]]
[1] 0.028079221 0.017643082 0.031423501 0.029114131 0.013520292 0.009903702

[[58]]
[1] 0.01925924 0.03142350 0.02722997 0.01434859 0.01567192

[[59]]
[1] 0.01696711 0.01265572 0.01667105 0.01785036

[[60]]
[1] 0.02419652 0.02670323 0.01696711 0.02343040

[[61]]
[1] 0.02333385 0.01265572 0.02343040 0.02514093 0.02790764 0.01219751 0.02362452

[[62]]
[1] 0.02514093 0.02002219 0.02110260

[[63]]
[1] 0.02986130 0.02790764 0.01407043 0.01805987

[[64]]
[1] 0.02911413 0.01689892

[[65]]
[1] 0.02471705

[[66]]
[1] 0.01574888 0.01726461 0.03068853 0.01954805 0.01810569

[[67]]
[1] 0.01708612 0.01726461 0.01349843 0.01361172

[[68]]
[1] 0.02109502 0.02722997 0.03068853 0.01406357 0.01546511

[[69]]
[1] 0.02174813 0.01645838 0.01419926

[[70]]
[1] 0.02631658 0.01963168 0.02278487

[[71]]
[1] 0.01473997 0.01838483 0.03197403

[[72]]
[1] 0.01874863 0.02247473 0.01476814 0.01593341 0.01963168

[[73]]
[1] 0.01500046 0.02140253 0.02278487 0.01838483 0.01652709

[[74]]
[1] 0.01150924 0.01613589 0.03197403 0.01652709 0.01342099 0.02864567

[[75]]
[1] 0.011883901 0.010533736 0.012539774 0.018822977 0.016458383 0.008217581

[[76]]
[1] 0.01352029 0.01434859 0.01689892 0.02471705 0.01954805 0.01349843 0.01406357

[[77]]
[1] 0.014736909 0.018804247 0.022761507 0.012197506 0.020022195 0.014070428
[7] 0.008440896

[[78]]
[1] 0.02323898 0.02284457 0.01508028 0.01214479 0.01567192 0.01546511 0.01140779

[[79]]
[1] 0.01530458 0.01719415 0.01894207 0.01912542 0.01530782 0.01486508 0.02107101

[[80]]
[1] 0.01500600 0.02882915 0.02111721 0.01680129 0.01601083 0.01982700 0.01949145
[8] 0.01362855

[[81]]
[1] 0.02947957 0.02220532 0.01150130 0.01979045 0.01896385 0.01683518

[[82]]
[1] 0.02327034 0.02644986 0.01849605 0.02108253 0.01742892

[[83]]
[1] 0.023354289 0.017142433 0.015622258 0.016714303 0.014379961 0.014593799
[7] 0.014892965 0.018059871 0.008440896

[[84]]
[1] 0.01872915 0.02902705 0.01810569 0.01361172 0.01342099 0.01297994

[[85]]
 [1] 0.011451133 0.017193502 0.013957649 0.016183544 0.009810297 0.010656545
 [7] 0.013416965 0.009903702 0.014199260 0.008217581 0.011407794

[[86]]
[1] 0.01515314 0.01502980 0.01412874 0.02163800 0.01509020 0.02689769 0.02181458
[8] 0.02864567 0.01297994

[[87]]
[1] 0.01667105 0.02362452 0.02110260 0.02058034

[[88]]
[1] 0.01785036 0.02058034</code></pre>
</div>
</div>
<section id="row-standardised-weights-matrix" class="level3">
<h3 class="anchored" data-anchor-id="row-standardised-weights-matrix">Row-standardised weights matrix</h3>
<p>Next, assign equal weights to each neighboring polygon (<code>style=“W”</code>). This is accomplished by assigning the fraction 1/(#ofneighbors) to each neighboring county then summing the weighted income values. While this is the most intuitive way to summarise the neighbors’ values, it has one drawback in that polygons along the edges of the study area will base their lagged values on fewer polygons thus potentially over- or under-estimating the true nature of the spatial autocorrelation in the data. Other more robust options are available to correct such drawbacks, notably <code>style=“B”</code>.</p>
<blockquote class="blockquote">
<p>The <code>style</code> can take values <code>“W”</code>, <code>“B”</code>, <code>“C”</code>, <code>“U”</code>, <code>“minmax”</code> and <code>“S”</code>. <code>B</code> is the basic binary coding, <code>W</code> is row standardised (sums over all links to n), <code>C</code> is globally standardised (sums over all links to n), <code>U</code> is equal to <code>C</code> divided by the number of neighbours (sums over all links to unity), while <code>S</code> is the variance-stabilizing coding scheme proposed by Tiefelsdorf et al.&nbsp;1999, p.&nbsp;167-168 (sums over all links to n).</p>
<p>The <code>zero.policy=TRUE</code> option allows for lists of non-neighbors. When set, weights vectors of zero length are inserted for regions without neighbour in the neighbours list. These will in turn generate lag values of zero, equivalent to the sum of products of the zero row t(rep(0, length=length(neighbours))) %*% x, for arbitrary numerical vector x of length length(neighbours). The spatially lagged value of x for the zero-neighbour region will then be zero, which may (or may not) be a sensible choice.</p>
<p><code>zero.policy=TRUE</code> should be used with caution since users may not be aware of missing neighbors in their dataset. Using <code>zero.policy=FALSE</code> at first instance may be more advised as it returns an error if there are empty neighbour sets.</p>
</blockquote>
<div class="cell">
<div class="sourceCode cell-code" id="cb40" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb40-1">rswm_q <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">nb2listw</span>(wm_q, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">style=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"W"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">zero.policy =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>)</span>
<span id="cb40-2">rswm_q</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Characteristics of weights list object:
Neighbour list object:
Number of regions: 88 
Number of nonzero links: 448 
Percentage nonzero weights: 5.785124 
Average number of links: 5.090909 

Weights style: W 
Weights constants summary:
   n   nn S0       S1       S2
W 88 7744 88 37.86334 365.9147</code></pre>
</div>
</div>
<p>To see the weights of the first polygon’s eight neighbors type, use the following code chunk:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb42" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb42-1">rswm_q<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>weights[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>]</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[[1]]
[1] 0.125 0.125 0.125 0.125 0.125 0.125 0.125 0.125</code></pre>
</div>
</div>
<p>Each neighbor is assigned a 0.125 of the total weights. This means that when R computes the average neighboring income values, each neighbor’s income will be multiplied by 0.125 before being tallied. A row standardised distance weights matrix can be derived using the same method in the code chunk below.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb44" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb44-1">rswm_ids <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">nb2listw</span>(wm_q, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">glist=</span>ids, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">style=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"B"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">zero.policy=</span><span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>)</span>
<span id="cb44-2">rswm_ids</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Characteristics of weights list object:
Neighbour list object:
Number of regions: 88 
Number of nonzero links: 448 
Percentage nonzero weights: 5.785124 
Average number of links: 5.090909 

Weights style: B 
Weights constants summary:
   n   nn       S0        S1     S2
B 88 7744 8.786867 0.3776535 3.8137</code></pre>
</div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb46" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb46-1">rswm_ids<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>weights[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[[1]]
[1] 0.01535405 0.03916350 0.01820896 0.02807922 0.01145113</code></pre>
</div>
</div>
</section>
</section>
<section id="application-of-spatial-weights-matrix" class="level2">
<h2 class="anchored" data-anchor-id="application-of-spatial-weights-matrix">Application of Spatial Weights Matrix</h2>
<p>This section will focus on the creation of four different spatial lagged variables:</p>
<ul>
<li>spatial lag with row-standardized weights,</li>
<li>spatial lag as a sum of neighbouring values,</li>
<li>spatial window average, and</li>
<li>spatial window sum.</li>
</ul>
<section id="spatial-lag-with-row-standardized-weights" class="level3">
<h3 class="anchored" data-anchor-id="spatial-lag-with-row-standardized-weights">Spatial lag with row-standardized weights</h3>
<p>Compute the <strong>average neighbor GDPPC value</strong> for each polygon, which is also often referred to as spatially lagged values.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb48" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb48-1">GDPPC.lag <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lag.listw</span>(rswm_q, hunan<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>GDPPC)</span>
<span id="cb48-2">GDPPC.lag</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code> [1] 24847.20 22724.80 24143.25 27737.50 27270.25 21248.80 43747.00 33582.71
 [9] 45651.17 32027.62 32671.00 20810.00 25711.50 30672.33 33457.75 31689.20
[17] 20269.00 23901.60 25126.17 21903.43 22718.60 25918.80 20307.00 20023.80
[25] 16576.80 18667.00 14394.67 19848.80 15516.33 20518.00 17572.00 15200.12
[33] 18413.80 14419.33 24094.50 22019.83 12923.50 14756.00 13869.80 12296.67
[41] 15775.17 14382.86 11566.33 13199.50 23412.00 39541.00 36186.60 16559.60
[49] 20772.50 19471.20 19827.33 15466.80 12925.67 18577.17 14943.00 24913.00
[57] 25093.00 24428.80 17003.00 21143.75 20435.00 17131.33 24569.75 23835.50
[65] 26360.00 47383.40 55157.75 37058.00 21546.67 23348.67 42323.67 28938.60
[73] 25880.80 47345.67 18711.33 29087.29 20748.29 35933.71 15439.71 29787.50
[81] 18145.00 21617.00 29203.89 41363.67 22259.09 44939.56 16902.00 16930.00</code></pre>
</div>
</div>
<blockquote class="blockquote">
<p>This computation can be verified by comparing to the results ran in the previous section. Running the code chunk <code>hunan$GDPPC[wm_q[[1]]]</code> gave the GDPPC of the five neighbouring counties for <code>Polygon ID=1</code> gave the output of: <code>[1] 20981 34592 24473 21311 22879</code> The average of these five neighbouring counties is <code>24847.20</code> which corresponds to the first output to the above code chunk.</p>
</blockquote>
<p>Append the spatially lagged GDPPC values to <code>hunan</code> sf data frame by using the code chunk below:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb50" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb50-1">lag.list <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(hunan<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>NAME_3, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lag.listw</span>(rswm_q, hunan<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>GDPPC))</span>
<span id="cb50-2">lag.res <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.data.frame</span>(lag.list)</span>
<span id="cb50-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">colnames</span>(lag.res) <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"NAME_3"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"lag GDPPC"</span>)</span>
<span id="cb50-4">hunan <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">left_join</span>(hunan,lag.res)</span></code></pre></div>
</div>
<p>The following table shows the average neighboring income values in the column <code>lag GDPPC</code> for each county.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb51" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb51-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">head</span>(hunan)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Simple feature collection with 6 features and 7 fields
Geometry type: POLYGON
Dimension:     XY
Bounding box:  xmin: 110.4922 ymin: 28.61762 xmax: 112.3013 ymax: 30.12812
Geodetic CRS:  WGS 84
   NAME_2  ID_3  NAME_3   ENGTYPE_3  County GDPPC lag GDPPC
1 Changde 21098 Anxiang      County Anxiang 23667  24847.20
2 Changde 21100 Hanshou      County Hanshou 20981  22724.80
3 Changde 21101  Jinshi County City  Jinshi 34592  24143.25
4 Changde 21102      Li      County      Li 24473  27737.50
5 Changde 21103   Linli      County   Linli 25554  27270.25
6 Changde 21104  Shimen      County  Shimen 27137  21248.80
                        geometry
1 POLYGON ((112.0625 29.75523...
2 POLYGON ((112.2288 29.11684...
3 POLYGON ((111.8927 29.6013,...
4 POLYGON ((111.3731 29.94649...
5 POLYGON ((111.6324 29.76288...
6 POLYGON ((110.8825 30.11675...</code></pre>
</div>
</div>
<p>Next, plot both the GDPPC and Spatial Lag GDPPC for comparison using the code chunk below.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb53" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb53-1">gdppc <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">qtm</span>(hunan, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"GDPPC"</span>)</span>
<span id="cb53-2">lag_gdppc <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">qtm</span>(hunan, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"lag GDPPC"</span>)</span>
<span id="cb53-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tmap_arrange</span>(gdppc, lag_gdppc, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">asp=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ncol=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://geospatial2023.netlify.app/Hands_on_Exercise/Ex2/Hands_on_Ex2a_files/figure-html/unnamed-chunk-35-1.png" class="img-fluid" width="672"></p>
</div>
</div>
</section>
<section id="spatial-lag-as-a-sum-of-neighboring-values" class="level3">
<h3 class="anchored" data-anchor-id="spatial-lag-as-a-sum-of-neighboring-values">Spatial lag as a sum of neighboring values</h3>
<p>Another way to compute spatial lag is as a sum of neighboring values by assigning binary weights: from the neighbors list, apply a function that will assign binary weights, then use the <code>glist</code> argument in the <code>nb2listw()</code> function to explicitly assign these weights.</p>
<p>Start by applying a function (<code>lapply()</code>) that will assign a value of 1 per each neighbor as shown in the code chunk below.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb54" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb54-1">b_weights <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lapply</span>(wm_q, <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span>(x) <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>x <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb54-2">b_weights2 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">nb2listw</span>(wm_q, </span>
<span id="cb54-3">                       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">glist =</span> b_weights, </span>
<span id="cb54-4">                       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">style =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"B"</span>)</span>
<span id="cb54-5">b_weights2</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Characteristics of weights list object:
Neighbour list object:
Number of regions: 88 
Number of nonzero links: 448 
Percentage nonzero weights: 5.785124 
Average number of links: 5.090909 

Weights style: B 
Weights constants summary:
   n   nn  S0  S1    S2
B 88 7744 448 896 10224</code></pre>
</div>
</div>
<p>With the proper weights assigned, use <code>lag.listw()</code> to compute a lag variable from the weights and GDPPC.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb56" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb56-1">lag_sum <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(hunan<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>NAME_3, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lag.listw</span>(b_weights2, hunan<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>GDPPC))</span>
<span id="cb56-2">lag.res <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.data.frame</span>(lag_sum)</span>
<span id="cb56-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">colnames</span>(lag.res) <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"NAME_3"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"lag_sum GDPPC"</span>)</span></code></pre></div>
</div>
<p>Next, examine the results using the code chunk below.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb57" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb57-1">lag_sum</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[[1]]
 [1] "Anxiang"       "Hanshou"       "Jinshi"        "Li"           
 [5] "Linli"         "Shimen"        "Liuyang"       "Ningxiang"    
 [9] "Wangcheng"     "Anren"         "Guidong"       "Jiahe"        
[13] "Linwu"         "Rucheng"       "Yizhang"       "Yongxing"     
[17] "Zixing"        "Changning"     "Hengdong"      "Hengnan"      
[21] "Hengshan"      "Leiyang"       "Qidong"        "Chenxi"       
[25] "Zhongfang"     "Huitong"       "Jingzhou"      "Mayang"       
[29] "Tongdao"       "Xinhuang"      "Xupu"          "Yuanling"     
[33] "Zhijiang"      "Lengshuijiang" "Shuangfeng"    "Xinhua"       
[37] "Chengbu"       "Dongan"        "Dongkou"       "Longhui"      
[41] "Shaodong"      "Suining"       "Wugang"        "Xinning"      
[45] "Xinshao"       "Shaoshan"      "Xiangxiang"    "Baojing"      
[49] "Fenghuang"     "Guzhang"       "Huayuan"       "Jishou"       
[53] "Longshan"      "Luxi"          "Yongshun"      "Anhua"        
[57] "Nan"           "Yuanjiang"     "Jianghua"      "Lanshan"      
[61] "Ningyuan"      "Shuangpai"     "Xintian"       "Huarong"      
[65] "Linxiang"      "Miluo"         "Pingjiang"     "Xiangyin"     
[69] "Cili"          "Chaling"       "Liling"        "Yanling"      
[73] "You"           "Zhuzhou"       "Sangzhi"       "Yueyang"      
[77] "Qiyang"        "Taojiang"      "Shaoyang"      "Lianyuan"     
[81] "Hongjiang"     "Hengyang"      "Guiyang"       "Changsha"     
[85] "Taoyuan"       "Xiangtan"      "Dao"           "Jiangyong"    

[[2]]
 [1] 124236 113624  96573 110950 109081 106244 174988 235079 273907 256221
[11]  98013 104050 102846  92017 133831 158446 141883 119508 150757 153324
[21] 113593 129594 142149 100119  82884  74668  43184  99244  46549  20518
[31] 140576 121601  92069  43258 144567 132119  51694  59024  69349  73780
[41]  94651 100680  69398  52798 140472 118623 180933  82798  83090  97356
[51]  59482  77334  38777 111463  74715 174391 150558 122144  68012  84575
[61] 143045  51394  98279  47671  26360 236917 220631 185290  64640  70046
[71] 126971 144693 129404 284074 112268 203611 145238 251536 108078 238300
[81] 108870 108085 262835 248182 244850 404456  67608  33860</code></pre>
</div>
</div>
<blockquote class="blockquote">
<p>Again, comparing this computation to the GDPPC of the five neighbouring counties for <code>Polygon ID=1</code>: <code>[1] 20981 34592 24473 21311 22879</code> The sum of these five neighbouring counties is <code>124236</code> which corresponds to the first output to the above code chunk.</p>
</blockquote>
<p>Append the <code>lag_sum GDPPC</code> field into <code>hunan</code> sf data frame by using the code chunk below.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb59" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb59-1">hunan <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">left_join</span>(hunan, lag.res)</span></code></pre></div>
</div>
<p>Now, plot both the GDPPC and Spatial Lag Sum GDPPC for comparison using the code chunk below.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb60" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb60-1">gdppc <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">qtm</span>(hunan, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"GDPPC"</span>)</span>
<span id="cb60-2">lag_sum_gdppc <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">qtm</span>(hunan, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"lag_sum GDPPC"</span>)</span>
<span id="cb60-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tmap_arrange</span>(gdppc, lag_sum_gdppc, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">asp=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ncol=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://geospatial2023.netlify.app/Hands_on_Exercise/Ex2/Hands_on_Ex2a_files/figure-html/unnamed-chunk-40-1.png" class="img-fluid" width="672"></p>
</div>
</div>
</section>
<section id="spatial-window-average" class="level3">
<h3 class="anchored" data-anchor-id="spatial-window-average">Spatial window average</h3>
<p>The spatial window average uses row-standardized weights and includes the diagonal element. To do this in R, add the diagonal element before assigning weights in the neighbors structure. The function <code>include.self(</code>) from <strong>spdep</strong> can be used to add the diagonal element to the neighbour list.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb61" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb61-1">wm_qs <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">include.self</span>(wm_q)</span>
<span id="cb61-2">wm_qs</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Neighbour list object:
Number of regions: 88 
Number of nonzero links: 536 
Percentage nonzero weights: 6.921488 
Average number of links: 6.090909 </code></pre>
</div>
</div>
<p>Notice that the Number of nonzero links, Percentage nonzero weights and Average number of links are 536, 6.921488 and 6.090909 respectively as compared to wm_q of 448, 5.785124 and 5.090909.</p>
<p>The neighbour list of <code>area[1]</code> can be accessed using the code chunk below.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb63" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb63-1">wm_qs[[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]]</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1]  1  2  3  4 57 85</code></pre>
</div>
</div>
<p>Now <code>[1]</code> has six neighbours instead of five. Next, obtain weights with <code>nb2listw()</code> as shown in the code chunk below.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb65" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb65-1">wm_qs <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">nb2listw</span>(wm_qs)</span>
<span id="cb65-2">wm_qs</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Characteristics of weights list object:
Neighbour list object:
Number of regions: 88 
Number of nonzero links: 536 
Percentage nonzero weights: 6.921488 
Average number of links: 6.090909 

Weights style: W 
Weights constants summary:
   n   nn S0       S1       S2
W 88 7744 88 30.90265 357.5308</code></pre>
</div>
</div>
<p>Again, use nb2listw() and glist() to explicitly assign weights values. Lastly, create the lag variable from the weights structure and <code>GDPPC</code> variable.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb67" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb67-1">lag_w_avg_gpdpc <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lag.listw</span>(wm_qs, hunan<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>GDPPC)</span>
<span id="cb67-2">lag_w_avg_gpdpc</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code> [1] 24650.50 22434.17 26233.00 27084.60 26927.00 22230.17 47621.20 37160.12
 [9] 49224.71 29886.89 26627.50 22690.17 25366.40 25825.75 30329.00 32682.83
[17] 25948.62 23987.67 25463.14 21904.38 23127.50 25949.83 20018.75 19524.17
[25] 18955.00 17800.40 15883.00 18831.33 14832.50 17965.00 17159.89 16199.44
[33] 18764.50 26878.75 23188.86 20788.14 12365.20 15985.00 13764.83 11907.43
[41] 17128.14 14593.62 11644.29 12706.00 21712.29 43548.25 35049.00 16226.83
[49] 19294.40 18156.00 19954.75 18145.17 12132.75 18419.29 14050.83 23619.75
[57] 24552.71 24733.67 16762.60 20932.60 19467.75 18334.00 22541.00 26028.00
[65] 29128.50 46569.00 47576.60 36545.50 20838.50 22531.00 42115.50 27619.00
[73] 27611.33 44523.29 18127.43 28746.38 20734.50 33880.62 14716.38 28516.22
[81] 18086.14 21244.50 29568.80 48119.71 22310.75 43151.60 17133.40 17009.33</code></pre>
</div>
</div>
<p>Convert the <code>lag</code> variable <code>listw</code> object into a data frame using <code>as.data.frame()</code>. The third command line renames the field names of <code>lag_wm_q1.res</code> object into <code>NAME_3</code> and <code>lag_window_avg GDPPC</code> respectively.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb69" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb69-1">lag.list.wm_qs <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(hunan<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>NAME_3, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lag.listw</span>(wm_qs, hunan<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>GDPPC))</span>
<span id="cb69-2">lag_wm_qs.res <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.data.frame</span>(lag.list.wm_qs)</span>
<span id="cb69-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">colnames</span>(lag_wm_qs.res) <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"NAME_3"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"lag_window_avg GDPPC"</span>)</span></code></pre></div>
</div>
<p>Next, the code chunk below will be used to append <code>lag_window_avg GDPPC</code> values into <code>hunan</code> sf data frame using <code>left_join()</code> of <strong>dplyr</strong> package.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb70" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb70-1">hunan <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">left_join</span>(hunan, lag_wm_qs.res)</span></code></pre></div>
</div>
<p>To compare the values of <code>lag GDPPC</code> and the spatial window average (<code>lag_window_avg GDPPC</code>), <code>kable()</code> of <strong>Knitr</strong> package is used to prepare a table as shown in the code chunk below.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb71" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb71-1">hunan <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb71-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">select</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"County"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"lag GDPPC"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"lag_window_avg GDPPC"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb71-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">kable</span>()</span></code></pre></div>
<div class="cell-output-display">
<table class="table table-sm table-striped small">
<colgroup>
<col style="width: 18%">
<col style="width: 13%">
<col style="width: 27%">
<col style="width: 40%">
</colgroup>
<thead>
<tr class="header">
<th style="text-align: left;">County</th>
<th style="text-align: right;">lag GDPPC</th>
<th style="text-align: right;">lag_window_avg GDPPC</th>
<th style="text-align: left;">geometry</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: left;">Anxiang</td>
<td style="text-align: right;">24847.20</td>
<td style="text-align: right;">24650.50</td>
<td style="text-align: left;">POLYGON ((112.0625 29.75523…</td>
</tr>
<tr class="even">
<td style="text-align: left;">Hanshou</td>
<td style="text-align: right;">22724.80</td>
<td style="text-align: right;">22434.17</td>
<td style="text-align: left;">POLYGON ((112.2288 29.11684…</td>
</tr>
<tr class="odd">
<td style="text-align: left;">Jinshi</td>
<td style="text-align: right;">24143.25</td>
<td style="text-align: right;">26233.00</td>
<td style="text-align: left;">POLYGON ((111.8927 29.6013,…</td>
</tr>
<tr class="even">
<td style="text-align: left;">Li</td>
<td style="text-align: right;">27737.50</td>
<td style="text-align: right;">27084.60</td>
<td style="text-align: left;">POLYGON ((111.3731 29.94649…</td>
</tr>
<tr class="odd">
<td style="text-align: left;">Linli</td>
<td style="text-align: right;">27270.25</td>
<td style="text-align: right;">26927.00</td>
<td style="text-align: left;">POLYGON ((111.6324 29.76288…</td>
</tr>
<tr class="even">
<td style="text-align: left;">Shimen</td>
<td style="text-align: right;">21248.80</td>
<td style="text-align: right;">22230.17</td>
<td style="text-align: left;">POLYGON ((110.8825 30.11675…</td>
</tr>
<tr class="odd">
<td style="text-align: left;">Liuyang</td>
<td style="text-align: right;">43747.00</td>
<td style="text-align: right;">47621.20</td>
<td style="text-align: left;">POLYGON ((113.9905 28.5682,…</td>
</tr>
<tr class="even">
<td style="text-align: left;">Ningxiang</td>
<td style="text-align: right;">33582.71</td>
<td style="text-align: right;">37160.12</td>
<td style="text-align: left;">POLYGON ((112.7181 28.38299…</td>
</tr>
<tr class="odd">
<td style="text-align: left;">Wangcheng</td>
<td style="text-align: right;">45651.17</td>
<td style="text-align: right;">49224.71</td>
<td style="text-align: left;">POLYGON ((112.7914 28.52688…</td>
</tr>
<tr class="even">
<td style="text-align: left;">Anren</td>
<td style="text-align: right;">32027.62</td>
<td style="text-align: right;">29886.89</td>
<td style="text-align: left;">POLYGON ((113.1757 26.82734…</td>
</tr>
<tr class="odd">
<td style="text-align: left;">Guidong</td>
<td style="text-align: right;">32671.00</td>
<td style="text-align: right;">26627.50</td>
<td style="text-align: left;">POLYGON ((114.1799 26.20117…</td>
</tr>
<tr class="even">
<td style="text-align: left;">Jiahe</td>
<td style="text-align: right;">20810.00</td>
<td style="text-align: right;">22690.17</td>
<td style="text-align: left;">POLYGON ((112.4425 25.74358…</td>
</tr>
<tr class="odd">
<td style="text-align: left;">Linwu</td>
<td style="text-align: right;">25711.50</td>
<td style="text-align: right;">25366.40</td>
<td style="text-align: left;">POLYGON ((112.5914 25.55143…</td>
</tr>
<tr class="even">
<td style="text-align: left;">Rucheng</td>
<td style="text-align: right;">30672.33</td>
<td style="text-align: right;">25825.75</td>
<td style="text-align: left;">POLYGON ((113.6759 25.87578…</td>
</tr>
<tr class="odd">
<td style="text-align: left;">Yizhang</td>
<td style="text-align: right;">33457.75</td>
<td style="text-align: right;">30329.00</td>
<td style="text-align: left;">POLYGON ((113.2621 25.68394…</td>
</tr>
<tr class="even">
<td style="text-align: left;">Yongxing</td>
<td style="text-align: right;">31689.20</td>
<td style="text-align: right;">32682.83</td>
<td style="text-align: left;">POLYGON ((113.3169 26.41843…</td>
</tr>
<tr class="odd">
<td style="text-align: left;">Zixing</td>
<td style="text-align: right;">20269.00</td>
<td style="text-align: right;">25948.62</td>
<td style="text-align: left;">POLYGON ((113.7311 26.16259…</td>
</tr>
<tr class="even">
<td style="text-align: left;">Changning</td>
<td style="text-align: right;">23901.60</td>
<td style="text-align: right;">23987.67</td>
<td style="text-align: left;">POLYGON ((112.6144 26.60198…</td>
</tr>
<tr class="odd">
<td style="text-align: left;">Hengdong</td>
<td style="text-align: right;">25126.17</td>
<td style="text-align: right;">25463.14</td>
<td style="text-align: left;">POLYGON ((113.1056 27.21007…</td>
</tr>
<tr class="even">
<td style="text-align: left;">Hengnan</td>
<td style="text-align: right;">21903.43</td>
<td style="text-align: right;">21904.38</td>
<td style="text-align: left;">POLYGON ((112.7599 26.98149…</td>
</tr>
<tr class="odd">
<td style="text-align: left;">Hengshan</td>
<td style="text-align: right;">22718.60</td>
<td style="text-align: right;">23127.50</td>
<td style="text-align: left;">POLYGON ((112.607 27.4689, …</td>
</tr>
<tr class="even">
<td style="text-align: left;">Leiyang</td>
<td style="text-align: right;">25918.80</td>
<td style="text-align: right;">25949.83</td>
<td style="text-align: left;">POLYGON ((112.9996 26.69276…</td>
</tr>
<tr class="odd">
<td style="text-align: left;">Qidong</td>
<td style="text-align: right;">20307.00</td>
<td style="text-align: right;">20018.75</td>
<td style="text-align: left;">POLYGON ((111.7818 27.0383,…</td>
</tr>
<tr class="even">
<td style="text-align: left;">Chenxi</td>
<td style="text-align: right;">20023.80</td>
<td style="text-align: right;">19524.17</td>
<td style="text-align: left;">POLYGON ((110.2624 28.21778…</td>
</tr>
<tr class="odd">
<td style="text-align: left;">Zhongfang</td>
<td style="text-align: right;">16576.80</td>
<td style="text-align: right;">18955.00</td>
<td style="text-align: left;">POLYGON ((109.9431 27.72858…</td>
</tr>
<tr class="even">
<td style="text-align: left;">Huitong</td>
<td style="text-align: right;">18667.00</td>
<td style="text-align: right;">17800.40</td>
<td style="text-align: left;">POLYGON ((109.9419 27.10512…</td>
</tr>
<tr class="odd">
<td style="text-align: left;">Jingzhou</td>
<td style="text-align: right;">14394.67</td>
<td style="text-align: right;">15883.00</td>
<td style="text-align: left;">POLYGON ((109.8186 26.75842…</td>
</tr>
<tr class="even">
<td style="text-align: left;">Mayang</td>
<td style="text-align: right;">19848.80</td>
<td style="text-align: right;">18831.33</td>
<td style="text-align: left;">POLYGON ((109.795 27.98008,…</td>
</tr>
<tr class="odd">
<td style="text-align: left;">Tongdao</td>
<td style="text-align: right;">15516.33</td>
<td style="text-align: right;">14832.50</td>
<td style="text-align: left;">POLYGON ((109.9294 26.46561…</td>
</tr>
<tr class="even">
<td style="text-align: left;">Xinhuang</td>
<td style="text-align: right;">20518.00</td>
<td style="text-align: right;">17965.00</td>
<td style="text-align: left;">POLYGON ((109.227 27.43733,…</td>
</tr>
<tr class="odd">
<td style="text-align: left;">Xupu</td>
<td style="text-align: right;">17572.00</td>
<td style="text-align: right;">17159.89</td>
<td style="text-align: left;">POLYGON ((110.7189 28.30485…</td>
</tr>
<tr class="even">
<td style="text-align: left;">Yuanling</td>
<td style="text-align: right;">15200.12</td>
<td style="text-align: right;">16199.44</td>
<td style="text-align: left;">POLYGON ((110.9652 28.99895…</td>
</tr>
<tr class="odd">
<td style="text-align: left;">Zhijiang</td>
<td style="text-align: right;">18413.80</td>
<td style="text-align: right;">18764.50</td>
<td style="text-align: left;">POLYGON ((109.8818 27.60661…</td>
</tr>
<tr class="even">
<td style="text-align: left;">Lengshuijiang</td>
<td style="text-align: right;">14419.33</td>
<td style="text-align: right;">26878.75</td>
<td style="text-align: left;">POLYGON ((111.5307 27.81472…</td>
</tr>
<tr class="odd">
<td style="text-align: left;">Shuangfeng</td>
<td style="text-align: right;">24094.50</td>
<td style="text-align: right;">23188.86</td>
<td style="text-align: left;">POLYGON ((112.263 27.70421,…</td>
</tr>
<tr class="even">
<td style="text-align: left;">Xinhua</td>
<td style="text-align: right;">22019.83</td>
<td style="text-align: right;">20788.14</td>
<td style="text-align: left;">POLYGON ((111.3345 28.19642…</td>
</tr>
<tr class="odd">
<td style="text-align: left;">Chengbu</td>
<td style="text-align: right;">12923.50</td>
<td style="text-align: right;">12365.20</td>
<td style="text-align: left;">POLYGON ((110.4455 26.69317…</td>
</tr>
<tr class="even">
<td style="text-align: left;">Dongan</td>
<td style="text-align: right;">14756.00</td>
<td style="text-align: right;">15985.00</td>
<td style="text-align: left;">POLYGON ((111.4531 26.86812…</td>
</tr>
<tr class="odd">
<td style="text-align: left;">Dongkou</td>
<td style="text-align: right;">13869.80</td>
<td style="text-align: right;">13764.83</td>
<td style="text-align: left;">POLYGON ((110.6622 27.37305…</td>
</tr>
<tr class="even">
<td style="text-align: left;">Longhui</td>
<td style="text-align: right;">12296.67</td>
<td style="text-align: right;">11907.43</td>
<td style="text-align: left;">POLYGON ((110.985 27.65983,…</td>
</tr>
<tr class="odd">
<td style="text-align: left;">Shaodong</td>
<td style="text-align: right;">15775.17</td>
<td style="text-align: right;">17128.14</td>
<td style="text-align: left;">POLYGON ((111.9054 27.40254…</td>
</tr>
<tr class="even">
<td style="text-align: left;">Suining</td>
<td style="text-align: right;">14382.86</td>
<td style="text-align: right;">14593.62</td>
<td style="text-align: left;">POLYGON ((110.389 27.10006,…</td>
</tr>
<tr class="odd">
<td style="text-align: left;">Wugang</td>
<td style="text-align: right;">11566.33</td>
<td style="text-align: right;">11644.29</td>
<td style="text-align: left;">POLYGON ((110.9878 27.03345…</td>
</tr>
<tr class="even">
<td style="text-align: left;">Xinning</td>
<td style="text-align: right;">13199.50</td>
<td style="text-align: right;">12706.00</td>
<td style="text-align: left;">POLYGON ((111.0736 26.84627…</td>
</tr>
<tr class="odd">
<td style="text-align: left;">Xinshao</td>
<td style="text-align: right;">23412.00</td>
<td style="text-align: right;">21712.29</td>
<td style="text-align: left;">POLYGON ((111.6013 27.58275…</td>
</tr>
<tr class="even">
<td style="text-align: left;">Shaoshan</td>
<td style="text-align: right;">39541.00</td>
<td style="text-align: right;">43548.25</td>
<td style="text-align: left;">POLYGON ((112.5391 27.97742…</td>
</tr>
<tr class="odd">
<td style="text-align: left;">Xiangxiang</td>
<td style="text-align: right;">36186.60</td>
<td style="text-align: right;">35049.00</td>
<td style="text-align: left;">POLYGON ((112.4549 28.05783…</td>
</tr>
<tr class="even">
<td style="text-align: left;">Baojing</td>
<td style="text-align: right;">16559.60</td>
<td style="text-align: right;">16226.83</td>
<td style="text-align: left;">POLYGON ((109.7015 28.82844…</td>
</tr>
<tr class="odd">
<td style="text-align: left;">Fenghuang</td>
<td style="text-align: right;">20772.50</td>
<td style="text-align: right;">19294.40</td>
<td style="text-align: left;">POLYGON ((109.5239 28.19206…</td>
</tr>
<tr class="even">
<td style="text-align: left;">Guzhang</td>
<td style="text-align: right;">19471.20</td>
<td style="text-align: right;">18156.00</td>
<td style="text-align: left;">POLYGON ((109.8968 28.74034…</td>
</tr>
<tr class="odd">
<td style="text-align: left;">Huayuan</td>
<td style="text-align: right;">19827.33</td>
<td style="text-align: right;">19954.75</td>
<td style="text-align: left;">POLYGON ((109.5647 28.61712…</td>
</tr>
<tr class="even">
<td style="text-align: left;">Jishou</td>
<td style="text-align: right;">15466.80</td>
<td style="text-align: right;">18145.17</td>
<td style="text-align: left;">POLYGON ((109.8375 28.4696,…</td>
</tr>
<tr class="odd">
<td style="text-align: left;">Longshan</td>
<td style="text-align: right;">12925.67</td>
<td style="text-align: right;">12132.75</td>
<td style="text-align: left;">POLYGON ((109.6337 29.62521…</td>
</tr>
<tr class="even">
<td style="text-align: left;">Luxi</td>
<td style="text-align: right;">18577.17</td>
<td style="text-align: right;">18419.29</td>
<td style="text-align: left;">POLYGON ((110.1067 28.41835…</td>
</tr>
<tr class="odd">
<td style="text-align: left;">Yongshun</td>
<td style="text-align: right;">14943.00</td>
<td style="text-align: right;">14050.83</td>
<td style="text-align: left;">POLYGON ((110.0003 29.29499…</td>
</tr>
<tr class="even">
<td style="text-align: left;">Anhua</td>
<td style="text-align: right;">24913.00</td>
<td style="text-align: right;">23619.75</td>
<td style="text-align: left;">POLYGON ((111.6034 28.63716…</td>
</tr>
<tr class="odd">
<td style="text-align: left;">Nan</td>
<td style="text-align: right;">25093.00</td>
<td style="text-align: right;">24552.71</td>
<td style="text-align: left;">POLYGON ((112.3232 29.46074…</td>
</tr>
<tr class="even">
<td style="text-align: left;">Yuanjiang</td>
<td style="text-align: right;">24428.80</td>
<td style="text-align: right;">24733.67</td>
<td style="text-align: left;">POLYGON ((112.4391 29.1791,…</td>
</tr>
<tr class="odd">
<td style="text-align: left;">Jianghua</td>
<td style="text-align: right;">17003.00</td>
<td style="text-align: right;">16762.60</td>
<td style="text-align: left;">POLYGON ((111.6461 25.29661…</td>
</tr>
<tr class="even">
<td style="text-align: left;">Lanshan</td>
<td style="text-align: right;">21143.75</td>
<td style="text-align: right;">20932.60</td>
<td style="text-align: left;">POLYGON ((112.2286 25.61123…</td>
</tr>
<tr class="odd">
<td style="text-align: left;">Ningyuan</td>
<td style="text-align: right;">20435.00</td>
<td style="text-align: right;">19467.75</td>
<td style="text-align: left;">POLYGON ((112.0715 26.09892…</td>
</tr>
<tr class="even">
<td style="text-align: left;">Shuangpai</td>
<td style="text-align: right;">17131.33</td>
<td style="text-align: right;">18334.00</td>
<td style="text-align: left;">POLYGON ((111.8864 26.11957…</td>
</tr>
<tr class="odd">
<td style="text-align: left;">Xintian</td>
<td style="text-align: right;">24569.75</td>
<td style="text-align: right;">22541.00</td>
<td style="text-align: left;">POLYGON ((112.2578 26.0796,…</td>
</tr>
<tr class="even">
<td style="text-align: left;">Huarong</td>
<td style="text-align: right;">23835.50</td>
<td style="text-align: right;">26028.00</td>
<td style="text-align: left;">POLYGON ((112.9242 29.69134…</td>
</tr>
<tr class="odd">
<td style="text-align: left;">Linxiang</td>
<td style="text-align: right;">26360.00</td>
<td style="text-align: right;">29128.50</td>
<td style="text-align: left;">POLYGON ((113.5502 29.67418…</td>
</tr>
<tr class="even">
<td style="text-align: left;">Miluo</td>
<td style="text-align: right;">47383.40</td>
<td style="text-align: right;">46569.00</td>
<td style="text-align: left;">POLYGON ((112.9902 29.02139…</td>
</tr>
<tr class="odd">
<td style="text-align: left;">Pingjiang</td>
<td style="text-align: right;">55157.75</td>
<td style="text-align: right;">47576.60</td>
<td style="text-align: left;">POLYGON ((113.8436 29.06152…</td>
</tr>
<tr class="even">
<td style="text-align: left;">Xiangyin</td>
<td style="text-align: right;">37058.00</td>
<td style="text-align: right;">36545.50</td>
<td style="text-align: left;">POLYGON ((112.9173 28.98264…</td>
</tr>
<tr class="odd">
<td style="text-align: left;">Cili</td>
<td style="text-align: right;">21546.67</td>
<td style="text-align: right;">20838.50</td>
<td style="text-align: left;">POLYGON ((110.8822 29.69017…</td>
</tr>
<tr class="even">
<td style="text-align: left;">Chaling</td>
<td style="text-align: right;">23348.67</td>
<td style="text-align: right;">22531.00</td>
<td style="text-align: left;">POLYGON ((113.7666 27.10573…</td>
</tr>
<tr class="odd">
<td style="text-align: left;">Liling</td>
<td style="text-align: right;">42323.67</td>
<td style="text-align: right;">42115.50</td>
<td style="text-align: left;">POLYGON ((113.5673 27.94346…</td>
</tr>
<tr class="even">
<td style="text-align: left;">Yanling</td>
<td style="text-align: right;">28938.60</td>
<td style="text-align: right;">27619.00</td>
<td style="text-align: left;">POLYGON ((113.9292 26.6154,…</td>
</tr>
<tr class="odd">
<td style="text-align: left;">You</td>
<td style="text-align: right;">25880.80</td>
<td style="text-align: right;">27611.33</td>
<td style="text-align: left;">POLYGON ((113.5879 27.41324…</td>
</tr>
<tr class="even">
<td style="text-align: left;">Zhuzhou</td>
<td style="text-align: right;">47345.67</td>
<td style="text-align: right;">44523.29</td>
<td style="text-align: left;">POLYGON ((113.2493 28.02411…</td>
</tr>
<tr class="odd">
<td style="text-align: left;">Sangzhi</td>
<td style="text-align: right;">18711.33</td>
<td style="text-align: right;">18127.43</td>
<td style="text-align: left;">POLYGON ((110.556 29.40543,…</td>
</tr>
<tr class="even">
<td style="text-align: left;">Yueyang</td>
<td style="text-align: right;">29087.29</td>
<td style="text-align: right;">28746.38</td>
<td style="text-align: left;">POLYGON ((113.343 29.61064,…</td>
</tr>
<tr class="odd">
<td style="text-align: left;">Qiyang</td>
<td style="text-align: right;">20748.29</td>
<td style="text-align: right;">20734.50</td>
<td style="text-align: left;">POLYGON ((111.5563 26.81318…</td>
</tr>
<tr class="even">
<td style="text-align: left;">Taojiang</td>
<td style="text-align: right;">35933.71</td>
<td style="text-align: right;">33880.62</td>
<td style="text-align: left;">POLYGON ((112.0508 28.67265…</td>
</tr>
<tr class="odd">
<td style="text-align: left;">Shaoyang</td>
<td style="text-align: right;">15439.71</td>
<td style="text-align: right;">14716.38</td>
<td style="text-align: left;">POLYGON ((111.5013 27.30207…</td>
</tr>
<tr class="even">
<td style="text-align: left;">Lianyuan</td>
<td style="text-align: right;">29787.50</td>
<td style="text-align: right;">28516.22</td>
<td style="text-align: left;">POLYGON ((111.6789 28.02946…</td>
</tr>
<tr class="odd">
<td style="text-align: left;">Hongjiang</td>
<td style="text-align: right;">18145.00</td>
<td style="text-align: right;">18086.14</td>
<td style="text-align: left;">POLYGON ((110.1441 27.47513…</td>
</tr>
<tr class="even">
<td style="text-align: left;">Hengyang</td>
<td style="text-align: right;">21617.00</td>
<td style="text-align: right;">21244.50</td>
<td style="text-align: left;">POLYGON ((112.7144 26.98613…</td>
</tr>
<tr class="odd">
<td style="text-align: left;">Guiyang</td>
<td style="text-align: right;">29203.89</td>
<td style="text-align: right;">29568.80</td>
<td style="text-align: left;">POLYGON ((113.0811 26.04963…</td>
</tr>
<tr class="even">
<td style="text-align: left;">Changsha</td>
<td style="text-align: right;">41363.67</td>
<td style="text-align: right;">48119.71</td>
<td style="text-align: left;">POLYGON ((112.9421 28.03722…</td>
</tr>
<tr class="odd">
<td style="text-align: left;">Taoyuan</td>
<td style="text-align: right;">22259.09</td>
<td style="text-align: right;">22310.75</td>
<td style="text-align: left;">POLYGON ((112.0612 29.32855…</td>
</tr>
<tr class="even">
<td style="text-align: left;">Xiangtan</td>
<td style="text-align: right;">44939.56</td>
<td style="text-align: right;">43151.60</td>
<td style="text-align: left;">POLYGON ((113.0426 27.8942,…</td>
</tr>
<tr class="odd">
<td style="text-align: left;">Dao</td>
<td style="text-align: right;">16902.00</td>
<td style="text-align: right;">17133.40</td>
<td style="text-align: left;">POLYGON ((111.498 25.81679,…</td>
</tr>
<tr class="even">
<td style="text-align: left;">Jiangyong</td>
<td style="text-align: right;">16930.00</td>
<td style="text-align: right;">17009.33</td>
<td style="text-align: left;">POLYGON ((111.3659 25.39472…</td>
</tr>
</tbody>
</table>
</div>
</div>
<p>Lastly, <code>qtm()</code> of <strong>tmap</strong> package is used to plot the <code>lag_gdppc</code> and <code>w_ave_gdppc</code> maps next to each other for quick comparison.</p>
<blockquote class="blockquote">
<p>For a more effective comparison, use core <strong>tmap</strong> mapping functions.</p>
</blockquote>
<div class="cell">
<div class="sourceCode cell-code" id="cb72" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb72-1">w_avg_gdppc <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">qtm</span>(hunan, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"lag_window_avg GDPPC"</span>)</span>
<span id="cb72-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tmap_arrange</span>(lag_gdppc, w_avg_gdppc, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">asp=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ncol=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://geospatial2023.netlify.app/Hands_on_Exercise/Ex2/Hands_on_Ex2a_files/figure-html/unnamed-chunk-48-1.png" class="img-fluid" width="672"></p>
</div>
</div>
</section>
<section id="spatial-window-sum" class="level3">
<h3 class="anchored" data-anchor-id="spatial-window-sum">Spatial window sum</h3>
<p>The spatial window sum is the counterpart of spatial window average without using row-standardized weights. To add the diagonal element to the neighbour list, use <code>include.self()</code> from <strong>spdep</strong>.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb73" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb73-1">wm_qs <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">include.self</span>(wm_q)</span>
<span id="cb73-2">wm_qs</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Neighbour list object:
Number of regions: 88 
Number of nonzero links: 536 
Percentage nonzero weights: 6.921488 
Average number of links: 6.090909 </code></pre>
</div>
</div>
<p>Next, assign binary weights to the neighbour structure that includes the diagonal element.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb75" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb75-1">b_weights <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lapply</span>(wm_qs, <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span>(x) <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>x <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb75-2">b_weights[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[[1]]
[1] 1 1 1 1 1 1</code></pre>
</div>
</div>
<p>Now <code>[1]</code> has six neighbours instead of five. Again, use nb2listw() and glist() to explicitly assign weights values.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb77" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb77-1">b_weights2 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">nb2listw</span>(wm_qs, </span>
<span id="cb77-2">                       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">glist =</span> b_weights, </span>
<span id="cb77-3">                       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">style =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"B"</span>)</span>
<span id="cb77-4">b_weights2</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Characteristics of weights list object:
Neighbour list object:
Number of regions: 88 
Number of nonzero links: 536 
Percentage nonzero weights: 6.921488 
Average number of links: 6.090909 

Weights style: B 
Weights constants summary:
   n   nn  S0   S1    S2
B 88 7744 536 1072 14160</code></pre>
</div>
</div>
<p>With the new weights structure, compute the lag variable with <code>lag.listw()</code>.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb79" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb79-1">w_sum_gdppc <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(hunan<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>NAME_3, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lag.listw</span>(b_weights2, hunan<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>GDPPC))</span>
<span id="cb79-2">w_sum_gdppc</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[[1]]
 [1] "Anxiang"       "Hanshou"       "Jinshi"        "Li"           
 [5] "Linli"         "Shimen"        "Liuyang"       "Ningxiang"    
 [9] "Wangcheng"     "Anren"         "Guidong"       "Jiahe"        
[13] "Linwu"         "Rucheng"       "Yizhang"       "Yongxing"     
[17] "Zixing"        "Changning"     "Hengdong"      "Hengnan"      
[21] "Hengshan"      "Leiyang"       "Qidong"        "Chenxi"       
[25] "Zhongfang"     "Huitong"       "Jingzhou"      "Mayang"       
[29] "Tongdao"       "Xinhuang"      "Xupu"          "Yuanling"     
[33] "Zhijiang"      "Lengshuijiang" "Shuangfeng"    "Xinhua"       
[37] "Chengbu"       "Dongan"        "Dongkou"       "Longhui"      
[41] "Shaodong"      "Suining"       "Wugang"        "Xinning"      
[45] "Xinshao"       "Shaoshan"      "Xiangxiang"    "Baojing"      
[49] "Fenghuang"     "Guzhang"       "Huayuan"       "Jishou"       
[53] "Longshan"      "Luxi"          "Yongshun"      "Anhua"        
[57] "Nan"           "Yuanjiang"     "Jianghua"      "Lanshan"      
[61] "Ningyuan"      "Shuangpai"     "Xintian"       "Huarong"      
[65] "Linxiang"      "Miluo"         "Pingjiang"     "Xiangyin"     
[69] "Cili"          "Chaling"       "Liling"        "Yanling"      
[73] "You"           "Zhuzhou"       "Sangzhi"       "Yueyang"      
[77] "Qiyang"        "Taojiang"      "Shaoyang"      "Lianyuan"     
[81] "Hongjiang"     "Hengyang"      "Guiyang"       "Changsha"     
[85] "Taoyuan"       "Xiangtan"      "Dao"           "Jiangyong"    

[[2]]
 [1] 147903 134605 131165 135423 134635 133381 238106 297281 344573 268982
[11] 106510 136141 126832 103303 151645 196097 207589 143926 178242 175235
[21] 138765 155699 160150 117145 113730  89002  63532 112988  59330  35930
[31] 154439 145795 112587 107515 162322 145517  61826  79925  82589  83352
[41] 119897 116749  81510  63530 151986 174193 210294  97361  96472 108936
[51]  79819 108871  48531 128935  84305 188958 171869 148402  83813 104663
[61] 155742  73336 112705  78084  58257 279414 237883 219273  83354  90124
[71] 168462 165714 165668 311663 126892 229971 165876 271045 117731 256646
[81] 126603 127467 295688 336838 267729 431516  85667  51028</code></pre>
</div>
</div>
<p>Next, convert the <code>lag</code> variable <code>listw</code> object into a data frame. The second command line in the code chunk below renames the field names of <code>w_sum_gdppc.res</code> object into <code>NAME_3</code> and <code>w_sum GDPPC</code> respectively.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb81" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb81-1">w_sum_gdppc.res <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.data.frame</span>(w_sum_gdppc)</span>
<span id="cb81-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">colnames</span>(w_sum_gdppc.res) <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"NAME_3"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"w_sum GDPPC"</span>)</span></code></pre></div>
</div>
<p>Next, the code chunk below will be used to append <code>w_sum GDPPC</code> values into <code>hunan</code> sf data frame using <code>left_join()</code> of <strong>dplyr</strong>.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb82" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb82-1">hunan <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">left_join</span>(hunan, w_sum_gdppc.res)</span></code></pre></div>
</div>
<p>To compare the values of <code>lag GDPPC</code> and the spatial window sum, use <code>kable()</code> of <strong>Knitr</strong> to prepare a table.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb83" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb83-1">hunan <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb83-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">select</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"County"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"lag_sum GDPPC"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"w_sum GDPPC"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb83-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">kable</span>()</span></code></pre></div>
<div class="cell-output-display">
<table class="table table-sm table-striped small">
<colgroup>
<col style="width: 19%">
<col style="width: 19%">
<col style="width: 16%">
<col style="width: 43%">
</colgroup>
<thead>
<tr class="header">
<th style="text-align: left;">County</th>
<th style="text-align: right;">lag_sum GDPPC</th>
<th style="text-align: right;">w_sum GDPPC</th>
<th style="text-align: left;">geometry</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: left;">Anxiang</td>
<td style="text-align: right;">124236</td>
<td style="text-align: right;">147903</td>
<td style="text-align: left;">POLYGON ((112.0625 29.75523…</td>
</tr>
<tr class="even">
<td style="text-align: left;">Hanshou</td>
<td style="text-align: right;">113624</td>
<td style="text-align: right;">134605</td>
<td style="text-align: left;">POLYGON ((112.2288 29.11684…</td>
</tr>
<tr class="odd">
<td style="text-align: left;">Jinshi</td>
<td style="text-align: right;">96573</td>
<td style="text-align: right;">131165</td>
<td style="text-align: left;">POLYGON ((111.8927 29.6013,…</td>
</tr>
<tr class="even">
<td style="text-align: left;">Li</td>
<td style="text-align: right;">110950</td>
<td style="text-align: right;">135423</td>
<td style="text-align: left;">POLYGON ((111.3731 29.94649…</td>
</tr>
<tr class="odd">
<td style="text-align: left;">Linli</td>
<td style="text-align: right;">109081</td>
<td style="text-align: right;">134635</td>
<td style="text-align: left;">POLYGON ((111.6324 29.76288…</td>
</tr>
<tr class="even">
<td style="text-align: left;">Shimen</td>
<td style="text-align: right;">106244</td>
<td style="text-align: right;">133381</td>
<td style="text-align: left;">POLYGON ((110.8825 30.11675…</td>
</tr>
<tr class="odd">
<td style="text-align: left;">Liuyang</td>
<td style="text-align: right;">174988</td>
<td style="text-align: right;">238106</td>
<td style="text-align: left;">POLYGON ((113.9905 28.5682,…</td>
</tr>
<tr class="even">
<td style="text-align: left;">Ningxiang</td>
<td style="text-align: right;">235079</td>
<td style="text-align: right;">297281</td>
<td style="text-align: left;">POLYGON ((112.7181 28.38299…</td>
</tr>
<tr class="odd">
<td style="text-align: left;">Wangcheng</td>
<td style="text-align: right;">273907</td>
<td style="text-align: right;">344573</td>
<td style="text-align: left;">POLYGON ((112.7914 28.52688…</td>
</tr>
<tr class="even">
<td style="text-align: left;">Anren</td>
<td style="text-align: right;">256221</td>
<td style="text-align: right;">268982</td>
<td style="text-align: left;">POLYGON ((113.1757 26.82734…</td>
</tr>
<tr class="odd">
<td style="text-align: left;">Guidong</td>
<td style="text-align: right;">98013</td>
<td style="text-align: right;">106510</td>
<td style="text-align: left;">POLYGON ((114.1799 26.20117…</td>
</tr>
<tr class="even">
<td style="text-align: left;">Jiahe</td>
<td style="text-align: right;">104050</td>
<td style="text-align: right;">136141</td>
<td style="text-align: left;">POLYGON ((112.4425 25.74358…</td>
</tr>
<tr class="odd">
<td style="text-align: left;">Linwu</td>
<td style="text-align: right;">102846</td>
<td style="text-align: right;">126832</td>
<td style="text-align: left;">POLYGON ((112.5914 25.55143…</td>
</tr>
<tr class="even">
<td style="text-align: left;">Rucheng</td>
<td style="text-align: right;">92017</td>
<td style="text-align: right;">103303</td>
<td style="text-align: left;">POLYGON ((113.6759 25.87578…</td>
</tr>
<tr class="odd">
<td style="text-align: left;">Yizhang</td>
<td style="text-align: right;">133831</td>
<td style="text-align: right;">151645</td>
<td style="text-align: left;">POLYGON ((113.2621 25.68394…</td>
</tr>
<tr class="even">
<td style="text-align: left;">Yongxing</td>
<td style="text-align: right;">158446</td>
<td style="text-align: right;">196097</td>
<td style="text-align: left;">POLYGON ((113.3169 26.41843…</td>
</tr>
<tr class="odd">
<td style="text-align: left;">Zixing</td>
<td style="text-align: right;">141883</td>
<td style="text-align: right;">207589</td>
<td style="text-align: left;">POLYGON ((113.7311 26.16259…</td>
</tr>
<tr class="even">
<td style="text-align: left;">Changning</td>
<td style="text-align: right;">119508</td>
<td style="text-align: right;">143926</td>
<td style="text-align: left;">POLYGON ((112.6144 26.60198…</td>
</tr>
<tr class="odd">
<td style="text-align: left;">Hengdong</td>
<td style="text-align: right;">150757</td>
<td style="text-align: right;">178242</td>
<td style="text-align: left;">POLYGON ((113.1056 27.21007…</td>
</tr>
<tr class="even">
<td style="text-align: left;">Hengnan</td>
<td style="text-align: right;">153324</td>
<td style="text-align: right;">175235</td>
<td style="text-align: left;">POLYGON ((112.7599 26.98149…</td>
</tr>
<tr class="odd">
<td style="text-align: left;">Hengshan</td>
<td style="text-align: right;">113593</td>
<td style="text-align: right;">138765</td>
<td style="text-align: left;">POLYGON ((112.607 27.4689, …</td>
</tr>
<tr class="even">
<td style="text-align: left;">Leiyang</td>
<td style="text-align: right;">129594</td>
<td style="text-align: right;">155699</td>
<td style="text-align: left;">POLYGON ((112.9996 26.69276…</td>
</tr>
<tr class="odd">
<td style="text-align: left;">Qidong</td>
<td style="text-align: right;">142149</td>
<td style="text-align: right;">160150</td>
<td style="text-align: left;">POLYGON ((111.7818 27.0383,…</td>
</tr>
<tr class="even">
<td style="text-align: left;">Chenxi</td>
<td style="text-align: right;">100119</td>
<td style="text-align: right;">117145</td>
<td style="text-align: left;">POLYGON ((110.2624 28.21778…</td>
</tr>
<tr class="odd">
<td style="text-align: left;">Zhongfang</td>
<td style="text-align: right;">82884</td>
<td style="text-align: right;">113730</td>
<td style="text-align: left;">POLYGON ((109.9431 27.72858…</td>
</tr>
<tr class="even">
<td style="text-align: left;">Huitong</td>
<td style="text-align: right;">74668</td>
<td style="text-align: right;">89002</td>
<td style="text-align: left;">POLYGON ((109.9419 27.10512…</td>
</tr>
<tr class="odd">
<td style="text-align: left;">Jingzhou</td>
<td style="text-align: right;">43184</td>
<td style="text-align: right;">63532</td>
<td style="text-align: left;">POLYGON ((109.8186 26.75842…</td>
</tr>
<tr class="even">
<td style="text-align: left;">Mayang</td>
<td style="text-align: right;">99244</td>
<td style="text-align: right;">112988</td>
<td style="text-align: left;">POLYGON ((109.795 27.98008,…</td>
</tr>
<tr class="odd">
<td style="text-align: left;">Tongdao</td>
<td style="text-align: right;">46549</td>
<td style="text-align: right;">59330</td>
<td style="text-align: left;">POLYGON ((109.9294 26.46561…</td>
</tr>
<tr class="even">
<td style="text-align: left;">Xinhuang</td>
<td style="text-align: right;">20518</td>
<td style="text-align: right;">35930</td>
<td style="text-align: left;">POLYGON ((109.227 27.43733,…</td>
</tr>
<tr class="odd">
<td style="text-align: left;">Xupu</td>
<td style="text-align: right;">140576</td>
<td style="text-align: right;">154439</td>
<td style="text-align: left;">POLYGON ((110.7189 28.30485…</td>
</tr>
<tr class="even">
<td style="text-align: left;">Yuanling</td>
<td style="text-align: right;">121601</td>
<td style="text-align: right;">145795</td>
<td style="text-align: left;">POLYGON ((110.9652 28.99895…</td>
</tr>
<tr class="odd">
<td style="text-align: left;">Zhijiang</td>
<td style="text-align: right;">92069</td>
<td style="text-align: right;">112587</td>
<td style="text-align: left;">POLYGON ((109.8818 27.60661…</td>
</tr>
<tr class="even">
<td style="text-align: left;">Lengshuijiang</td>
<td style="text-align: right;">43258</td>
<td style="text-align: right;">107515</td>
<td style="text-align: left;">POLYGON ((111.5307 27.81472…</td>
</tr>
<tr class="odd">
<td style="text-align: left;">Shuangfeng</td>
<td style="text-align: right;">144567</td>
<td style="text-align: right;">162322</td>
<td style="text-align: left;">POLYGON ((112.263 27.70421,…</td>
</tr>
<tr class="even">
<td style="text-align: left;">Xinhua</td>
<td style="text-align: right;">132119</td>
<td style="text-align: right;">145517</td>
<td style="text-align: left;">POLYGON ((111.3345 28.19642…</td>
</tr>
<tr class="odd">
<td style="text-align: left;">Chengbu</td>
<td style="text-align: right;">51694</td>
<td style="text-align: right;">61826</td>
<td style="text-align: left;">POLYGON ((110.4455 26.69317…</td>
</tr>
<tr class="even">
<td style="text-align: left;">Dongan</td>
<td style="text-align: right;">59024</td>
<td style="text-align: right;">79925</td>
<td style="text-align: left;">POLYGON ((111.4531 26.86812…</td>
</tr>
<tr class="odd">
<td style="text-align: left;">Dongkou</td>
<td style="text-align: right;">69349</td>
<td style="text-align: right;">82589</td>
<td style="text-align: left;">POLYGON ((110.6622 27.37305…</td>
</tr>
<tr class="even">
<td style="text-align: left;">Longhui</td>
<td style="text-align: right;">73780</td>
<td style="text-align: right;">83352</td>
<td style="text-align: left;">POLYGON ((110.985 27.65983,…</td>
</tr>
<tr class="odd">
<td style="text-align: left;">Shaodong</td>
<td style="text-align: right;">94651</td>
<td style="text-align: right;">119897</td>
<td style="text-align: left;">POLYGON ((111.9054 27.40254…</td>
</tr>
<tr class="even">
<td style="text-align: left;">Suining</td>
<td style="text-align: right;">100680</td>
<td style="text-align: right;">116749</td>
<td style="text-align: left;">POLYGON ((110.389 27.10006,…</td>
</tr>
<tr class="odd">
<td style="text-align: left;">Wugang</td>
<td style="text-align: right;">69398</td>
<td style="text-align: right;">81510</td>
<td style="text-align: left;">POLYGON ((110.9878 27.03345…</td>
</tr>
<tr class="even">
<td style="text-align: left;">Xinning</td>
<td style="text-align: right;">52798</td>
<td style="text-align: right;">63530</td>
<td style="text-align: left;">POLYGON ((111.0736 26.84627…</td>
</tr>
<tr class="odd">
<td style="text-align: left;">Xinshao</td>
<td style="text-align: right;">140472</td>
<td style="text-align: right;">151986</td>
<td style="text-align: left;">POLYGON ((111.6013 27.58275…</td>
</tr>
<tr class="even">
<td style="text-align: left;">Shaoshan</td>
<td style="text-align: right;">118623</td>
<td style="text-align: right;">174193</td>
<td style="text-align: left;">POLYGON ((112.5391 27.97742…</td>
</tr>
<tr class="odd">
<td style="text-align: left;">Xiangxiang</td>
<td style="text-align: right;">180933</td>
<td style="text-align: right;">210294</td>
<td style="text-align: left;">POLYGON ((112.4549 28.05783…</td>
</tr>
<tr class="even">
<td style="text-align: left;">Baojing</td>
<td style="text-align: right;">82798</td>
<td style="text-align: right;">97361</td>
<td style="text-align: left;">POLYGON ((109.7015 28.82844…</td>
</tr>
<tr class="odd">
<td style="text-align: left;">Fenghuang</td>
<td style="text-align: right;">83090</td>
<td style="text-align: right;">96472</td>
<td style="text-align: left;">POLYGON ((109.5239 28.19206…</td>
</tr>
<tr class="even">
<td style="text-align: left;">Guzhang</td>
<td style="text-align: right;">97356</td>
<td style="text-align: right;">108936</td>
<td style="text-align: left;">POLYGON ((109.8968 28.74034…</td>
</tr>
<tr class="odd">
<td style="text-align: left;">Huayuan</td>
<td style="text-align: right;">59482</td>
<td style="text-align: right;">79819</td>
<td style="text-align: left;">POLYGON ((109.5647 28.61712…</td>
</tr>
<tr class="even">
<td style="text-align: left;">Jishou</td>
<td style="text-align: right;">77334</td>
<td style="text-align: right;">108871</td>
<td style="text-align: left;">POLYGON ((109.8375 28.4696,…</td>
</tr>
<tr class="odd">
<td style="text-align: left;">Longshan</td>
<td style="text-align: right;">38777</td>
<td style="text-align: right;">48531</td>
<td style="text-align: left;">POLYGON ((109.6337 29.62521…</td>
</tr>
<tr class="even">
<td style="text-align: left;">Luxi</td>
<td style="text-align: right;">111463</td>
<td style="text-align: right;">128935</td>
<td style="text-align: left;">POLYGON ((110.1067 28.41835…</td>
</tr>
<tr class="odd">
<td style="text-align: left;">Yongshun</td>
<td style="text-align: right;">74715</td>
<td style="text-align: right;">84305</td>
<td style="text-align: left;">POLYGON ((110.0003 29.29499…</td>
</tr>
<tr class="even">
<td style="text-align: left;">Anhua</td>
<td style="text-align: right;">174391</td>
<td style="text-align: right;">188958</td>
<td style="text-align: left;">POLYGON ((111.6034 28.63716…</td>
</tr>
<tr class="odd">
<td style="text-align: left;">Nan</td>
<td style="text-align: right;">150558</td>
<td style="text-align: right;">171869</td>
<td style="text-align: left;">POLYGON ((112.3232 29.46074…</td>
</tr>
<tr class="even">
<td style="text-align: left;">Yuanjiang</td>
<td style="text-align: right;">122144</td>
<td style="text-align: right;">148402</td>
<td style="text-align: left;">POLYGON ((112.4391 29.1791,…</td>
</tr>
<tr class="odd">
<td style="text-align: left;">Jianghua</td>
<td style="text-align: right;">68012</td>
<td style="text-align: right;">83813</td>
<td style="text-align: left;">POLYGON ((111.6461 25.29661…</td>
</tr>
<tr class="even">
<td style="text-align: left;">Lanshan</td>
<td style="text-align: right;">84575</td>
<td style="text-align: right;">104663</td>
<td style="text-align: left;">POLYGON ((112.2286 25.61123…</td>
</tr>
<tr class="odd">
<td style="text-align: left;">Ningyuan</td>
<td style="text-align: right;">143045</td>
<td style="text-align: right;">155742</td>
<td style="text-align: left;">POLYGON ((112.0715 26.09892…</td>
</tr>
<tr class="even">
<td style="text-align: left;">Shuangpai</td>
<td style="text-align: right;">51394</td>
<td style="text-align: right;">73336</td>
<td style="text-align: left;">POLYGON ((111.8864 26.11957…</td>
</tr>
<tr class="odd">
<td style="text-align: left;">Xintian</td>
<td style="text-align: right;">98279</td>
<td style="text-align: right;">112705</td>
<td style="text-align: left;">POLYGON ((112.2578 26.0796,…</td>
</tr>
<tr class="even">
<td style="text-align: left;">Huarong</td>
<td style="text-align: right;">47671</td>
<td style="text-align: right;">78084</td>
<td style="text-align: left;">POLYGON ((112.9242 29.69134…</td>
</tr>
<tr class="odd">
<td style="text-align: left;">Linxiang</td>
<td style="text-align: right;">26360</td>
<td style="text-align: right;">58257</td>
<td style="text-align: left;">POLYGON ((113.5502 29.67418…</td>
</tr>
<tr class="even">
<td style="text-align: left;">Miluo</td>
<td style="text-align: right;">236917</td>
<td style="text-align: right;">279414</td>
<td style="text-align: left;">POLYGON ((112.9902 29.02139…</td>
</tr>
<tr class="odd">
<td style="text-align: left;">Pingjiang</td>
<td style="text-align: right;">220631</td>
<td style="text-align: right;">237883</td>
<td style="text-align: left;">POLYGON ((113.8436 29.06152…</td>
</tr>
<tr class="even">
<td style="text-align: left;">Xiangyin</td>
<td style="text-align: right;">185290</td>
<td style="text-align: right;">219273</td>
<td style="text-align: left;">POLYGON ((112.9173 28.98264…</td>
</tr>
<tr class="odd">
<td style="text-align: left;">Cili</td>
<td style="text-align: right;">64640</td>
<td style="text-align: right;">83354</td>
<td style="text-align: left;">POLYGON ((110.8822 29.69017…</td>
</tr>
<tr class="even">
<td style="text-align: left;">Chaling</td>
<td style="text-align: right;">70046</td>
<td style="text-align: right;">90124</td>
<td style="text-align: left;">POLYGON ((113.7666 27.10573…</td>
</tr>
<tr class="odd">
<td style="text-align: left;">Liling</td>
<td style="text-align: right;">126971</td>
<td style="text-align: right;">168462</td>
<td style="text-align: left;">POLYGON ((113.5673 27.94346…</td>
</tr>
<tr class="even">
<td style="text-align: left;">Yanling</td>
<td style="text-align: right;">144693</td>
<td style="text-align: right;">165714</td>
<td style="text-align: left;">POLYGON ((113.9292 26.6154,…</td>
</tr>
<tr class="odd">
<td style="text-align: left;">You</td>
<td style="text-align: right;">129404</td>
<td style="text-align: right;">165668</td>
<td style="text-align: left;">POLYGON ((113.5879 27.41324…</td>
</tr>
<tr class="even">
<td style="text-align: left;">Zhuzhou</td>
<td style="text-align: right;">284074</td>
<td style="text-align: right;">311663</td>
<td style="text-align: left;">POLYGON ((113.2493 28.02411…</td>
</tr>
<tr class="odd">
<td style="text-align: left;">Sangzhi</td>
<td style="text-align: right;">112268</td>
<td style="text-align: right;">126892</td>
<td style="text-align: left;">POLYGON ((110.556 29.40543,…</td>
</tr>
<tr class="even">
<td style="text-align: left;">Yueyang</td>
<td style="text-align: right;">203611</td>
<td style="text-align: right;">229971</td>
<td style="text-align: left;">POLYGON ((113.343 29.61064,…</td>
</tr>
<tr class="odd">
<td style="text-align: left;">Qiyang</td>
<td style="text-align: right;">145238</td>
<td style="text-align: right;">165876</td>
<td style="text-align: left;">POLYGON ((111.5563 26.81318…</td>
</tr>
<tr class="even">
<td style="text-align: left;">Taojiang</td>
<td style="text-align: right;">251536</td>
<td style="text-align: right;">271045</td>
<td style="text-align: left;">POLYGON ((112.0508 28.67265…</td>
</tr>
<tr class="odd">
<td style="text-align: left;">Shaoyang</td>
<td style="text-align: right;">108078</td>
<td style="text-align: right;">117731</td>
<td style="text-align: left;">POLYGON ((111.5013 27.30207…</td>
</tr>
<tr class="even">
<td style="text-align: left;">Lianyuan</td>
<td style="text-align: right;">238300</td>
<td style="text-align: right;">256646</td>
<td style="text-align: left;">POLYGON ((111.6789 28.02946…</td>
</tr>
<tr class="odd">
<td style="text-align: left;">Hongjiang</td>
<td style="text-align: right;">108870</td>
<td style="text-align: right;">126603</td>
<td style="text-align: left;">POLYGON ((110.1441 27.47513…</td>
</tr>
<tr class="even">
<td style="text-align: left;">Hengyang</td>
<td style="text-align: right;">108085</td>
<td style="text-align: right;">127467</td>
<td style="text-align: left;">POLYGON ((112.7144 26.98613…</td>
</tr>
<tr class="odd">
<td style="text-align: left;">Guiyang</td>
<td style="text-align: right;">262835</td>
<td style="text-align: right;">295688</td>
<td style="text-align: left;">POLYGON ((113.0811 26.04963…</td>
</tr>
<tr class="even">
<td style="text-align: left;">Changsha</td>
<td style="text-align: right;">248182</td>
<td style="text-align: right;">336838</td>
<td style="text-align: left;">POLYGON ((112.9421 28.03722…</td>
</tr>
<tr class="odd">
<td style="text-align: left;">Taoyuan</td>
<td style="text-align: right;">244850</td>
<td style="text-align: right;">267729</td>
<td style="text-align: left;">POLYGON ((112.0612 29.32855…</td>
</tr>
<tr class="even">
<td style="text-align: left;">Xiangtan</td>
<td style="text-align: right;">404456</td>
<td style="text-align: right;">431516</td>
<td style="text-align: left;">POLYGON ((113.0426 27.8942,…</td>
</tr>
<tr class="odd">
<td style="text-align: left;">Dao</td>
<td style="text-align: right;">67608</td>
<td style="text-align: right;">85667</td>
<td style="text-align: left;">POLYGON ((111.498 25.81679,…</td>
</tr>
<tr class="even">
<td style="text-align: left;">Jiangyong</td>
<td style="text-align: right;">33860</td>
<td style="text-align: right;">51028</td>
<td style="text-align: left;">POLYGON ((111.3659 25.39472…</td>
</tr>
</tbody>
</table>
</div>
</div>
<p>Lastly, <code>qtm()</code> of <strong>tmap</strong> package is used to plot the <code>lag_sum GDPPC</code> and <code>w_sum_gdppc</code> maps next to each other for quick comparison.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb84" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb84-1">w_sum_gdppc <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">qtm</span>(hunan, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"w_sum GDPPC"</span>)</span>
<span id="cb84-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tmap_arrange</span>(lag_sum_gdppc, w_sum_gdppc, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">asp=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ncol=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://geospatial2023.netlify.app/Hands_on_Exercise/Ex2/Hands_on_Ex2a_files/figure-html/unnamed-chunk-56-1.png" class="img-fluid" width="672"></p>
</div>
</div>


</section>
</section>

 ]]></description>
  <guid>https://geospatial2023.netlify.app/Hands_on_Exercise/Ex2/Hands_on_Ex2a.html</guid>
  <pubDate>Fri, 17 Nov 2023 16:00:00 GMT</pubDate>
</item>
<item>
  <title>1a: Geospatial Data Wrangling with R</title>
  <dc:creator>Magdalene Chan</dc:creator>
  <link>https://geospatial2023.netlify.app/Hands_on_Exercise/Ex1/Hands_on_Ex1a.html</link>
  <description><![CDATA[ 



<section id="getting-started" class="level2">
<h2 class="anchored" data-anchor-id="getting-started">Getting started</h2>
<p>The code chunk below uses <code>p_load()</code> of <strong>pacman</strong> package to check if the required packages have been installed on the computer. If they are, the packages will be launched.</p>
<blockquote class="blockquote">
<p><strong>sf</strong> package is used for importing, managing, and processing geospatial data.</p>
</blockquote>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1">pacman<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">p_load</span>(sf, tidyverse)</span></code></pre></div>
</div>
<p>The data sets used are:</p>
<ul>
<li>Master Plan 2014 Subzone Boundary (Web) (last updated Dec 2014) from <a href="https://beta.data.gov.sg/collections/1708/view">data.gov.sg</a> retrieved on 17 Nov 2023</li>
<li>Pre-Schools Location (last updated Jul 2023) from <a href="https://beta.data.gov.sg/collections/2064/view">data.gov.sg</a> retrieved on 17 Nov 2023</li>
<li>Cycling Path (last updated Jul 2023) from <a href="https://datamall.lta.gov.sg/content/datamall/en/search_datasets.html?searchText=Cycling%20Path">LTADataMall</a> retrieved on 17 Nov 2023</li>
<li>Singapore listing data (last updated Sep 2023) from <a href="http://insideairbnb.com/get-the-data/">Inside Airbnb</a> retrieved on 17 Nov 2023</li>
</ul>
</section>
<section id="importing-data" class="level2">
<h2 class="anchored" data-anchor-id="importing-data">Importing Data</h2>
<section id="import-polygon-feature-data-in-shapefile-format" class="level3">
<h3 class="anchored" data-anchor-id="import-polygon-feature-data-in-shapefile-format">Import Polygon Feature Data in shapefile format</h3>
<p>The code chunk below uses <code>st_read()</code> function of <strong>sf</strong> package to import <code>MP14_SUBZONE_WEB_PL</code> shapefile into R as a <strong>polygon feature data</strong> frame.</p>
<blockquote class="blockquote">
<p>When the input geospatial data is in shapefile format, two arguments are used: (1) <code>dsn</code> to define the data path and (2) <code>layer</code> to provide the shapefile name. File extensions (.shp, .dbf, .prj, .shx) need not be specified.</p>
</blockquote>
<div class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1">mpsz <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">st_read</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">dsn =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"data/geospatial"</span>, </span>
<span id="cb2-2">                  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">layer =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"MP14_SUBZONE_WEB_PL"</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Reading layer `MP14_SUBZONE_WEB_PL' from data source 
  `C:\magdalenecjw\ISSS624 Geospatial\Hands_on_Exercise\Ex1\data\geospatial' 
  using driver `ESRI Shapefile'
Simple feature collection with 323 features and 15 fields
Geometry type: MULTIPOLYGON
Dimension:     XY
Bounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33
Projected CRS: SVY21</code></pre>
</div>
</div>
<p>There are a total of 323 multipolygon features and 15 fields in <code>mpsz</code> simple feature data frame. <code>mpsz</code> is in <strong>svy21</strong> projected coordinate system.</p>
<blockquote class="blockquote">
<p><strong>svy21</strong> (or <strong>Singapore SVY21 Projected Coordinate System</strong>) is a projected coordinate system used by Singapore that is based on the Transverse Mercator projection from geographical coordinates referenced to the WGS 84 ellipsoid.</p>
</blockquote>
<blockquote class="blockquote">
<p>The bounding box provides the x extend and y extend of the data.</p>
</blockquote>
</section>
<section id="import-polyline-feature-data-in-shapefile-format" class="level3">
<h3 class="anchored" data-anchor-id="import-polyline-feature-data-in-shapefile-format">Import Polyline feature data in shapefile format</h3>
<p>The code chunk below uses <code>st_read()</code> function of <strong>sf</strong> package to import <code>CyclingPath</code> shapefile into R as <strong>line feature data</strong> frame.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1">cyclingpath <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">st_read</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">dsn =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"data/geospatial"</span>, </span>
<span id="cb4-2">                         <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">layer =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"CyclingPathGazette"</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Reading layer `CyclingPathGazette' from data source 
  `C:\magdalenecjw\ISSS624 Geospatial\Hands_on_Exercise\Ex1\data\geospatial' 
  using driver `ESRI Shapefile'
Simple feature collection with 2558 features and 2 fields
Geometry type: MULTILINESTRING
Dimension:     XY
Bounding box:  xmin: 11854.32 ymin: 28347.98 xmax: 42626.09 ymax: 48948.15
Projected CRS: SVY21</code></pre>
</div>
</div>
<p>There are a total of 2558 features and 2 fields in <code>cyclingpath</code> linestring feature data frame. <code>cyclingpath</code> is also in <strong>svy21</strong> projected coordinate system.</p>
</section>
<section id="import-gis-data-in-kml-format" class="level3">
<h3 class="anchored" data-anchor-id="import-gis-data-in-kml-format">Import GIS data in kml format</h3>
<p>The code chunk below uses <code>st_read()</code> function of <strong>sf</strong> package to import <code>PreSchoolsLocation</code> into R.</p>
<blockquote class="blockquote">
<p>In kml format, the complete path and the kml file extension must be provided.</p>
</blockquote>
<div class="cell">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb6-1">preschool <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">st_read</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"data/geospatial/PreSchoolsLocation.kml"</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Reading layer `PRESCHOOLS_LOCATION' from data source 
  `C:\magdalenecjw\ISSS624 Geospatial\Hands_on_Exercise\Ex1\data\geospatial\PreSchoolsLocation.kml' 
  using driver `KML'
Simple feature collection with 2290 features and 2 fields
Geometry type: POINT
Dimension:     XYZ
Bounding box:  xmin: 103.6878 ymin: 1.247759 xmax: 103.9897 ymax: 1.462134
z_range:       zmin: 0 zmax: 0
Geodetic CRS:  WGS 84</code></pre>
</div>
</div>
<p>There are a total of 2290 features and 2 fields in <code>preschool</code> point feature data frame. Unlike the above two simple feature data frames, <code>preschool</code> is in <strong>wgs84</strong> geographic coordinate system.</p>
<blockquote class="blockquote">
<p><strong>wgs84</strong> is the current version of the World Geodetic System (WGS), which is a standard used in cartography, geodesy, and satellite navigation including GPS. It is a geographic coordinate system, which defines locations on the earth using a three-dimensional spherical surface.</p>
</blockquote>
</section>
</section>
<section id="checking-data-content-of-simple-feature-data-frame" class="level2">
<h2 class="anchored" data-anchor-id="checking-data-content-of-simple-feature-data-frame">Checking data content of Simple Feature Data Frame</h2>
<p>The column in the <strong>sf</strong> data frame that contains the geometries is a list, of class <strong>sfc</strong>. There are two ways to check the data contents:</p>
<ul>
<li>Retrieve the geometry list-column in this case by <code>mpsz$geom</code> or <code>mpsz[[1]]</code>.</li>
<li>Use <code>st_geometry()</code> to display basic information of the feature class such as geometry type, geographic extent of the features and the coordinate system of the data.</li>
</ul>
<div class="cell">
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb8-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">st_geometry</span>(mpsz)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Geometry set for 323 features 
Geometry type: MULTIPOLYGON
Dimension:     XY
Bounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33
Projected CRS: SVY21
First 5 geometries:</code></pre>
</div>
</div>
<p><code>glimpse()</code> of the <strong>dplyr</strong> package reveals associated attribute information such as data type of each fields.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb10-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">glimpse</span>(mpsz)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Rows: 323
Columns: 16
$ OBJECTID   &lt;int&gt; 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, …
$ SUBZONE_NO &lt;int&gt; 1, 1, 3, 8, 3, 7, 9, 2, 13, 7, 12, 6, 1, 5, 1, 1, 3, 2, 2, …
$ SUBZONE_N  &lt;chr&gt; "MARINA SOUTH", "PEARL'S HILL", "BOAT QUAY", "HENDERSON HIL…
$ SUBZONE_C  &lt;chr&gt; "MSSZ01", "OTSZ01", "SRSZ03", "BMSZ08", "BMSZ03", "BMSZ07",…
$ CA_IND     &lt;chr&gt; "Y", "Y", "Y", "N", "N", "N", "N", "Y", "N", "N", "N", "N",…
$ PLN_AREA_N &lt;chr&gt; "MARINA SOUTH", "OUTRAM", "SINGAPORE RIVER", "BUKIT MERAH",…
$ PLN_AREA_C &lt;chr&gt; "MS", "OT", "SR", "BM", "BM", "BM", "BM", "SR", "QT", "QT",…
$ REGION_N   &lt;chr&gt; "CENTRAL REGION", "CENTRAL REGION", "CENTRAL REGION", "CENT…
$ REGION_C   &lt;chr&gt; "CR", "CR", "CR", "CR", "CR", "CR", "CR", "CR", "CR", "CR",…
$ INC_CRC    &lt;chr&gt; "5ED7EB253F99252E", "8C7149B9EB32EEFC", "C35FEFF02B13E0E5",…
$ FMEL_UPD_D &lt;date&gt; 2014-12-05, 2014-12-05, 2014-12-05, 2014-12-05, 2014-12-05…
$ X_ADDR     &lt;dbl&gt; 31595.84, 28679.06, 29654.96, 26782.83, 26201.96, 25358.82,…
$ Y_ADDR     &lt;dbl&gt; 29220.19, 29782.05, 29974.66, 29933.77, 30005.70, 29991.38,…
$ SHAPE_Leng &lt;dbl&gt; 5267.381, 3506.107, 1740.926, 3313.625, 2825.594, 4428.913,…
$ SHAPE_Area &lt;dbl&gt; 1630379.27, 559816.25, 160807.50, 595428.89, 387429.44, 103…
$ geometry   &lt;MULTIPOLYGON [m]&gt; MULTIPOLYGON (((31495.56 30..., MULTIPOLYGON (…</code></pre>
</div>
</div>
<p><code>head()</code> in <strong>Base R</strong> provides complete information of a feature object.</p>
<blockquote class="blockquote">
<p>To change the number of observations, set argument <code>n</code> to a desired reasonable number.</p>
</blockquote>
<div class="cell">
<div class="sourceCode cell-code" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb12-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">head</span>(mpsz, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Simple feature collection with 5 features and 15 fields
Geometry type: MULTIPOLYGON
Dimension:     XY
Bounding box:  xmin: 25867.68 ymin: 28369.47 xmax: 32362.39 ymax: 30435.54
Projected CRS: SVY21
  OBJECTID SUBZONE_NO      SUBZONE_N SUBZONE_C CA_IND      PLN_AREA_N
1        1          1   MARINA SOUTH    MSSZ01      Y    MARINA SOUTH
2        2          1   PEARL'S HILL    OTSZ01      Y          OUTRAM
3        3          3      BOAT QUAY    SRSZ03      Y SINGAPORE RIVER
4        4          8 HENDERSON HILL    BMSZ08      N     BUKIT MERAH
5        5          3        REDHILL    BMSZ03      N     BUKIT MERAH
  PLN_AREA_C       REGION_N REGION_C          INC_CRC FMEL_UPD_D   X_ADDR
1         MS CENTRAL REGION       CR 5ED7EB253F99252E 2014-12-05 31595.84
2         OT CENTRAL REGION       CR 8C7149B9EB32EEFC 2014-12-05 28679.06
3         SR CENTRAL REGION       CR C35FEFF02B13E0E5 2014-12-05 29654.96
4         BM CENTRAL REGION       CR 3775D82C5DDBEFBD 2014-12-05 26782.83
5         BM CENTRAL REGION       CR 85D9ABEF0A40678F 2014-12-05 26201.96
    Y_ADDR SHAPE_Leng SHAPE_Area                       geometry
1 29220.19   5267.381  1630379.3 MULTIPOLYGON (((31495.56 30...
2 29782.05   3506.107   559816.2 MULTIPOLYGON (((29092.28 30...
3 29974.66   1740.926   160807.5 MULTIPOLYGON (((29932.33 29...
4 29933.77   3313.625   595428.9 MULTIPOLYGON (((27131.28 30...
5 30005.70   2825.594   387429.4 MULTIPOLYGON (((26451.03 30...</code></pre>
</div>
</div>
</section>
<section id="plotting-geospatial-data" class="level2">
<h2 class="anchored" data-anchor-id="plotting-geospatial-data">Plotting Geospatial Data</h2>
<p>In geospatial data analytics, it is insufficient to just look at the feature information. To visualise the geospatial features, <code>plot()</code> of <strong>R Graphic</strong> can be used.</p>
<blockquote class="blockquote">
<p>The default plot of an sf object is a multi-plot. The plot below shows the first 9 out of 15 attributes. To change the number of attributes plotted, set the <code>max.plot</code> argument to a desired reasonable number.</p>
</blockquote>
<div class="cell">
<div class="sourceCode cell-code" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb14-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot</span>(mpsz)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://geospatial2023.netlify.app/Hands_on_Exercise/Ex1/Hands_on_Ex1a_files/figure-html/unnamed-chunk-8-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>To plot only the geometry, wrap <code>st_geometry()</code> around the data frame before plotting.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb15-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">st_geometry</span>(mpsz))</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://geospatial2023.netlify.app/Hands_on_Exercise/Ex1/Hands_on_Ex1a_files/figure-html/unnamed-chunk-9-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>It is also possible to plot a specific attribute of the sf object.</p>
<div class="tabset-margin-container"></div><div class="panel-tabset">
<ul class="nav nav-tabs"><li class="nav-item"><a class="nav-link active" id="tabset-1-1-tab" data-bs-toggle="tab" data-bs-target="#tabset-1-1" aria-controls="tabset-1-1" aria-selected="true">Planning Area</a></li><li class="nav-item"><a class="nav-link" id="tabset-1-2-tab" data-bs-toggle="tab" data-bs-target="#tabset-1-2" aria-controls="tabset-1-2" aria-selected="false">Planning Subzone</a></li><li class="nav-item"><a class="nav-link" id="tabset-1-3-tab" data-bs-toggle="tab" data-bs-target="#tabset-1-3" aria-controls="tabset-1-3" aria-selected="false">Region</a></li></ul>
<div class="tab-content">
<div id="tabset-1-1" class="tab-pane active" aria-labelledby="tabset-1-1-tab">
<div class="cell">
<div class="sourceCode cell-code" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb16-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot</span>(mpsz[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"PLN_AREA_N"</span>])</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://geospatial2023.netlify.app/Hands_on_Exercise/Ex1/Hands_on_Ex1a_files/figure-html/unnamed-chunk-10-1.png" class="img-fluid" width="672"></p>
</div>
</div>
</div>
<div id="tabset-1-2" class="tab-pane" aria-labelledby="tabset-1-2-tab">
<div class="cell">
<div class="sourceCode cell-code" id="cb17" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb17-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot</span>(mpsz[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"SUBZONE_N"</span>])</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://geospatial2023.netlify.app/Hands_on_Exercise/Ex1/Hands_on_Ex1a_files/figure-html/unnamed-chunk-11-1.png" class="img-fluid" width="672"></p>
</div>
</div>
</div>
<div id="tabset-1-3" class="tab-pane" aria-labelledby="tabset-1-3-tab">
<div class="cell">
<div class="sourceCode cell-code" id="cb18" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb18-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot</span>(mpsz[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"REGION_N"</span>])</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://geospatial2023.netlify.app/Hands_on_Exercise/Ex1/Hands_on_Ex1a_files/figure-html/unnamed-chunk-12-1.png" class="img-fluid" width="672"></p>
</div>
</div>
</div>
</div>
</div>
<div class="callout callout-style-default callout-important callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Important
</div>
</div>
<div class="callout-body-container callout-body">
<p><code>plot()</code> provides a plot of the geospatial object for a quick look. For high cartographic quality plots, other R packages such as <strong>tmap</strong> should be used.</p>
</div>
</div>
</section>
<section id="map-projection" class="level2">
<h2 class="anchored" data-anchor-id="map-projection">Map Projection</h2>
<p>Map projection is an important property of a geospatial data. In order to perform geoprocessing using two sets of geospatial data, they must be projected using a similar coordinate system.</p>
<div class="callout callout-style-default callout-important callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Important
</div>
</div>
<div class="callout-body-container callout-body">
<dl>
<dt>Projection Transformation</dt>
<dd>
<p>The process of projecting a simple feature data frame from one coordinate system to another coordinate system.</p>
</dd>
</dl>
</div>
</div>
<section id="assigning-epsg-code-to-a-simple-feature-data-frame" class="level3">
<h3 class="anchored" data-anchor-id="assigning-epsg-code-to-a-simple-feature-data-frame">Assigning EPSG code to a simple feature data frame</h3>
<p>Common issues that could happen when importing geospatial data into R are:</p>
<ol type="1">
<li>Missing coordinate system of the source data (such as due to missing .proj for ESRI shapefile).</li>
<li>Wrongly assigned coordinate system during the importing process.</li>
</ol>
<p>To look at the coordinate system of <code>mpsz</code> simple feature data frame, use <code>st_crs()</code> of <strong>sf</strong> package.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb19" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb19-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">st_crs</span>(mpsz)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Coordinate Reference System:
  User input: SVY21 
  wkt:
PROJCRS["SVY21",
    BASEGEOGCRS["SVY21[WGS84]",
        DATUM["World Geodetic System 1984",
            ELLIPSOID["WGS 84",6378137,298.257223563,
                LENGTHUNIT["metre",1]],
            ID["EPSG",6326]],
        PRIMEM["Greenwich",0,
            ANGLEUNIT["Degree",0.0174532925199433]]],
    CONVERSION["unnamed",
        METHOD["Transverse Mercator",
            ID["EPSG",9807]],
        PARAMETER["Latitude of natural origin",1.36666666666667,
            ANGLEUNIT["Degree",0.0174532925199433],
            ID["EPSG",8801]],
        PARAMETER["Longitude of natural origin",103.833333333333,
            ANGLEUNIT["Degree",0.0174532925199433],
            ID["EPSG",8802]],
        PARAMETER["Scale factor at natural origin",1,
            SCALEUNIT["unity",1],
            ID["EPSG",8805]],
        PARAMETER["False easting",28001.642,
            LENGTHUNIT["metre",1],
            ID["EPSG",8806]],
        PARAMETER["False northing",38744.572,
            LENGTHUNIT["metre",1],
            ID["EPSG",8807]]],
    CS[Cartesian,2],
        AXIS["(E)",east,
            ORDER[1],
            LENGTHUNIT["metre",1,
                ID["EPSG",9001]]],
        AXIS["(N)",north,
            ORDER[2],
            LENGTHUNIT["metre",1,
                ID["EPSG",9001]]]]</code></pre>
</div>
</div>
<p>The EPSG indicated in the print above is 9001. However, the <code>mpsz</code> data frame is projected in <strong>svy21</strong> (correct EPSG code for <strong>svy21</strong> should be 3414). To assign the correct EPSG code to <code>mpsz</code> data frame, use <code>st_set_crs()</code> of <strong>sf</strong> package.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb21" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb21-1">mpsz3414 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">st_set_crs</span>(mpsz, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3414</span>)</span></code></pre></div>
</div>
<p>The EPSG code indicated is now 3414.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb22" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb22-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">st_crs</span>(mpsz3414)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Coordinate Reference System:
  User input: EPSG:3414 
  wkt:
PROJCRS["SVY21 / Singapore TM",
    BASEGEOGCRS["SVY21",
        DATUM["SVY21",
            ELLIPSOID["WGS 84",6378137,298.257223563,
                LENGTHUNIT["metre",1]]],
        PRIMEM["Greenwich",0,
            ANGLEUNIT["degree",0.0174532925199433]],
        ID["EPSG",4757]],
    CONVERSION["Singapore Transverse Mercator",
        METHOD["Transverse Mercator",
            ID["EPSG",9807]],
        PARAMETER["Latitude of natural origin",1.36666666666667,
            ANGLEUNIT["degree",0.0174532925199433],
            ID["EPSG",8801]],
        PARAMETER["Longitude of natural origin",103.833333333333,
            ANGLEUNIT["degree",0.0174532925199433],
            ID["EPSG",8802]],
        PARAMETER["Scale factor at natural origin",1,
            SCALEUNIT["unity",1],
            ID["EPSG",8805]],
        PARAMETER["False easting",28001.642,
            LENGTHUNIT["metre",1],
            ID["EPSG",8806]],
        PARAMETER["False northing",38744.572,
            LENGTHUNIT["metre",1],
            ID["EPSG",8807]]],
    CS[Cartesian,2],
        AXIS["northing (N)",north,
            ORDER[1],
            LENGTHUNIT["metre",1]],
        AXIS["easting (E)",east,
            ORDER[2],
            LENGTHUNIT["metre",1]],
    USAGE[
        SCOPE["Cadastre, engineering survey, topographic mapping."],
        AREA["Singapore - onshore and offshore."],
        BBOX[1.13,103.59,1.47,104.07]],
    ID["EPSG",3414]]</code></pre>
</div>
</div>
</section>
<section id="transforming-data-to-projected-coordinate-system" class="level3">
<h3 class="anchored" data-anchor-id="transforming-data-to-projected-coordinate-system">Transforming data to projected coordinate system</h3>
<p>In geospatial analytics, it is common to transform the original data from geographic coordinate system (GCS) to projected coordinate system (PCS). GCS is inappropriate if the analysis requires the use of distance or/and area measurements as 1 degree distance at the poles is relatively shorter than 1 degree at the equator. In contrast, PCS provides consistent length and area measurement across space. <code>st_transform()</code> of <strong>sf</strong> package helps to reproject data frames from one coordinate system to another coordinate system mathematically.</p>
<p>As <code>preschool</code> data frame is in <strong>wgs84</strong> coordinate system, it can be transformed into <strong>svy21</strong> projected coordinate system (<code>crs</code> = 3413).</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb24" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb24-1">preschool3414 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">st_transform</span>(preschool, </span>
<span id="cb24-2">                              <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">crs =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3414</span>)</span></code></pre></div>
</div>
<p><code>preschool3414</code> data frame is now in <strong>svy21</strong> projected coordinate system.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb25" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb25-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">st_geometry</span>(preschool3414)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Geometry set for 2290 features 
Geometry type: POINT
Dimension:     XYZ
Bounding box:  xmin: 11810.03 ymin: 25596.33 xmax: 45404.24 ymax: 49300.88
z_range:       zmin: 0 zmax: 0
Projected CRS: SVY21 / Singapore TM
First 5 geometries:</code></pre>
</div>
</div>
<blockquote class="blockquote">
<p>The transformation can be verified by reviewing the x and y extend of the data indicated in the Bounding Box. Most geographic coordinate systems use a 0-360 range of decimal degree. As <code>preschool3414</code> data frame has undergone projection transformation, the x and y extend of the data is now substantially larger than 360.</p>
</blockquote>
</section>
</section>
<section id="importing-and-converting-aspatial-data" class="level2">
<h2 class="anchored" data-anchor-id="importing-and-converting-aspatial-data">Importing and Converting Aspatial Data</h2>
<p>In practice, it is common to come across aspatial data with two fields that capture the x- and y-coordinates of the data points. Aspatial data can be converted from a tibble data frame into a simple feature data frame for further geospatial analysis.</p>
<section id="importing-aspatial-data-as-tibble-data-frame" class="level3">
<h3 class="anchored" data-anchor-id="importing-aspatial-data-as-tibble-data-frame">Importing Aspatial Data as tibble data frame</h3>
<p>The code chunk below uses <code>read_csv()</code> function of <strong>readr</strong> package to import the <code>listings.csv</code> data from Airbnb. The output R object is a tibble data frame called <code>listings</code>.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb27" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb27-1">listings <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">read_csv</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"data/aspatial/listings.csv"</span>)</span></code></pre></div>
</div>
<p>The code chunk below uses <code>list()</code> of <strong>Base R</strong> instead of <code>glimpse()</code> to examine if the data file has been imported correctly.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb28" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb28-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(listings) </span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[[1]]
# A tibble: 3,483 × 18
       id name     host_id host_…¹ neigh…² neigh…³ latit…⁴ longi…⁵ room_…⁶ price
    &lt;dbl&gt; &lt;chr&gt;      &lt;dbl&gt; &lt;chr&gt;   &lt;chr&gt;   &lt;chr&gt;     &lt;dbl&gt;   &lt;dbl&gt; &lt;chr&gt;   &lt;dbl&gt;
 1  71609 Villa i…  367042 Belinda East R… Tampin…    1.35    104. Privat…   150
 2  71896 Home in…  367042 Belinda East R… Tampin…    1.35    104. Privat…    80
 3  71903 Home in…  367042 Belinda East R… Tampin…    1.35    104. Privat…    80
 4 275343 Rental … 1439258 Kay     Centra… Bukit …    1.29    104. Privat…    55
 5 275344 Rental … 1439258 Kay     Centra… Bukit …    1.29    104. Privat…    69
 6 289234 Home in…  367042 Belinda East R… Tampin…    1.34    104. Privat…   220
 7 294281 Rental … 1521514 Elizab… Centra… Newton     1.31    104. Privat…    85
 8 324945 Rental … 1439258 Kay     Centra… Bukit …    1.29    104. Privat…    75
 9 330095 Rental … 1439258 Kay     Centra… Bukit …    1.29    104. Privat…    45
10 369141 Place t… 1521514 Elizab… Centra… Newton     1.31    104. Privat…    79
# … with 3,473 more rows, 8 more variables: minimum_nights &lt;dbl&gt;,
#   number_of_reviews &lt;dbl&gt;, last_review &lt;date&gt;, reviews_per_month &lt;dbl&gt;,
#   calculated_host_listings_count &lt;dbl&gt;, availability_365 &lt;dbl&gt;,
#   number_of_reviews_ltm &lt;dbl&gt;, license &lt;chr&gt;, and abbreviated variable names
#   ¹​host_name, ²​neighbourhood_group, ³​neighbourhood, ⁴​latitude, ⁵​longitude,
#   ⁶​room_type</code></pre>
</div>
</div>
<p>The <code>listing</code> tibble data frame consists of 3483 rows and 18 columns. For the next phase, the columns <code>latitude</code> and <code>longitude</code> will be used.</p>
<blockquote class="blockquote">
<p>The columns <code>latitude</code> and <code>longitude</code> are in decimal degree format, suggesting that the data could be in <strong>wgs84</strong> geographic coordinate system.</p>
</blockquote>
</section>
<section id="converting-tibble-data-frame-to-simple-feature-data-frame" class="level3">
<h3 class="anchored" data-anchor-id="converting-tibble-data-frame-to-simple-feature-data-frame">Converting tibble data frame to simple feature data frame</h3>
<p>The code chunk below converts <code>listing</code> data frame into a simple feature data frame using <code>st_as_sf()</code> of <strong>sf</strong> packages.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb30" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb30-1">listings_sf <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">st_as_sf</span>(listings, </span>
<span id="cb30-2">                       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">coords =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"longitude"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"latitude"</span>),</span>
<span id="cb30-3">                       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">crs=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4326</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb30-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">st_transform</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">crs =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3414</span>)</span></code></pre></div>
</div>
<blockquote class="blockquote">
<p><code>coords</code> argument requires column name of the x-coordinates first followed by the column name of the y-coordinates.</p>
</blockquote>
<blockquote class="blockquote">
<p><code>crs</code> argument requires the coordinate system in EPSG format. EPSG 4326 is <strong>wgs84</strong> geographic coordinate system and EPSG 3414 is <strong>svy21</strong> projected coordinate system. Refer to <a href="epsg.io">epsg.io</a> for other country’s EPSG codes.</p>
</blockquote>
<div class="cell">
<div class="sourceCode cell-code" id="cb31" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb31-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">glimpse</span>(listings_sf)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Rows: 3,483
Columns: 17
$ id                             &lt;dbl&gt; 71609, 71896, 71903, 275343, 275344, 28…
$ name                           &lt;chr&gt; "Villa in Singapore · ★4.44 · 2 bedroom…
$ host_id                        &lt;dbl&gt; 367042, 367042, 367042, 1439258, 143925…
$ host_name                      &lt;chr&gt; "Belinda", "Belinda", "Belinda", "Kay",…
$ neighbourhood_group            &lt;chr&gt; "East Region", "East Region", "East Reg…
$ neighbourhood                  &lt;chr&gt; "Tampines", "Tampines", "Tampines", "Bu…
$ room_type                      &lt;chr&gt; "Private room", "Private room", "Privat…
$ price                          &lt;dbl&gt; 150, 80, 80, 55, 69, 220, 85, 75, 45, 7…
$ minimum_nights                 &lt;dbl&gt; 92, 92, 92, 60, 60, 92, 92, 60, 60, 92,…
$ number_of_reviews              &lt;dbl&gt; 20, 24, 47, 22, 17, 12, 133, 18, 6, 81,…
$ last_review                    &lt;date&gt; 2020-01-17, 2019-10-13, 2020-01-09, 20…
$ reviews_per_month              &lt;dbl&gt; 0.14, 0.16, 0.31, 0.17, 0.12, 0.09, 0.9…
$ calculated_host_listings_count &lt;dbl&gt; 5, 5, 5, 52, 52, 5, 7, 52, 52, 7, 7, 1,…
$ availability_365               &lt;dbl&gt; 89, 89, 89, 275, 274, 89, 365, 365, 365…
$ number_of_reviews_ltm          &lt;dbl&gt; 0, 0, 0, 0, 3, 0, 0, 1, 3, 0, 0, 0, 0, …
$ license                        &lt;chr&gt; NA, NA, NA, "S0399", "S0399", NA, NA, "…
$ geometry                       &lt;POINT [m]&gt; POINT (41972.5 36390.05), POINT (…</code></pre>
</div>
</div>
<p>The table above shows the content of <code>listing_sf</code>. A new column called <code>geometry</code> has been added into the data frame while the <code>longitude</code> and <code>latitude</code> columns have been dropped.</p>
</section>
</section>
<section id="geoprocessing-with-sf-package" class="level2">
<h2 class="anchored" data-anchor-id="geoprocessing-with-sf-package">Geoprocessing with sf package</h2>
<p>Besides providing functions to handling (i.e.&nbsp;importing, exporting, assigning projection, transforming projection etc) geospatial data, <strong>sf</strong> package also offers a wide range of geoprocessing (also known as GIS analysis) functions such as buffering and point-in-polygon count.</p>
<section id="buffering" class="level3">
<h3 class="anchored" data-anchor-id="buffering">Buffering</h3>
<div class="callout callout-style-default callout-important callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Important
</div>
</div>
<div class="callout-body-container callout-body">
<dl>
<dt>Buffer</dt>
<dd>
<p>A defined zone or area created around a geographic feature such as a point, line, or polygon.</p>
</dd>
</dl>
</div>
</div>
<p>The purpose of creating a buffer is to identify and analyze spatial relationships between features within that distance. The buffer is typically measured in units of distance (e.g.&nbsp;meters, kilometers) and represents a specific radius or width around the feature.</p>
<p>Using the <code>CyclingPath</code> data set as an example:</p>
<p>Assuming there are plans to upgrade the exiting cycling path and 5m of reserved land on both sides of the current cycling path must be acquired, <strong>determine the extend of the land needed to be acquired and their total area</strong>.</p>
<p>To do so, <code>st_buffer()</code> of <strong>sf</strong> package is used to compute the 5-meter buffers around cycling paths.</p>
<blockquote class="blockquote">
<p><code>dist</code> argument takes in the numeric buffer distance to be computed.</p>
</blockquote>
<blockquote class="blockquote">
<p><code>nQuadSegs</code> argument refers to ‘the number of segments per quadrant’ and is set by default to 30 (meaning circles created by buffers are composed of 4 × 30 = 120 lines). This argument may be useful to include when the memory consumed by the output of a buffer operation is a major concern (in which case it should be reduced) or when very high precision is needed (in which case it should be increased).</p>
</blockquote>
<div class="cell">
<div class="sourceCode cell-code" id="cb33" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb33-1">buffer_cycling <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">st_buffer</span>(cyclingpath, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">dist=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">nQuadSegs=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">30</span>)</span></code></pre></div>
</div>
<p>This is followed by calculating the area of the buffers then summed up to derive the total land involved.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb34" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb34-1">buffer_cycling<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>AREA <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">st_area</span>(buffer_cycling)</span>
<span id="cb34-2"></span>
<span id="cb34-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sum</span>(buffer_cycling<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>AREA)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>1774367 [m^2]</code></pre>
</div>
</div>
</section>
<section id="point-in-polygon-count" class="level3">
<h3 class="anchored" data-anchor-id="point-in-polygon-count">Point-in-polygon count</h3>
<div class="callout callout-style-default callout-important callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Important
</div>
</div>
<div class="callout-body-container callout-body">
<dl>
<dt>Point-in-polygon count</dt>
<dd>
<p>The number of points in each polygon given a set of points and a set of polygons.</p>
</dd>
</dl>
</div>
</div>
<p>In computational geometry, the point-in-polygon (PIP) problem asks whether a given point in the plane lies inside, outside, or on the boundary of a polygon.</p>
<p>Using the <code>PreSchoolsLocation</code> data set as an example:</p>
<p>Assuming a preschool group wants to study the distribution of preschools in each Planning Subzone, <strong>determine the number and density of preschools within each Planning Subzone</strong>.</p>
<p><code>st_intersects()</code> of <strong>sf</strong> package is used to identify pre-schools located inside each Planning Subzone. <code>lengths()</code> of <strong>Base R</strong> is then used to calculate numbers of pre-schools that fall inside each Subzone and <code>summary()</code> displays the summary statistics of the newly derived <code>PreSch Count</code> field.</p>
<blockquote class="blockquote">
<p><code>st_intersects()</code> and <code>st_intersection()</code> are different! <code>st_intersects</code> provides a logical result that informs whether there is indeed an intersection between two sets of geometries, while <code>st_intersection()</code> perform geometric set operations and provide the intersection, difference or symmetric difference between two sets of geometries.</p>
</blockquote>
<div class="cell">
<div class="sourceCode cell-code" id="cb36" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb36-1">mpsz3414<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">PreSch Count</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lengths</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">st_intersects</span>(mpsz3414, preschool3414))</span>
<span id="cb36-2"></span>
<span id="cb36-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summary</span>(mpsz3414<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">PreSch Count</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
   0.00    0.00    4.00    7.09   10.00   72.00 </code></pre>
</div>
</div>
<p>To list the Planning Subzone with the most number of pre-schools, use <code>top_n()</code> of <strong>dplyr</strong> package.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb38" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb38-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">top_n</span>(mpsz3414, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">PreSch Count</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Simple feature collection with 1 feature and 16 fields
Geometry type: MULTIPOLYGON
Dimension:     XY
Bounding box:  xmin: 39655.33 ymin: 35966 xmax: 42940.57 ymax: 38622.37
Projected CRS: SVY21 / Singapore TM
  OBJECTID SUBZONE_NO     SUBZONE_N SUBZONE_C CA_IND PLN_AREA_N PLN_AREA_C
1      189          2 TAMPINES EAST    TMSZ02      N   TAMPINES         TM
     REGION_N REGION_C          INC_CRC FMEL_UPD_D   X_ADDR   Y_ADDR SHAPE_Leng
1 EAST REGION       ER 21658EAAF84F4D8D 2014-12-05 41122.55 37392.39   10180.62
  SHAPE_Area                       geometry PreSch Count
1    4339824 MULTIPOLYGON (((42196.76 38...           72</code></pre>
</div>
</div>
<p>Next, the code chunk below uses <code>st_area()</code> of <strong>sf</strong> package to derive the area of each Planning Subzone.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb40" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb40-1">mpsz3414<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>Area <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> mpsz3414 <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb40-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">st_area</span>()</span></code></pre></div>
</div>
<p><code>mutate()</code> of <strong>dplyr</strong> package is then used to compute the density.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb41" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb41-1">mpsz3414 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> mpsz3414 <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb41-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">PreSch Density</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">PreSch Count</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>Area <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1000000</span>)</span></code></pre></div>
</div>
</section>
</section>
<section id="exploratory-data-analysis" class="level2">
<h2 class="anchored" data-anchor-id="exploratory-data-analysis">Exploratory Data Analysis</h2>
<p>The use of appropriate <strong>ggplot2</strong> functions can help create functional statistical graphs for EDA purposes.</p>
<section id="histogram-on-preschool-density" class="level3">
<h3 class="anchored" data-anchor-id="histogram-on-preschool-density">Histogram on Preschool Density</h3>
<p>A histogram is plotted using <code>hist()</code> of <strong>R Graphics</strong> to reveal the distribution of <code>PreSch Density</code>.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb42" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb42-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">hist</span>(mpsz3414<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">PreSch Density</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span>)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://geospatial2023.netlify.app/Hands_on_Exercise/Ex1/Hands_on_Ex1a_files/figure-html/unnamed-chunk-28-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<blockquote class="blockquote">
<p>While the syntax is easy to use, there is limited room for further customisation to improve the output to meet publication quality.</p>
</blockquote>
<p>In the code chunk below, appropriate <strong>ggplot2</strong> functions are used including <code>geom_histogram()</code>.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb43" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb43-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data=</span>mpsz3414, </span>
<span id="cb43-2">       <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.numeric</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">PreSch Density</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span>)))<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb43-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_histogram</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">bins=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span>, </span>
<span id="cb43-4">                 <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"white"</span>,</span>
<span id="cb43-5">                 <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"steelblue"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb43-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">title =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Are preschools even distributed in Singapore?"</span>,</span>
<span id="cb43-7">       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">subtitle=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Most Planning Subzones have a low preschool density (&lt;10 preschools per km sq)</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">One Planning Subzone has a preschool density of &gt;30 preschools per km sq"</span>,</span>
<span id="cb43-8">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Preschool density (per km sq)"</span>,</span>
<span id="cb43-9">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Frequency"</span>)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://geospatial2023.netlify.app/Hands_on_Exercise/Ex1/Hands_on_Ex1a_files/figure-html/unnamed-chunk-29-1.png" class="img-fluid" width="672"></p>
</div>
</div>
</section>
<section id="scatterplot-between-preschool-density-and-preschool-count" class="level3">
<h3 class="anchored" data-anchor-id="scatterplot-between-preschool-density-and-preschool-count">Scatterplot between Preschool Density and Preschool Count</h3>
<p>In the code chunk below, <code>geom_point()</code> is used to plot a scatterplot between Preschool Density and Preschool Count.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb44" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb44-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data=</span>mpsz3414, </span>
<span id="cb44-2">       <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">PreSch Count</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span>, </span>
<span id="cb44-3">           <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.numeric</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">PreSch Density</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span>)))<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb44-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"steelblue"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb44-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">xlim</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">40</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb44-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ylim</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">40</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb44-7">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">title =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Scatterplot of Preschool Density and Preschool Count"</span>,</span>
<span id="cb44-8">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Pre-school density (per km sq)"</span>,</span>
<span id="cb44-9">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Pre-school count"</span>)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://geospatial2023.netlify.app/Hands_on_Exercise/Ex1/Hands_on_Ex1a_files/figure-html/unnamed-chunk-30-1.png" class="img-fluid" width="672"></p>
</div>
</div>


</section>
</section>

 ]]></description>
  <guid>https://geospatial2023.netlify.app/Hands_on_Exercise/Ex1/Hands_on_Ex1a.html</guid>
  <pubDate>Thu, 16 Nov 2023 16:00:00 GMT</pubDate>
</item>
<item>
  <title>1b: Choropleth Mapping with R</title>
  <dc:creator>Magdalene Chan</dc:creator>
  <link>https://geospatial2023.netlify.app/Hands_on_Exercise/Ex1/Hands_on_Ex1b.html</link>
  <description><![CDATA[ 



<p>A <strong>choropleth map</strong> is a type of thematic map in which areas are shaded or patterned in proportion to a statistical variable that represents an aggregate summary of a geographic characteristic within each area, such as population or per-capita income. For example, the spatial distribution of aged population of Singapore could be represented on a choropleth map using the Master Plan 2014 Subzone Boundary. In R, choropleth maps can be plotted using the <strong>tmap</strong> package.</p>
<section id="getting-started" class="level2">
<h2 class="anchored" data-anchor-id="getting-started">Getting started</h2>
<p>The code chunk below uses <code>p_load()</code> of <strong>pacman</strong> package to check if the required packages have been installed on the computer. If they are, the packages will be launched.</p>
<ul>
<li><strong>sf</strong> package is used for importing, managing, and processing geospatial data.</li>
<li><strong>tmap</strong> package is used for thematic mapping.</li>
</ul>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1">pacman<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">p_load</span>(sf, tmap, tidyverse)</span></code></pre></div>
</div>
<p>The data sets used are:</p>
<ul>
<li>Master Plan 2014 Subzone Boundary (Web) (last updated Dec 2014) from <a href="https://beta.data.gov.sg/collections/1708/view">data.gov.sg</a> retrieved on 17 Nov 2023</li>
<li>Singapore Residents by Planning Area / Subzone, Age Group, Sex and Type of Dwelling, June 2011-2020 from <a href="https://www.singstat.gov.sg/find-data/search-by-theme/population/geographic-distribution/latest-data">Department of Statistics</a> retrieved on 17 Nov 2023</li>
</ul>
</section>
<section id="importing-data" class="level2">
<h2 class="anchored" data-anchor-id="importing-data">Importing Data</h2>
<section id="import-geospatial-data-into-r" class="level3">
<h3 class="anchored" data-anchor-id="import-geospatial-data-into-r">Import Geospatial data into R</h3>
<p>The code chunk below uses the <code>st_read()</code> function of <strong>sf</strong> package to import <code>MP14_SUBZONE_WEB_PL</code> shapefile into R as a simple feature data frame called <code>mpsz</code>.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1">mpsz <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">st_read</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">dsn =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"data/geospatial"</span>, </span>
<span id="cb2-2">                <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">layer =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"MP14_SUBZONE_WEB_PL"</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Reading layer `MP14_SUBZONE_WEB_PL' from data source 
  `C:\magdalenecjw\ISSS624 Geospatial\Hands_on_Exercise\Ex1\data\geospatial' 
  using driver `ESRI Shapefile'
Simple feature collection with 323 features and 15 fields
Geometry type: MULTIPOLYGON
Dimension:     XY
Bounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33
Projected CRS: SVY21</code></pre>
</div>
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1">mpsz</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Simple feature collection with 323 features and 15 fields
Geometry type: MULTIPOLYGON
Dimension:     XY
Bounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33
Projected CRS: SVY21
First 10 features:
   OBJECTID SUBZONE_NO       SUBZONE_N SUBZONE_C CA_IND      PLN_AREA_N
1         1          1    MARINA SOUTH    MSSZ01      Y    MARINA SOUTH
2         2          1    PEARL'S HILL    OTSZ01      Y          OUTRAM
3         3          3       BOAT QUAY    SRSZ03      Y SINGAPORE RIVER
4         4          8  HENDERSON HILL    BMSZ08      N     BUKIT MERAH
5         5          3         REDHILL    BMSZ03      N     BUKIT MERAH
6         6          7  ALEXANDRA HILL    BMSZ07      N     BUKIT MERAH
7         7          9   BUKIT HO SWEE    BMSZ09      N     BUKIT MERAH
8         8          2     CLARKE QUAY    SRSZ02      Y SINGAPORE RIVER
9         9         13 PASIR PANJANG 1    QTSZ13      N      QUEENSTOWN
10       10          7       QUEENSWAY    QTSZ07      N      QUEENSTOWN
   PLN_AREA_C       REGION_N REGION_C          INC_CRC FMEL_UPD_D   X_ADDR
1          MS CENTRAL REGION       CR 5ED7EB253F99252E 2014-12-05 31595.84
2          OT CENTRAL REGION       CR 8C7149B9EB32EEFC 2014-12-05 28679.06
3          SR CENTRAL REGION       CR C35FEFF02B13E0E5 2014-12-05 29654.96
4          BM CENTRAL REGION       CR 3775D82C5DDBEFBD 2014-12-05 26782.83
5          BM CENTRAL REGION       CR 85D9ABEF0A40678F 2014-12-05 26201.96
6          BM CENTRAL REGION       CR 9D286521EF5E3B59 2014-12-05 25358.82
7          BM CENTRAL REGION       CR 7839A8577144EFE2 2014-12-05 27680.06
8          SR CENTRAL REGION       CR 48661DC0FBA09F7A 2014-12-05 29253.21
9          QT CENTRAL REGION       CR 1F721290C421BFAB 2014-12-05 22077.34
10         QT CENTRAL REGION       CR 3580D2AFFBEE914C 2014-12-05 24168.31
     Y_ADDR SHAPE_Leng SHAPE_Area                       geometry
1  29220.19   5267.381  1630379.3 MULTIPOLYGON (((31495.56 30...
2  29782.05   3506.107   559816.2 MULTIPOLYGON (((29092.28 30...
3  29974.66   1740.926   160807.5 MULTIPOLYGON (((29932.33 29...
4  29933.77   3313.625   595428.9 MULTIPOLYGON (((27131.28 30...
5  30005.70   2825.594   387429.4 MULTIPOLYGON (((26451.03 30...
6  29991.38   4428.913  1030378.8 MULTIPOLYGON (((25899.7 297...
7  30230.86   3275.312   551732.0 MULTIPOLYGON (((27746.95 30...
8  30222.86   2208.619   290184.7 MULTIPOLYGON (((29351.26 29...
9  29893.78   6571.323  1084792.3 MULTIPOLYGON (((20996.49 30...
10 30104.18   3454.239   631644.3 MULTIPOLYGON (((24472.11 29...</code></pre>
</div>
</div>
<blockquote class="blockquote">
<p>Calling the <code>mpsz</code> simple feature data frame will only display the first 10 rows. This makes it much easier to work with large data and prevents R from attempting to display every row of a data frame.</p>
</blockquote>
</section>
<section id="import-attribute-data-into-r" class="level3">
<h3 class="anchored" data-anchor-id="import-attribute-data-into-r">Import Attribute data into R</h3>
<p>The code chunk below uses the <code>read_csv()</code> function of <strong>readr</strong> package to import <code>respopagesextod2011to2020.csv</code> file into R and save it as a R dataframe called <code>popdata</code>.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb6-1">popdata <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">read_csv</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"data/aspatial/respopagesextod2011to2020.csv"</span>)</span></code></pre></div>
</div>
</section>
<section id="data-preparation" class="level3">
<h3 class="anchored" data-anchor-id="data-preparation">Data Preparation</h3>
<p>Before a thematic map can be prepared, <code>popdata</code> is converted into a data table with year 2020 values and includes the following variables:</p>
<ul>
<li><code>YOUNG</code>: age group 0 to 4 until age groyup 20 to 24,</li>
<li><code>ECONOMY ACTIVE</code>: age group 25-29 until age group 60-64,</li>
<li><code>AGED</code>: age group 65 and above,</li>
<li><code>TOTAL</code>: all age group, and</li>
<li><code>DEPENDENCY</code>: the ratio between young and aged against economy active group.</li>
</ul>
<p>The following data wrangling and transformation functions are used: <code>pivot_wider()</code> of <strong>tidyr</strong> package, and <code>mutate()</code>, <code>filter()</code>, <code>group_by()</code> and <code>select()</code> of <strong>dplyr</strong> package.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb7-1">popdata2020 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> popdata <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb7-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(Time <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2020</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb7-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">group_by</span>(PA, SZ, AG) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb7-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summarise</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">POP</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sum</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Pop</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb7-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ungroup</span>()<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb7-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pivot_wider</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">names_from=</span>AG, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">values_from=</span>POP) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb7-7">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">YOUNG =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rowSums</span>(.[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>])<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rowSums</span>(.[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span>])) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb7-8">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ECONOMY ACTIVE</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rowSums</span>(.[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">11</span>])<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rowSums</span>(.[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">13</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">15</span>]))<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb7-9">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">AGED</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rowSums</span>(.[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">21</span>])) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb7-10">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">TOTAL</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rowSums</span>(.[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">21</span>])) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span>  </span>
<span id="cb7-11">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">DEPENDENCY</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> (<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">YOUNG</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">AGED</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ECONOMY ACTIVE</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb7-12">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">select</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">PA</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">SZ</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">YOUNG</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ECONOMY ACTIVE</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">AGED</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">TOTAL</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">DEPENDENCY</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span>)</span></code></pre></div>
</div>
</section>
<section id="joining-attribute-and-geospatial-data" class="level3">
<h3 class="anchored" data-anchor-id="joining-attribute-and-geospatial-data">Joining Attribute and Geospatial data</h3>
<p>Before performing the georelational join, an extra step is required to convert the values in <code>PA</code> and <code>SZ</code> fields to uppercase as the values of <code>PA</code> and <code>SZ</code> fields consist of upper and lowercase while the <code>SUBZONE_N</code> and <code>PLN_AREA_N</code> columns are entirely in uppercase.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb8-1">popdata2020 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> popdata2020 <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb8-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">across</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">where</span>(is.character), toupper)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb8-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ECONOMY ACTIVE</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span></code></pre></div>
</div>
<p>Next, <code>left_join()</code> of <strong>dplyr</strong> is used to join the geographical data and attribute table using Planning Subzone name i.e.&nbsp;SUBZONE_N and SZ as the common identifier.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb9-1">mpsz_pop2020 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">left_join</span>(mpsz, popdata2020,</span>
<span id="cb9-2">                          <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">by =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"SUBZONE_N"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"SZ"</span>))</span></code></pre></div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb10-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">write_rds</span>(mpsz_pop2020, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"data/rds/mpszpop2020.rds"</span>)</span></code></pre></div>
</div>
</section>
</section>
<section id="choropleth-mapping-geospatial-data-using-tmap" class="level2">
<h2 class="anchored" data-anchor-id="choropleth-mapping-geospatial-data-using-tmap">Choropleth Mapping Geospatial Data Using tmap</h2>
<p>Two approaches can be used to prepare thematic maps using the <strong>tmap</strong> package:</p>
<ul>
<li>Plotting a thematic map quickly by using <code>qtm()</code>.</li>
<li>Plotting a highly customisable thematic map by using <strong>tmap</strong> elements.</li>
</ul>
<section id="plotting-a-choropleth-map-quickly-by-using-qtm" class="level3">
<h3 class="anchored" data-anchor-id="plotting-a-choropleth-map-quickly-by-using-qtm">Plotting a choropleth map quickly by using qtm()</h3>
<p><code>qtm()</code> is the easiest and quickest to draw a choropleth map using <strong>tmap</strong> as it is concise and provides a good default visualisation in many cases. The code chunk below will draw a cartographic standard choropleth map as shown below.</p>
<blockquote class="blockquote">
<p><code>tmap_mode()</code> with <code>plot</code> option produces a static map. For interactive mode, <code>view</code> option should be used.</p>
</blockquote>
<blockquote class="blockquote">
<p><code>fill</code> argument is used to map the attribute of interest.</p>
</blockquote>
<div class="cell">
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb11-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tmap_mode</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"plot"</span>)</span>
<span id="cb11-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">qtm</span>(mpsz_pop2020, </span>
<span id="cb11-3">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"DEPENDENCY"</span>)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://geospatial2023.netlify.app/Hands_on_Exercise/Ex1/Hands_on_Ex1b_files/figure-html/unnamed-chunk-8-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<blockquote class="blockquote">
<p>However, when using <code>qtm()</code>, aesthetics of individual layers are harder to control. To draw a high quality cartographic choropleth map, <strong>tmap</strong> drawing elements should be used.</p>
</blockquote>
</section>
<section id="drawing-base-map-using-tmap-elements" class="level3">
<h3 class="anchored" data-anchor-id="drawing-base-map-using-tmap-elements">Drawing Base Map using tmap elements</h3>
<p>The basic building block of <strong>tmap</strong> is <code>tm_shape()</code> followed by one or more layer elements such as <code>tm_fill()</code> and <code>tm_polygons()</code>. In the code chunk below, <code>tm_shape()</code> is used to define the input data (i.e <code>mpsz_pop2020</code>) and <code>tm_polygons()</code> is used to draw the Planning Subzone polygons.</p>
<p>To draw a choropleth map showing the geographical distribution of a selected variable by Planning Subzone, assign the target variable such as <code>Dependency</code> to <code>tm_polygons()</code>.</p>
<blockquote class="blockquote">
<p>The default interval binning used to draw the choropleth map is <code>pretty</code>. <strong>tmap</strong> provides a total ten data classification methods, namely: fixed, sd, equal, pretty (default), quantile, kmeans, hclust, bclust, fisher, and jenks.</p>
</blockquote>
<blockquote class="blockquote">
<p>By default, missing values will be shaded in grey.</p>
</blockquote>
<div class="cell">
<div class="sourceCode cell-code" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb12-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tm_shape</span>(mpsz_pop2020) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb12-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tm_polygons</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"DEPENDENCY"</span>)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://geospatial2023.netlify.app/Hands_on_Exercise/Ex1/Hands_on_Ex1b_files/figure-html/unnamed-chunk-9-1.png" class="img-fluid" width="672"></p>
</div>
</div>
</section>
<section id="drawing-a-choropleth-map-using-tm_fill-and-tm_border" class="level3">
<h3 class="anchored" data-anchor-id="drawing-a-choropleth-map-using-tm_fill-and-tm_border">Drawing a choropleth map using <code>tm_fill()</code> and <code>tm_border()</code></h3>
<p><code>tm_polygons()</code> is a wrapper of <code>tm_fill()</code> and <code>tm_border()</code>. <code>tm_fill()</code> shades the polygons using the default colour scheme and <code>tm_borders()</code> adds the borders of the shapefile onto the choropleth map.</p>
<p>The code chunk below draws a choropleth map by using <code>tm_fill()</code> alone, and the Planning Subzones are shaded according to the respective <code>DEPENDENCY</code> values.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb13-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tm_shape</span>(mpsz_pop2020)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb13-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tm_fill</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"DEPENDENCY"</span>)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://geospatial2023.netlify.app/Hands_on_Exercise/Ex1/Hands_on_Ex1b_files/figure-html/unnamed-chunk-10-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<p><code>tm_borders()</code> adds light grey borders on the boundary of the Planning Subzones.</p>
<blockquote class="blockquote">
<p>The <code>alpha</code> argument is used to define transparency number between 0 (totally transparent) and 1 (not transparent). By default, the <code>alpha</code> value of the col is used (normally 1). Other arguments that can be specified include <code>col</code> = border colour, <code>lwd</code> = border line width (default = 1), and <code>lty</code> = border line type (default = ‘solid’).</p>
</blockquote>
<div class="cell">
<div class="sourceCode cell-code" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb14-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tm_shape</span>(mpsz_pop2020)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb14-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tm_fill</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"DEPENDENCY"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb14-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tm_borders</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">lwd =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.1</span>,  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">alpha =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://geospatial2023.netlify.app/Hands_on_Exercise/Ex1/Hands_on_Ex1b_files/figure-html/unnamed-chunk-11-1.png" class="img-fluid" width="672"></p>
</div>
</div>
</section>
<section id="data-classification-methods-of-tmap" class="level3">
<h3 class="anchored" data-anchor-id="data-classification-methods-of-tmap">Data Classification Methods of tmap</h3>
<p>Choropleth maps can be either classified or unclassified:</p>
<ul>
<li>Classed choropleth maps: The point of classification is to take a large number of observations and group them into data ranges or classes. To define a data classification method, use the <code>style</code> argument of <code>tm_fill()</code> or <code>tm_polygons()</code>.</li>
<li>Unclassed choropleth maps: Similar to classed choropleth maps but they do not have an averaged statistic towards each particular colour.</li>
</ul>
<p>There are many methods of choosing classes and could be based on the nature of distribution (e.g.&nbsp;quantile, equal interval, natural breaks) or arbitrary (e.g.&nbsp;fixed round numbers, census housing categories).</p>
<div class="tabset-margin-container"></div><div class="panel-tabset">
<ul class="nav nav-tabs"><li class="nav-item"><a class="nav-link active" id="tabset-1-1-tab" data-bs-toggle="tab" data-bs-target="#tabset-1-1" aria-controls="tabset-1-1" aria-selected="true">Equal: 5 classes</a></li><li class="nav-item"><a class="nav-link" id="tabset-1-2-tab" data-bs-toggle="tab" data-bs-target="#tabset-1-2" aria-controls="tabset-1-2" aria-selected="false">Standard Deviation: 5 classes</a></li><li class="nav-item"><a class="nav-link" id="tabset-1-3-tab" data-bs-toggle="tab" data-bs-target="#tabset-1-3" aria-controls="tabset-1-3" aria-selected="false">Quantile: 5 classes</a></li><li class="nav-item"><a class="nav-link" id="tabset-1-4-tab" data-bs-toggle="tab" data-bs-target="#tabset-1-4" aria-controls="tabset-1-4" aria-selected="false">Jenks: 5 classes</a></li><li class="nav-item"><a class="nav-link" id="tabset-1-5-tab" data-bs-toggle="tab" data-bs-target="#tabset-1-5" aria-controls="tabset-1-5" aria-selected="false">KMeans: 5 classes</a></li><li class="nav-item"><a class="nav-link" id="tabset-1-6-tab" data-bs-toggle="tab" data-bs-target="#tabset-1-6" aria-controls="tabset-1-6" aria-selected="false">Fisher: 5 classes</a></li></ul>
<div class="tab-content">
<div id="tabset-1-1" class="tab-pane active" aria-labelledby="tabset-1-1-tab">
<div class="cell">
<div class="sourceCode cell-code" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb15-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tm_shape</span>(mpsz_pop2020)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb15-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tm_fill</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"DEPENDENCY"</span>,</span>
<span id="cb15-3">          <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>,</span>
<span id="cb15-4">          <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">style =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"equal"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb15-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tm_borders</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">alpha =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://geospatial2023.netlify.app/Hands_on_Exercise/Ex1/Hands_on_Ex1b_files/figure-html/unnamed-chunk-12-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<blockquote class="blockquote">
<p>The <code>equal</code> style divides the attribute values into equally sized classes. In variables with a skewed distribution or there are a couple of very large outliers, the resulting map is likely to end up with empty classes with little colour diversity.</p>
</blockquote>
</div>
<div id="tabset-1-2" class="tab-pane" aria-labelledby="tabset-1-2-tab">
<div class="cell">
<div class="sourceCode cell-code" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb16-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tm_shape</span>(mpsz_pop2020)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb16-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tm_fill</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"DEPENDENCY"</span>,</span>
<span id="cb16-3">          <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>,</span>
<span id="cb16-4">          <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">style =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"sd"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb16-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tm_borders</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">alpha =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://geospatial2023.netlify.app/Hands_on_Exercise/Ex1/Hands_on_Ex1b_files/figure-html/unnamed-chunk-13-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<blockquote class="blockquote">
<p>The <code>sd</code> style calculates a standard deviation of a given variable, and next use this value as the break width. It is a measure of dispersion and suitable for use if the distribution approximates a normal distribution.</p>
</blockquote>
</div>
<div id="tabset-1-3" class="tab-pane" aria-labelledby="tabset-1-3-tab">
<div class="cell">
<div class="sourceCode cell-code" id="cb17" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb17-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tm_shape</span>(mpsz_pop2020)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb17-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tm_fill</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"DEPENDENCY"</span>,</span>
<span id="cb17-3">          <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>,</span>
<span id="cb17-4">          <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">style =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"quantile"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb17-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tm_borders</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">alpha =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://geospatial2023.netlify.app/Hands_on_Exercise/Ex1/Hands_on_Ex1b_files/figure-html/unnamed-chunk-14-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<blockquote class="blockquote">
<p>The <code>quantile</code> style creates breaks with the same number of features per class.</p>
</blockquote>
</div>
<div id="tabset-1-4" class="tab-pane" aria-labelledby="tabset-1-4-tab">
<div class="cell">
<div class="sourceCode cell-code" id="cb18" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb18-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tm_shape</span>(mpsz_pop2020)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb18-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tm_fill</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"DEPENDENCY"</span>,</span>
<span id="cb18-3">          <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>,</span>
<span id="cb18-4">          <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">style =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"jenks"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb18-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tm_borders</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">alpha =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://geospatial2023.netlify.app/Hands_on_Exercise/Ex1/Hands_on_Ex1b_files/figure-html/unnamed-chunk-15-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<blockquote class="blockquote">
<p>The Jenks optimization method, also called the Jenks natural breaks classification method, is a data clustering method designed to determine the best arrangement of values into different classes. This is done by seeking to minimize each class’s average deviation from the class mean, while maximizing each class’s deviation from the means of the other classes. In other words, the method seeks to reduce the variance within classes and maximize the variance between classes.</p>
</blockquote>
</div>
<div id="tabset-1-5" class="tab-pane" aria-labelledby="tabset-1-5-tab">
<div class="cell">
<div class="sourceCode cell-code" id="cb19" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb19-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tm_shape</span>(mpsz_pop2020)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb19-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tm_fill</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"DEPENDENCY"</span>,</span>
<span id="cb19-3">          <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>,</span>
<span id="cb19-4">          <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">style =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"kmeans"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb19-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tm_borders</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">alpha =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://geospatial2023.netlify.app/Hands_on_Exercise/Ex1/Hands_on_Ex1b_files/figure-html/unnamed-chunk-16-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<blockquote class="blockquote">
<p>Classification by KMeans Clustering is somewhat similar to natural breaks (Jenks), except that KMeans looks for centres of clusters of features with similar attribute values rather than looking for breaks between feature attribute values.</p>
</blockquote>
</div>
<div id="tabset-1-6" class="tab-pane" aria-labelledby="tabset-1-6-tab">
<div class="cell">
<div class="sourceCode cell-code" id="cb20" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb20-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tm_shape</span>(mpsz_pop2020)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb20-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tm_fill</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"DEPENDENCY"</span>,</span>
<span id="cb20-3">          <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>,</span>
<span id="cb20-4">          <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">style =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"fisher"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb20-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tm_borders</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">alpha =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://geospatial2023.netlify.app/Hands_on_Exercise/Ex1/Hands_on_Ex1b_files/figure-html/unnamed-chunk-17-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<blockquote class="blockquote">
<p>The <code>fisher</code> style creates groups with maximalized homogeneity.</p>
</blockquote>
</div>
</div>
</div>
<div class="callout callout-style-default callout-warning callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Warning
</div>
</div>
<div class="callout-body-container callout-body">
<p>In this example, the distribution of equal data classification method is substantially less evenly distributed than the quantile data classification method. The distribution of the variable and the objectives of the analysis are important factors that should be considered when deciding on the data classification method to use.</p>
</div>
</div>
<div class="tabset-margin-container"></div><div class="panel-tabset">
<ul class="nav nav-tabs"><li class="nav-item"><a class="nav-link active" id="tabset-2-1-tab" data-bs-toggle="tab" data-bs-target="#tabset-2-1" aria-controls="tabset-2-1" aria-selected="true">Equal: 2 classes</a></li><li class="nav-item"><a class="nav-link" id="tabset-2-2-tab" data-bs-toggle="tab" data-bs-target="#tabset-2-2" aria-controls="tabset-2-2" aria-selected="false">Equal: 6 classes</a></li><li class="nav-item"><a class="nav-link" id="tabset-2-3-tab" data-bs-toggle="tab" data-bs-target="#tabset-2-3" aria-controls="tabset-2-3" aria-selected="false">Equal: 10 classes</a></li><li class="nav-item"><a class="nav-link" id="tabset-2-4-tab" data-bs-toggle="tab" data-bs-target="#tabset-2-4" aria-controls="tabset-2-4" aria-selected="false">Equal: 20 classes</a></li><li class="nav-item"><a class="nav-link" id="tabset-2-5-tab" data-bs-toggle="tab" data-bs-target="#tabset-2-5" aria-controls="tabset-2-5" aria-selected="false">Quantile: 2 classes</a></li><li class="nav-item"><a class="nav-link" id="tabset-2-6-tab" data-bs-toggle="tab" data-bs-target="#tabset-2-6" aria-controls="tabset-2-6" aria-selected="false">Quantile: 6 classes</a></li><li class="nav-item"><a class="nav-link" id="tabset-2-7-tab" data-bs-toggle="tab" data-bs-target="#tabset-2-7" aria-controls="tabset-2-7" aria-selected="false">Quantile: 10 classes</a></li><li class="nav-item"><a class="nav-link" id="tabset-2-8-tab" data-bs-toggle="tab" data-bs-target="#tabset-2-8" aria-controls="tabset-2-8" aria-selected="false">Quantile: 20 classes</a></li></ul>
<div class="tab-content">
<div id="tabset-2-1" class="tab-pane active" aria-labelledby="tabset-2-1-tab">
<div class="cell">
<div class="sourceCode cell-code" id="cb21" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb21-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tm_shape</span>(mpsz_pop2020)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb21-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tm_fill</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"DEPENDENCY"</span>,</span>
<span id="cb21-3">          <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>,</span>
<span id="cb21-4">          <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">style =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"equal"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb21-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tm_borders</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">alpha =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://geospatial2023.netlify.app/Hands_on_Exercise/Ex1/Hands_on_Ex1b_files/figure-html/unnamed-chunk-18-1.png" class="img-fluid" width="672"></p>
</div>
</div>
</div>
<div id="tabset-2-2" class="tab-pane" aria-labelledby="tabset-2-2-tab">
<div class="cell">
<div class="sourceCode cell-code" id="cb22" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb22-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tm_shape</span>(mpsz_pop2020)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb22-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tm_fill</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"DEPENDENCY"</span>,</span>
<span id="cb22-3">          <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>,</span>
<span id="cb22-4">          <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">style =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"equal"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb22-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tm_borders</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">alpha =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://geospatial2023.netlify.app/Hands_on_Exercise/Ex1/Hands_on_Ex1b_files/figure-html/unnamed-chunk-19-1.png" class="img-fluid" width="672"></p>
</div>
</div>
</div>
<div id="tabset-2-3" class="tab-pane" aria-labelledby="tabset-2-3-tab">
<div class="cell">
<div class="sourceCode cell-code" id="cb23" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb23-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tm_shape</span>(mpsz_pop2020)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb23-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tm_fill</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"DEPENDENCY"</span>,</span>
<span id="cb23-3">          <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>,</span>
<span id="cb23-4">          <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">style =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"equal"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb23-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tm_borders</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">alpha =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://geospatial2023.netlify.app/Hands_on_Exercise/Ex1/Hands_on_Ex1b_files/figure-html/unnamed-chunk-20-1.png" class="img-fluid" width="672"></p>
</div>
</div>
</div>
<div id="tabset-2-4" class="tab-pane" aria-labelledby="tabset-2-4-tab">
<div class="cell">
<div class="sourceCode cell-code" id="cb24" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb24-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tm_shape</span>(mpsz_pop2020)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb24-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tm_fill</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"DEPENDENCY"</span>,</span>
<span id="cb24-3">          <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span>,</span>
<span id="cb24-4">          <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">style =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"equal"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb24-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tm_borders</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">alpha =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://geospatial2023.netlify.app/Hands_on_Exercise/Ex1/Hands_on_Ex1b_files/figure-html/unnamed-chunk-21-1.png" class="img-fluid" width="672"></p>
</div>
</div>
</div>
<div id="tabset-2-5" class="tab-pane" aria-labelledby="tabset-2-5-tab">
<div class="cell">
<div class="sourceCode cell-code" id="cb25" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb25-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tm_shape</span>(mpsz_pop2020)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb25-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tm_fill</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"DEPENDENCY"</span>,</span>
<span id="cb25-3">          <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>,</span>
<span id="cb25-4">          <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">style =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"quantile"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb25-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tm_borders</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">alpha =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://geospatial2023.netlify.app/Hands_on_Exercise/Ex1/Hands_on_Ex1b_files/figure-html/unnamed-chunk-22-1.png" class="img-fluid" width="672"></p>
</div>
</div>
</div>
<div id="tabset-2-6" class="tab-pane" aria-labelledby="tabset-2-6-tab">
<div class="cell">
<div class="sourceCode cell-code" id="cb26" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb26-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tm_shape</span>(mpsz_pop2020)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb26-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tm_fill</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"DEPENDENCY"</span>,</span>
<span id="cb26-3">          <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>,</span>
<span id="cb26-4">          <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">style =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"quantile"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb26-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tm_borders</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">alpha =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://geospatial2023.netlify.app/Hands_on_Exercise/Ex1/Hands_on_Ex1b_files/figure-html/unnamed-chunk-23-1.png" class="img-fluid" width="672"></p>
</div>
</div>
</div>
<div id="tabset-2-7" class="tab-pane" aria-labelledby="tabset-2-7-tab">
<div class="cell">
<div class="sourceCode cell-code" id="cb27" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb27-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tm_shape</span>(mpsz_pop2020)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb27-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tm_fill</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"DEPENDENCY"</span>,</span>
<span id="cb27-3">          <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>,</span>
<span id="cb27-4">          <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">style =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"quantile"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb27-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tm_borders</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">alpha =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://geospatial2023.netlify.app/Hands_on_Exercise/Ex1/Hands_on_Ex1b_files/figure-html/unnamed-chunk-24-1.png" class="img-fluid" width="672"></p>
</div>
</div>
</div>
<div id="tabset-2-8" class="tab-pane" aria-labelledby="tabset-2-8-tab">
<div class="cell">
<div class="sourceCode cell-code" id="cb28" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb28-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tm_shape</span>(mpsz_pop2020)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb28-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tm_fill</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"DEPENDENCY"</span>,</span>
<span id="cb28-3">          <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span>,</span>
<span id="cb28-4">          <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">style =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"quantile"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb28-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tm_borders</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">alpha =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://geospatial2023.netlify.app/Hands_on_Exercise/Ex1/Hands_on_Ex1b_files/figure-html/unnamed-chunk-25-1.png" class="img-fluid" width="672"></p>
</div>
</div>
</div>
</div>
</div>
<blockquote class="blockquote">
<p>Increasing the number of classes may not always be beneficial for the analysis: In the <code>equal</code> data classification method, the additional classes added more colours to the legend without meaningful impact on the map. For <code>quantile</code> data classification method, the additional number of classes appeared to be useful up until around n=10 – beyond that, again, the additional colours did not value-add to the map.</p>
</blockquote>
</section>
<section id="plotting-choropleth-map-with-custom-breaks-fixed-data-classification" class="level3">
<h3 class="anchored" data-anchor-id="plotting-choropleth-map-with-custom-breaks-fixed-data-classification">Plotting choropleth map with custom breaks (Fixed Data Classification)</h3>
<p>For all the built-in styles, the category breaks are computed internally. In order to override these defaults, the breakpoints can be set explicitly by means of the breaks argument to the <code>tm_fill()</code>.</p>
<blockquote class="blockquote">
<p>In <strong>tmap</strong>, the breaks include a minimum and maximum. Hence, for n categories, n+1 elements must be specified in the breaks option in increasing order.</p>
</blockquote>
<p>Descriptive statistics on the variable can be used to guide the setting of the break points.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb29" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb29-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summary</span>(mpsz_pop2020<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>DEPENDENCY)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>   Min. 1st Qu.  Median    Mean 3rd Qu.    Max.    NA's 
 0.0000  0.6519  0.7025  0.7742  0.7645 19.0000      92 </code></pre>
</div>
</div>
<p>With reference to the results above, we set break point at 0.60, 0.65, 0.70, 0.75 and 0.80. In addition, we also need to include a minimum and maximum, which we set at 0 and 100. Hence, we set the <code>breaks</code> vector as <code>c(0, 0.60, 0.65, 0.70, 0.75, 0.80, 1.00)</code>.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb31" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb31-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tm_shape</span>(mpsz_pop2020)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb31-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tm_fill</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"DEPENDENCY"</span>,</span>
<span id="cb31-3">          <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">breaks =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.60</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.65</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.70</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.75</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.80</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.00</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb31-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tm_borders</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">alpha =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://geospatial2023.netlify.app/Hands_on_Exercise/Ex1/Hands_on_Ex1b_files/figure-html/unnamed-chunk-27-1.png" class="img-fluid" width="672"></p>
</div>
</div>
</section>
<section id="colour-scheme" class="level3">
<h3 class="anchored" data-anchor-id="colour-scheme">Colour Scheme</h3>
<p><strong>tmap</strong> supports colour ramps either defined by the user or a set of predefined colour ramps from the <strong>RColorBrewer</strong> package. To change the colour, assign the preferred colour to palette argument of <code>tm_fill()</code> as shown in the code chunk below.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb32" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb32-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tm_shape</span>(mpsz_pop2020)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb32-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tm_fill</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"DEPENDENCY"</span>,</span>
<span id="cb32-3">          <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>,</span>
<span id="cb32-4">          <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">style =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"jenks"</span>,</span>
<span id="cb32-5">          <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">palette =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Blues"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb32-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tm_borders</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">alpha =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://geospatial2023.netlify.app/Hands_on_Exercise/Ex1/Hands_on_Ex1b_files/figure-html/unnamed-chunk-28-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>To reverse the colour shading, add a “-” prefix.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb33" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb33-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tm_shape</span>(mpsz_pop2020)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb33-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tm_fill</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"DEPENDENCY"</span>,</span>
<span id="cb33-3">          <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>,</span>
<span id="cb33-4">          <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">style =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"jenks"</span>,</span>
<span id="cb33-5">          <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">palette =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"-Blues"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb33-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tm_borders</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">alpha =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://geospatial2023.netlify.app/Hands_on_Exercise/Ex1/Hands_on_Ex1b_files/figure-html/unnamed-chunk-29-1.png" class="img-fluid" width="672"></p>
</div>
</div>
</section>
<section id="map-layouts" class="level3">
<h3 class="anchored" data-anchor-id="map-layouts">Map Layouts</h3>
<p>Map layout refers to the combination of all map elements into a cohensive map. Map elements include among others the objects to be mapped, the title, the scale bar, the compass, margins and aspects ratios. Colour settings and data classification methods covered in the previous section relate to the palette and break-points are used to affect how the map looks. In <strong>tmap</strong>, several legend options are provided to change the placement, format and appearance of the legend.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb34" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb34-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tm_shape</span>(mpsz_pop2020)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb34-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tm_fill</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"DEPENDENCY"</span>, </span>
<span id="cb34-3">          <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">style =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"jenks"</span>, </span>
<span id="cb34-4">          <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">palette =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Blues"</span>, </span>
<span id="cb34-5">          <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">legend.hist =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>, </span>
<span id="cb34-6">          <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">legend.is.portrait =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>,</span>
<span id="cb34-7">          <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">legend.hist.z =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.1</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb34-8">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tm_layout</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">main.title =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Distribution of Dependency Ratio by planning subzone </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">(Jenks classification)"</span>,</span>
<span id="cb34-9">            <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">main.title.position =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"center"</span>,</span>
<span id="cb34-10">            <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">main.title.size =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,</span>
<span id="cb34-11">            <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">legend.height =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.45</span>, </span>
<span id="cb34-12">            <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">legend.width =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.35</span>,</span>
<span id="cb34-13">            <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">legend.outside =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>,</span>
<span id="cb34-14">            <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">legend.position =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"right"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bottom"</span>),</span>
<span id="cb34-15">            <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">frame =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb34-16">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tm_borders</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">alpha =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://geospatial2023.netlify.app/Hands_on_Exercise/Ex1/Hands_on_Ex1b_files/figure-html/unnamed-chunk-30-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<p><strong>tmap</strong> allows a wide variety of layout settings to be changed. They can be called by using <code>tmap_style()</code>. The code chunk below uses the <code>classic</code> style.</p>
<blockquote class="blockquote">
<p>Other available styles are: “white”, “gray”, “natural”, “cobalt”, “col_blind”, “albatross”, “beaver”, “bw”, “watercolor”.</p>
</blockquote>
<blockquote class="blockquote">
<p>To reset to the default style use <code>tmap_style("white")</code>.</p>
</blockquote>
<div class="cell">
<div class="sourceCode cell-code" id="cb35" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb35-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tm_shape</span>(mpsz_pop2020)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb35-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tm_fill</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"DEPENDENCY"</span>, </span>
<span id="cb35-3">          <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">style =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"quantile"</span>, </span>
<span id="cb35-4">          <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">palette =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"-Greens"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb35-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tm_borders</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">alpha =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb35-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tmap_style</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"classic"</span>)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://geospatial2023.netlify.app/Hands_on_Exercise/Ex1/Hands_on_Ex1b_files/figure-html/unnamed-chunk-31-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>Beside map style, <strong>tmap</strong> also also provides arguments to draw other map furniture such as compass using <code>tm_compass()</code>, scale bar using <code>tm_scale_bar()</code> and grid lines using <code>tm_grid()</code>.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb36" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb36-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tm_shape</span>(mpsz_pop2020)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb36-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tm_fill</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"DEPENDENCY"</span>, </span>
<span id="cb36-3">          <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">style =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"quantile"</span>, </span>
<span id="cb36-4">          <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">palette =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Blues"</span>,</span>
<span id="cb36-5">          <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">title =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"No. of persons"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb36-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tm_layout</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">main.title =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Distribution of Dependency Ratio </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">by planning subzone"</span>,</span>
<span id="cb36-7">            <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">main.title.position =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"center"</span>,</span>
<span id="cb36-8">            <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">main.title.size =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.2</span>,</span>
<span id="cb36-9">            <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">legend.height =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.45</span>, </span>
<span id="cb36-10">            <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">legend.width =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.35</span>,</span>
<span id="cb36-11">            <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">frame =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb36-12">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tm_borders</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">alpha =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb36-13">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tm_compass</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">type=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"8star"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb36-14">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tm_scale_bar</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">width =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.15</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb36-15">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tm_grid</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">lwd =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.1</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">alpha =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.2</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb36-16">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tm_credits</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Source: Planning Subzone boundary from Urban Redevelopment Authorithy (URA)</span></span>
<span id="cb36-17"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">             and Population data from Department of Statistics DOS"</span>, </span>
<span id="cb36-18">             <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">position =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"left"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bottom"</span>))</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://geospatial2023.netlify.app/Hands_on_Exercise/Ex1/Hands_on_Ex1b_files/figure-html/unnamed-chunk-32-1.png" class="img-fluid" width="672"></p>
</div>
</div>
</section>
<section id="small-multiple-choropleth-maps-facet-choropleth-maps" class="level3">
<h3 class="anchored" data-anchor-id="small-multiple-choropleth-maps-facet-choropleth-maps">Small Multiple Choropleth Maps (Facet Choropleth Maps)</h3>
<p>Small multiple maps, also referred to as facet maps, are composed of many maps arrange side-by-side, and sometimes stacked vertically. Small multiple maps enable the visualisation of how spatial relationships change with respect to another variable, such as time.</p>
<p>In <strong>tmap</strong>, small multiple maps can be plotted in three ways:</p>
<ul>
<li>by assigning multiple values to at least one of the aesthetic arguments,</li>
<li>by defining a group-by variable in <code>tm_facets()</code>, and</li>
<li>by creating multiple stand-alone maps with <code>tmap_arrange()</code>.</li>
</ul>
<div class="tabset-margin-container"></div><div class="panel-tabset">
<ul class="nav nav-tabs"><li class="nav-item"><a class="nav-link active" id="tabset-3-1-tab" data-bs-toggle="tab" data-bs-target="#tabset-3-1" aria-controls="tabset-3-1" aria-selected="true">By assigning multiple values to aesthetic arguments</a></li><li class="nav-item"><a class="nav-link" id="tabset-3-2-tab" data-bs-toggle="tab" data-bs-target="#tabset-3-2" aria-controls="tabset-3-2" aria-selected="false">By defining a group-by variable in tm_facets()</a></li><li class="nav-item"><a class="nav-link" id="tabset-3-3-tab" data-bs-toggle="tab" data-bs-target="#tabset-3-3" aria-controls="tabset-3-3" aria-selected="false">By creating multiple stand-alone maps with tmap_arrange()</a></li></ul>
<div class="tab-content">
<div id="tabset-3-1" class="tab-pane active" aria-labelledby="tabset-3-1-tab">
<p>Small multiple choropleth maps can be created by defining <code>ncols</code> in <code>tm_fill()</code>.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb37" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb37-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tm_shape</span>(mpsz_pop2020)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb37-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tm_fill</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"YOUNG"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"AGED"</span>),</span>
<span id="cb37-3">          <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">style =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"equal"</span>, </span>
<span id="cb37-4">          <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">palette =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Blues"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb37-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tm_layout</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">legend.position =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"right"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bottom"</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb37-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tm_borders</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">alpha =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb37-7">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tmap_style</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"white"</span>)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://geospatial2023.netlify.app/Hands_on_Exercise/Ex1/Hands_on_Ex1b_files/figure-html/unnamed-chunk-33-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>It is also possible to assign multiple values to at least one of the aesthetic arguments.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb38" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb38-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tm_shape</span>(mpsz_pop2020)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb38-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tm_polygons</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"DEPENDENCY"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"AGED"</span>),</span>
<span id="cb38-3">          <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">style =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"equal"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"quantile"</span>), </span>
<span id="cb38-4">          <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">palette =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Blues"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Purples"</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb38-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tm_layout</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">legend.position =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"right"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bottom"</span>))</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://geospatial2023.netlify.app/Hands_on_Exercise/Ex1/Hands_on_Ex1b_files/figure-html/unnamed-chunk-34-1.png" class="img-fluid" width="672"></p>
</div>
</div>
</div>
<div id="tabset-3-2" class="tab-pane" aria-labelledby="tabset-3-2-tab">
<p>Small multiple choropleth maps can be created by using <code>tm_facets()</code>.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb39" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb39-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tm_shape</span>(mpsz_pop2020) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb39-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tm_fill</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"DEPENDENCY"</span>,</span>
<span id="cb39-3">          <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">style =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"quantile"</span>,</span>
<span id="cb39-4">          <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">palette =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Blues"</span>,</span>
<span id="cb39-5">          <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">thres.poly =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb39-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tm_facets</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">by=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"REGION_N"</span>, </span>
<span id="cb39-7">            <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">free.coords=</span><span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>, </span>
<span id="cb39-8">            <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">drop.shapes=</span><span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb39-9">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tm_layout</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">legend.show =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>,</span>
<span id="cb39-10">            <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">title.position =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"center"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"center"</span>), </span>
<span id="cb39-11">            <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">title.size =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb39-12">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tm_borders</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">alpha =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://geospatial2023.netlify.app/Hands_on_Exercise/Ex1/Hands_on_Ex1b_files/figure-html/unnamed-chunk-35-1.png" class="img-fluid" width="672"></p>
</div>
</div>
</div>
<div id="tabset-3-3" class="tab-pane" aria-labelledby="tabset-3-3-tab">
<p>Small multiple choropleth maps can be created by creating multiple stand-alone maps with <code>tmap_arrange()</code>.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb40" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb40-1">youngmap <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tm_shape</span>(mpsz_pop2020)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb40-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tm_polygons</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"YOUNG"</span>, </span>
<span id="cb40-3">              <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">style =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"quantile"</span>, </span>
<span id="cb40-4">              <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">palette =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Blues"</span>)</span>
<span id="cb40-5"></span>
<span id="cb40-6">agedmap <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tm_shape</span>(mpsz_pop2020)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb40-7">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tm_polygons</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"AGED"</span>, </span>
<span id="cb40-8">              <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">style =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"quantile"</span>, </span>
<span id="cb40-9">              <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">palette =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Blues"</span>)</span>
<span id="cb40-10"></span>
<span id="cb40-11"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tmap_arrange</span>(youngmap, agedmap, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">asp=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ncol=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://geospatial2023.netlify.app/Hands_on_Exercise/Ex1/Hands_on_Ex1b_files/figure-html/unnamed-chunk-36-1.png" class="img-fluid" width="672"></p>
</div>
</div>
</div>
</div>
</div>
</section>
<section id="mappping-spatial-object-meeting-a-selection-criterion" class="level3">
<h3 class="anchored" data-anchor-id="mappping-spatial-object-meeting-a-selection-criterion">Mappping Spatial Object Meeting a Selection Criterion</h3>
<p>Instead of creating small multiple choropleth map, it is also possible to use selection function to map spatial objects meeting the selection criterion.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb41" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb41-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tm_shape</span>(mpsz_pop2020[mpsz_pop2020<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>REGION_N<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"CENTRAL REGION"</span>, ])<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb41-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tm_fill</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"DEPENDENCY"</span>, </span>
<span id="cb41-3">          <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">style =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"quantile"</span>, </span>
<span id="cb41-4">          <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">palette =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Blues"</span>, </span>
<span id="cb41-5">          <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">legend.hist =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>, </span>
<span id="cb41-6">          <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">legend.is.portrait =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>,</span>
<span id="cb41-7">          <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">legend.hist.z =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.1</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb41-8">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tm_layout</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">legend.outside =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>,</span>
<span id="cb41-9">            <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">legend.height =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.45</span>, </span>
<span id="cb41-10">            <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">legend.width =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">5.0</span>,</span>
<span id="cb41-11">            <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">legend.position =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"right"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bottom"</span>),</span>
<span id="cb41-12">            <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">frame =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb41-13">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tm_borders</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">alpha =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://geospatial2023.netlify.app/Hands_on_Exercise/Ex1/Hands_on_Ex1b_files/figure-html/unnamed-chunk-37-1.png" class="img-fluid" width="672"></p>
</div>
</div>


</section>
</section>

 ]]></description>
  <guid>https://geospatial2023.netlify.app/Hands_on_Exercise/Ex1/Hands_on_Ex1b.html</guid>
  <pubDate>Thu, 16 Nov 2023 16:00:00 GMT</pubDate>
</item>
<item>
  <title>3: Spatial Interaction Models</title>
  <dc:creator>Magdalene Chan</dc:creator>
  <link>https://geospatial2023.netlify.app/Hands_on_Exercise/Ex3/Hands_on_Ex3.html</link>
  <description><![CDATA[ 



<p>Placeholder</p>



 ]]></description>
  <guid>https://geospatial2023.netlify.app/Hands_on_Exercise/Ex3/Hands_on_Ex3.html</guid>
  <pubDate>Fri, 01 Dec 2023 07:17:50 GMT</pubDate>
</item>
<item>
  <title>4: Geographically Weighted Regression</title>
  <dc:creator>Magdalene Chan</dc:creator>
  <link>https://geospatial2023.netlify.app/Hands_on_Exercise/Ex4/Hands_on_Ex4.html</link>
  <description><![CDATA[ 



<p>Placeholder</p>



 ]]></description>
  <guid>https://geospatial2023.netlify.app/Hands_on_Exercise/Ex4/Hands_on_Ex4.html</guid>
  <pubDate>Fri, 01 Dec 2023 07:17:50 GMT</pubDate>
</item>
<item>
  <title>Take Home Exercise 2</title>
  <dc:creator>Magdalene Chan</dc:creator>
  <link>https://geospatial2023.netlify.app/Take_Home_Exercise/Ex2/Take_home_Ex2.html</link>
  <description><![CDATA[ 



<p>Placeholder</p>



 ]]></description>
  <guid>https://geospatial2023.netlify.app/Take_Home_Exercise/Ex2/Take_home_Ex2.html</guid>
  <pubDate>Fri, 01 Dec 2023 07:17:50 GMT</pubDate>
</item>
</channel>
</rss>
